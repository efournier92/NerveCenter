{"version":3,"sources":["main.js","dashboard/dashboard.controller.js","profile/profile.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/authentication.service.js","common/services/data.service.js","dashboard/utilityModal/utilityModal.component.js","dashboard/utilityModal/utilityModal.controller.js","dashboard/widgets/gridster.options.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":[],"mappingstvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('nerveCenter', ['ngRoute', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', 'gridster', 'pr.longpress']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'dashboard/dashboard.view.html',\n        controller: 'dashboardCtrl as $ctrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('nerveCenter')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', '$uibModal', 'authentication', run]);\n\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('dashboardCtrl', dashboardCtrl);\n\n  function dashboardCtrl($scope, $uibModal, $log, $document) {\n    var $ctrl = this;\n    $ctrl.items = ['item1', 'item2', 'item3'];\n\n    $ctrl.open = function (size, parentSelector) {\n      var parentElem = parentSelector ? \n        angular.element($document[0].querySelector('.modal-demo')) : undefined;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'myModalContent.html',\n        controller: 'utilityModalCtrl',\n        controllerAs: '$ctrl',\n        size: size,\n        appendTo: parentElem,\n        resolve: {\n          items: function () {\n            return $ctrl.items;\n          }\n        }\n      });\n    };\n\n    $ctrl.onLongPress = function () {\n      $ctrl.open();\n    };\n\n    $scope.widgets = [\n      { sizeX: 1,\n        sizeY: 1,\n        row: 0,\n        col: 0,\n        url: \"https://www.google.com/\",\n        icon: \"img/Google.png\" },\n        { sizeX: 1,\n          sizeY: 1,\n          row: 0,\n          col: 1,\n          url: \"http://en.wikipedia.org/wiki/Main_Page\",\n          icon: \"img/Wiki.png\" },\n          { sizeX: 1,\n            sizeY: 1,\n            row: 0,\n            col: 2,\n            url: \"http://cake.whatbox.ca:57094/\",\n            icon: \"img/RTorrent.png\" },\n            { sizeX: 1,\n              sizeY: 1,\n              row: 0,\n              col: 3,\n              url: \"https://github.com/\",\n              icon: \"img/GitHub.png\" },\n              { sizeX: 1,\n                sizeY: 1,\n                row: 0,\n                col: 4,\n                url: \"https://twitter.com\",\n                icon: \"img/Twitter.png\" },\n                { sizeX: 1,\n                  sizeY: 1,\n                  row: 1,\n                  col: 0,\n                  url: \"https://www.google.com/imghp?hl=en&tab=wi&ei=KA6OU4CWBtDisATKzoKwBA&ved=0CAQQqi4oAg\",\n                  icon: \"img/Image.png\" },\n                  { sizeX: 1,\n                    sizeY: 1,\n                    row: 1,\n                    col: 1,\n                    url: \"https://getpocket.com/a/queue/list/\",\n                    icon: \"img/ReadLater.png\" },\n                    { sizeX: 1,\n                      sizeY: 1,\n                      row: 1,\n                      col: 2,\n                      url: \"http://www.youtube.com/\",\n                      icon: \"img/Tube.png\" },\n                      { sizeX: 1,\n                        sizeY: 1,\n                        row: 1,\n                        col: 3,\n                        url: \"https://app.simplenote.com/\",\n                        icon: \"img/Notes.png\" },\n                        { sizeX: 1,\n                          sizeY: 1,\n                          row: 1,\n                          col: 4,\n                          url: \"https://www.linkedin.com\",\n                          icon: \"img/Linked.png\" },\n                          { sizeX: 1,\n                            sizeY: 1,\n                            row: 1,\n                            col: 5,\n                            url: \"http://www.cnn.com/\",\n                            icon: \"img/CNN.png\" },\n    ];\n\n    $scope.gridOptions = gridsterOptions; \n  };\n})();\n","(function() {\n  \n  angular\n    .module('nerveCenter')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n","(function () {\n\n  angular\n  .module('nerveCenter')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .component('modalComponent', {\n      templateUrl: 'myModalContent.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n      controller: function () {\n        var $ctrl = this;\n\n        $ctrl.$onInit = function () {\n          $ctrl.items = $ctrl.resolve.items;\n          $ctrl.selected = {\n            item: $ctrl.items[0]\n          };\n        };\n\n        $ctrl.ok = function () {\n          $ctrl.close({$value: $ctrl.selected.item});\n        };\n\n        $ctrl.cancel = function () {\n          $ctrl.dismiss({$value: 'cancel'});\n        };\n      }\n    });\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('utilityModalCtrl', utilityModalCtrl);\n  \n  function utilityModalCtrl($uibModalInstance, items) {\n    var $ctrl = this;\n    $ctrl.items = items;\n    $ctrl.selected = {\n      item: $ctrl.items[0]\n    };\n\n    $ctrl.ok = function () {\n      $uibModalInstance.close($ctrl.selected.item);\n    };\n\n    $ctrl.cancel = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n  };\n\n})();\n","const gridsterOptions = {\n  columns: 5,\n  pushing: true,\n  floating: true,\n  swapping: true,\n  width: 'auto',\n  colWidth: 'auto',\n  rowHeight: 'match',\n  margins: [10, 10],\n  outerMargin: true,\n  sparse: false,\n  isMobile: false,\n  mobileBreakPoint: 600,\n  mobileModeEnabled: true,\n  minColumns: 1,\n  minRows: 1,\n  maxRows: 100,\n  defaultSizeX: 1,\n  defaultSizeY: 1,\n  minSizeX: 1,\n  maxSizeX: null,\n  minSizeY: 1,\n  maxSizeY: null,\n  resizable: {\n    enabled: false,\n    handles: ['n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'],\n    start: function(event, $element, widget) {},\n    resize: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  },\n  draggable: {\n    enabled: false,\n    handle: '.my-class',\n    start: function(event, $element, widget) {},\n    drag: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  }\n};\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n"]}