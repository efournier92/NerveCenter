{"version":3,"sources":["main.js","dashboard/dashboard.controller.js","profile/profile.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/auth.service.js","common/services/data.service.js","common/services/updateWidgets.service.js","dashboard/utilityModal/utilityModal.component.js","dashboard/utilityModal/utilityModal.controller.js","dashboard/widgets/gridster.options.js","dashboard/widgets/widget.controller.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":[],"mappingsvhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function () {\n  angular.module('nerveCenter',\n    ['ngRoute', 'ngAnimate', 'ngSanitize',\n      'ui.bootstrap', 'gridster', 'pr.longpress', 'pg-ng-dropdown']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'dashboard/dashboard.view.html',\n        controller: 'dashboardCtrl as $ctrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/user', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, $http, auth) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !auth.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('nerveCenter')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', '$uibModal', 'auth', run]);\n\n})();\n","(function() { \n\n  angular\n    .module('nerveCenter')\n    .controller('dashboardCtrl', dashboardCtrl);\n\n  function dashboardCtrl($scope, $http, $location, $uibModal, $log, $document, meanData, auth) {\n    var $dash = this;\n\n    $dash.widgets = {};\n    $scope.$watch('widgets', function(widgets){\n      console.log(\"changed\");\n    }, true);\n\n$scope.logIt = function(url) {\n  console.log(\"logged: \", url);\n}\n    $scope.icons = [\n      {name: \"wiki\", img: \"Wiki\"},\n      {name: \"BNK\", img: \"Bank\"},\n      {name: \"GitHub\", img: \"GitHub\"},\n      {name: \"Notes\", img: \"Notes\"}\n    ];\n\n    // jQuery(\"body select\").msDropDown();\n\n    function updateWidgets() {\n      meanData.getProfile()\n        .success(function(data) {\n          $dash.widgets = data.widgets;\n        })\n        .error(function(e) {\n          console.log(e);\n        })\n        .finally(function() {\n          $scope.widgets = angular.fromJson($dash.widgets);\n          $scope.gridOptions = gridOptions;\n        });\n    }\n\n    updateWidgets();\n\n    $scope.saveWidgets = function() {\n      data = \"{}\";\n\n      meanData.updateWidgets()\n        .success(function(data) {\n          $dash.widgets = data.widgets;\n        })\n        .error(function(e) {\n          console.log(e);\n        })\n        .finally(function() {\n          // $scope.widgets = angular.fromJson($dash.widgets);\n          // $scope.gridOptions = gridOptions;\n        });\n    }\n\n    $scope.update = function() {\n      id = auth.currentUser().id;\n      console.log(id);\n      $http.put('/api/user/' + $scope.contact._id, $scope.contact)\n        .success(function(response) {\n          refresh();\n        })\n    };\n\n    $dash.open = function(size, parentSelector) {\n      var parentElem = parentSelector ? \n        angular.element($document[0].querySelector('.modal-demo')) : undefined;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'myModalContent.html',\n        controller: 'utilityModalCtrl',\n        controllerAs: '$dash',\n        size: size,\n        appendTo: parentElem,\n        resolve: {\n          items: function() {\n            return $dash.items;\n          }\n        }\n      });\n    };\n\n    $dash.onLongPress = function() {\n      $dash.open();\n    };\n  };\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'auth'];\n  function loginCtrl($location, auth) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function() {\n      auth\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'auth'];\n  function registerCtrl($location, auth) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      auth\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('auth', auth);\n\n  auth.$inject = ['$http', '$window'];\n  function auth($http, $window) {\n\n    var saveToken = function(token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function() {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          id : payload._id,\n          email : payload.email,\n          name : payload.name,\n          widgets : payload.widgets\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'auth'];\n  function meanData($http, auth) {\n\n    var getProfile = function() {\n      return $http.get('/api/user', {\n        headers: {\n          Authorization: 'Bearer '+ auth.getToken()\n        }\n      });\n    };\n\n    var updateWidgets = function() {\n      $http({\n        method: 'PUT',\n        url: '/api/user/' + auth.currentUser().id,\n        headers: {\n          Authorization: 'Bearer ' + auth.getToken()\n        },\n        data: {'STRING!': 'string'} \n      }).then(function successCallback(res) {\n        console.log(\"Widget Updated:\", res)\n      }, function errorCallback(res) {\n        if(res.status = 401){\n          console.error(\"Unauthorized User\")\n        }\n      });\n      return $http.put('/api/user/' + auth.currentUser().id, {\n        headers: {\n          Authorization: 'Bearer '+ auth.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile,\n      updateWidgets: updateWidgets\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('getWidgets', getWidgets);\n\n  function getWidgets(ngResource, globalsService) {\n    var widgetsResource = ngResource(\"/api/widget\", {},\n      {\n        \"put\": {\"method\": \"PUT\", \"params\": {\"action\": \"Put\"} }\n      });\n    return configResource;\n  };\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .component('modalComponent', {\n      templateUrl: 'myModalContent.html',\n      bindings: {\n        resolve: '<',\n        close: '&',\n        dismiss: '&'\n      },\n\n      controller: function () {\n        var $dash = this;\n\n        $dash.$onInit = function () {\n          $dash.items = $dash.resolve.items;\n          $dash.selected = {\n            item: $dash.items[0]\n          };\n        };\n\n        $dash.ok = function () {\n          $dash.close({$value: $dash.selected.item});\n        };\n\n        $dash.cancel = function () {\n          $dash.dismiss({$value: 'cancel'});\n        };\n      }\n    });\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('utilityModalCtrl', utilityModalCtrl);\n  \n  function utilityModalCtrl($uibModalInstance, items) {\n    var $dash = this;\n\n    $dash.ok = function() {\n      $uibModalInstance.close($dash.selected.item);\n    };\n\n    $dash.cancel = function() {\n      $uibModalInstance.dismiss('cancel');\n    };\n  };\n\n})();\n\n","var gridOptions = {\n  columns: 5,\n  pushing: true,\n  floating: true,\n  swapping: true,\n  width: 'auto',\n  colWidth: 'auto',\n  rowHeight: 'match',\n  margins: [10, 10],\n  outerMargin: true,\n  sparse: false,\n  isMobile: false,\n  mobileBreakPoint: 600,\n  mobileModeEnabled: false,\n  minColumns: 1,\n  minRows: 1,\n  maxRows: 100,\n  defaultSizeX: 1,\n  defaultSizeY: 1,\n  minSizeX: 1,\n  maxSizeX: null,\n  minSizeY: 1,\n  maxSizeY: null,\n  resizable: {\n    enabled: false,\n    handles: ['n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'],\n    start: function(event, $element, widget) {},\n    resize: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  },\n  draggable: {\n    enabled: false,\n    handle: '.my-class',\n    start: function(event, $element, widget) {},\n    drag: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  }\n};\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('widgetsCtrl', widgetsCtrl);\n\n  widgetsCtrl.$inject = ['$location', 'meanData'];\n  function widgetsCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user.widgets = data;\n      })\n      .error(function(e) {\n        console.log(e);\n      });\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location', 'auth'];\n  function navigationCtrl($location, auth) {\n    var vm = this;\n    vm.isLoggedIn = auth.isLoggedIn();\n    vm.currentUser = auth.currentUser();\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n\n"]}