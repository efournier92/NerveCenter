{"version":3,"sources":["main.js","common/selectText.directive.js","dashboard/dashboard.controller.js","profile/profile.controller.js","auth/register/register.controller.js","common/services/auth.service.js","common/services/data.service.js","common/services/updateWidgets.service.js","dashboard/login/login.controller.js","dashboard/utilityModal/mainModal.controller.js","dashboard/widgets/allIcons.js","dashboard/widgets/gridster.options.js","dashboard/widgets/gridsterModal.options.js","dashboard/widgets/updateWidgets.service.js","dashboard/widgets/widget.controller.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function () {\n  angular.module('nerveCenter',\n    ['ngRoute', 'ngAnimate', 'ngSanitize', 'ui.bootstrap',\n     'gridster', 'pr.longpress']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'dashboard/dashboard.view.html',\n        controller: 'dashboardCtrl as $ctrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/user', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, $http, auth) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !auth.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('nerveCenter')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', '$uibModal', 'auth', run]);\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .directive('selectText', selectText);\n\n  function selectText($window) {\n    return {\n      link: function(scope, element) {\n        element.on('click', function() {\n          var selection = $window.getSelection();        \n          var range = document.createRange();\n          range.selectNodeContents(element[0]);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        });\n      }\n    }\n  }\n\n})();\n\n","(function() { \n\n  angular\n    .module('nerveCenter')\n    .controller('dashboardCtrl', dashboardCtrl);\n\n  function dashboardCtrl($scope, $http, $location, \n    $uibModal, $log, $document, $filter, meanData, auth) {\n    var $dash = this;\n\n\n    $scope.deleteEnabled = false;\n\n    $dash.widgets = {};\n    $scope.$watch('widgets', function(widgets){\n      console.log(\"changed:\", $scope.widgets);\n    }, true);\n\n    $scope.allIcons = allIcons;\n    $scope.gridsterModalOptions = gridsterModalOptions;\n\n    $scope.selectedIcon = \"img/_blank.png\";\n    $scope.selectIcon = function(iconUrl) {\n      $scope.selectedIcon = iconUrl;\n    }\n\n    function instantiateGridster() {\n      var width = this.window.innerWidth;\n      var adjustedGridOptions = gridOptions;\n      if (width > 1000) {\n        adjustedGridOptions.columns = 7; \n      } else if (width > 500) {\n        adjustedGridOptions.columns = 6; \n      } else {\n        adjustedGridOptions.columns = 2; \n      }\n      return adjustedGridOptions;\n    }\n\n    $scope.importWidgets = function() {\n      $scope.widgets = angular.fromJson($scope.widgetString);\n      $scope.saveWidgets();\n    } \n    function updateWidgets() {\n      meanData.getProfile()\n        .success(function(data) {\n          $dash.widgets = data.widgets;\n        })\n        .error(function() {\n          $scope.openLoginModal();\n        })\n        .finally(function() {\n          $scope.widgets = angular.fromJson($dash.widgets);\n          $scope.gridOptions = instantiateGridster();\n        });\n    }\n    $scope.saveWidgets = function() {\n      data = $scope.widgets;\n      meanData.updateWidgets(data)\n        .success(function(data) {\n          console.log(\"Success!: \", data)\n        })\n        .error(function(e) {\n          console.log(e);\n        });\n    }\n\n    updateWidgets();\n\n    $scope.saveAfterDrag = function() {\n      console.log($element.scope().gridster.grid);\n    }\n\n    $scope.widgetString = angular.toJson($scope.widgets);\n\n    $scope.toggleDrag = function() {\n      if ($scope.gridOptions.draggable.enabled == false) {\n        $scope.gridOptions.draggable.enabled = true;\n      } else {\n        $scope.gridOptions.draggable.enabled = false;\n        $scope.saveWidgets();\n      }\n      console.log($scope.widgets);\n    }\n\n    $scope.createWidget = function() {\n      var widgetUrl = $scope.widgetUrl;\n      var widgetWeight = $scope.widgetWeight;\n      var widgetIcon = $scope.selectedIcon;\n      if (!widgetUrl || !widgetWeight) {\n        //TODO: handle exception in UI\n        console.log(\"ERROR\");\n        return;\n      }\n\n      var newWidget = {\n        row: widgetWeight,\n        col: widgetWeight,\n        icon: widgetIcon,\n        row: widgetRow,\n        sizeX: 1,\n        sizeY: 1,\n        url: widgetUrl \n      }\n\n      $scope.widgets.push(newWidget);\n      $scope.saveWidgets();\n    }\n\n    $scope.deleteWidget = function(widget) {\n      $scope.deleteEnabled = true;\n      $scope.widgets.splice(index, 1);\n      $scope.saveWidgets();\n    }\n\n    $scope.update = function() {\n      id = auth.currentUser().id;\n      console.log(id);\n      $http.put('/api/user/' + $scope.contact._id, $scope.contact)\n        .success(function(response) {\n          refresh();\n        })\n    };\n\n    $scope.closeModal = function() {\n      $dash.dismiss('cancel');\n    };\n\n    $scope.openMainModal = function(size, parentSelector) {\n      size = 'lg';\n      var parentElem = parentSelector ? \n        angular.element($document[0].querySelector('.modal-demo')) : undefined;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'mainModal.html',\n        controller: 'mainModalCtrl',\n        controllerAs: '$ctrl',\n        size: size,\n        appendTo: parentElem,\n        resolve: {\n          items: function() {\n            return $dash.items;\n          }\n        }\n      });\n    };\n\n    $scope.openLoginModal = function(size, parentSelector) {\n      var parentElem = parentSelector ? \n        angular.element($document[0].querySelector('.modal-demo')) : undefined;\n      var modalInstance = $uibModal.open({\n        animation: true,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'loginModal.html',\n        controller: 'loginCtrl',\n        controllerAs: '$reg',\n        size: size,\n        appendTo: parentElem,\n        resolve: {\n          items: function() {\n            return $dash.items;\n          }\n        }\n      });\n    };\n\n    $dash.onLongPress = function() {\n      $scope.openMainModal();\n    };\n\n    $scope.logIt = function(obj) {\n      console.log(obj); \n    };\n  };\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'auth'];\n  function registerCtrl($location, auth) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      auth\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('auth', auth);\n\n  auth.$inject = ['$http', '$window'];\n  function auth($http, $window) {\n\n    var saveToken = function(token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function() {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          id : payload._id,\n          email : payload.email,\n          name : payload.name,\n          widgets : payload.widgets\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'auth'];\n  function meanData($http, auth) {\n\n    var getProfile = function() {\n      return $http.get('/api/user', {\n        headers: {\n          Authorization: 'Bearer '+ auth.getToken()\n        }\n      });\n    };\n\n    var updateWidgets = function(data) {\n      return $http.put('/api/user', data, {\n        headers: {\n          Authorization: 'Bearer '+ auth.getToken()\n        }\n      });\n      // $http({\n      //   method: 'PUT',\n      //   url: '/api/user/' ,\n      //   headers: {\n      //     Authorization: 'Bearer ' + auth.getToken()\n      //   },\n      //   data: {'STRING!': 'string'} \n      // }).then(function successCallback(res) {\n      //   console.log(\"Widget Updated:\", res)\n      // }, function errorCallback(res) {\n      //   if(res.status = 401){\n      //     console.error(\"Unauthorized User\")\n      //   }\n      // });\n      // return $http.put('/api/user/' + auth.currentUser().id, {\n      //   headers: {\n      //     Authorization: 'Bearer '+ auth.getToken()\n      //   }\n      // });\n    };\n\n    return {\n      getProfile : getProfile,\n      updateWidgets: updateWidgets\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('getWidgets', getWidgets);\n\n  function getWidgets(ngResource, globalsService) {\n    var widgetsResource = ngResource(\"/api/widget\", {},\n      {\n        \"put\": {\"method\": \"PUT\", \"params\": {\"action\": \"Put\"} }\n      });\n    return configResource;\n  };\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'auth'];\n  function loginCtrl($location, auth) {\n    var $reg = this;\n\n    $reg.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    $reg.onSubmit = function() {\n      auth\n        .login($reg.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('mainModalCtrl', mainModalCtrl);\n\n  function mainModalCtrl($uibModalInstance, items) {\n    var $ctrl = this;\n\n    $ctrl.ok = function() {\n      $uibModalInstance.close($dash.selected.item);\n    };\n\n    $ctrl.cancel = function() {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n  };\n\n})();\n\n","var allIcons = [\n  { icon:\"img/BNK.png\" },\n  { icon:\"img/CNN.png\" },\n  { icon:\"img/Drive.png\" },\n  { icon:\"img/FreePress.png\" },\n  { icon:\"img/GitHub.png\" },\n  { icon:\"img/Google.png\" },\n  { icon:\"img/Image.png\" },\n  { icon:\"img/Indeed.png\" },\n  { icon:\"img/Launch.png\" },\n  { icon:\"img/Linked.png\" },\n  { icon:\"img/Notes.png\" },\n  { icon:\"img/ReadLater.png\" },\n  { icon:\"img/RTorrent.png\" },\n  { icon:\"img/Slack.png\" },\n  { icon:\"img/Tape.png\" },\n  { icon:\"img/Trend.png\" },\n  { icon:\"img/Tube.png\" },\n  { icon:\"img/Twitter.png\" },\n  { icon:\"img/Wiki.png\" }\n];\n","var gridOptions = {\n  columns: 7,\n  pushing: true,\n  floating: true,\n  swapping: true,\n  width: 'auto',\n  colWidth: 'auto',\n  rowHeight: 'match',\n  margins: [10, 10],\n  outerMargin: true,\n  sparse: false,\n  isMobile: false,\n  mobileBreakPoint: 600,\n  mobileModeEnabled: false,\n  defaultSizeX: 1,\n  defaultSizeY: 1,\n  resizable: {\n    enabled: false,\n  },\n  draggable: {\n    enabled: false,\n    stop: function(event, $element, widget) {\n      console.log($element.scope().gridster.grid);\n      // console.log($element.scope().gridster.grid);\n    }\n  }\n};\n\n","var gridsterModalOptions = {\n  columns: 6,\n  pushing: true,\n  floating: true,\n  swapping: true,\n  width: 'auto',\n  colWidth: 'auto',\n  rowHeight: 'match',\n  margins: [10, 10],\n  outerMargin: true,\n  sparse: false,\n  isMobile: false,\n  mobileBreakPoint: 600,\n  mobileModeEnabled: false,\n  minColumns: 1,\n  minRows: 1,\n  maxRows: 100,\n  defaultSizeX: 1,\n  defaultSizeY: 1,\n  minSizeX: 1,\n  maxSizeX: null,\n  minSizeY: 1,\n  maxSizeY: null,\n  resizable: {\n    enabled: false,\n    handles: ['n', 'e', 's', 'w', 'ne', 'se', 'sw', 'nw'],\n    start: function(event, $element, widget) {},\n    resize: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  },\n  draggable: {\n    enabled: false,\n    handle: '.my-class',\n    start: function(event, $element, widget) {},\n    drag: function(event, $element, widget) {},\n    stop: function(event, $element, widget) {}\n  }\n};\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .service('updateWidgets', updateWidgets);\n\n  function updateWidgets() {\n\n\n    var updateWidgets = function(data) {\n      return $http.put('/api/user', data, {\n        headers: {\n          Authorization: 'Bearer '+ auth.getToken()\n        }\n      });\n      // $http({\n      //   method: 'PUT',\n      //   url: '/api/user/' ,\n      //   headers: {\n      //     Authorization: 'Bearer ' + auth.getToken()\n      //   },\n      //   data: {'STRING!': 'string'} \n      // }).then(function successCallback(res) {\n      //   console.log(\"Widget Updated:\", res)\n      // }, function errorCallback(res) {\n      //   if(res.status = 401){\n      //     console.error(\"Unauthorized User\")\n      //   }\n      // });\n      // return $http.put('/api/user/' + auth.currentUser().id, {\n      //   headers: {\n      //     Authorization: 'Bearer '+ auth.getToken()\n      //   }\n      // });\n    };\n\n    return {\n      getProfile : getProfile,\n      updateWidgets: updateWidgets\n    };\n  }\n\n})();\n\n","(function() {\n\n  angular\n    .module('nerveCenter')\n    .controller('widgetsCtrl', widgetsCtrl);\n\n  widgetsCtrl.$inject = ['$location', 'meanData'];\n  function widgetsCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user.widgets = data;\n      })\n      .error(function(e) {\n        console.log(e);\n      });\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location', 'auth'];\n  function navigationCtrl($location, auth) {\n    var vm = this;\n    vm.isLoggedIn = auth.isLoggedIn();\n    vm.currentUser = auth.currentUser();\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('nerveCenter')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n\n"]}