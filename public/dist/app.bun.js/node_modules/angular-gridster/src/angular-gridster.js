'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};(function(root,factory){'use strict';if(typeof define==='function'&&define.amd){define(['angular'],factory)}else if((typeof exports==='undefined'?'undefined':_typeof(exports))==='object'){module.exports=factory(require('angular'))}else{factory(root.angular)}})(undefined,function(angular){'use strict';return angular.module('gridster',[]).constant('gridsterConfig',{columns:6,pushing:true,floating:true,swapping:false,width:'auto',colWidth:'auto',rowHeight:'match',margins:[10,10],outerMargin:true,isMobile:false,mobileBreakPoint:600,mobileModeEnabled:true,minColumns:1,minRows:1,maxRows:100,defaultSizeX:2,defaultSizeY:1,minSizeX:1,maxSizeX:null,minSizeY:1,maxSizeY:null,saveGridItemCalculatedHeightInMobile:false,resizable:{enabled:true,handles:['s','e','n','w','se','ne','sw','nw']},draggable:{enabled:true,scrollSensitivity:20,scrollSpeed:15}}).controller('GridsterCtrl',['gridsterConfig','$timeout',function(gridsterConfig,$timeout){var gridster=this;angular.extend(this,gridsterConfig);this.resizable=angular.extend({},gridsterConfig.resizable||{});this.draggable=angular.extend({},gridsterConfig.draggable||{});var flag=false;this.layoutChanged=function(){if(flag){return}flag=true;$timeout(function(){flag=false;if(gridster.loaded){gridster.floatItemsUp()}gridster.updateHeight(gridster.movingItem?gridster.movingItem.sizeY:0)},30)};this.grid=[];this.destroy=function(){if(this.grid){this.grid=[]}this.$element=null};this.setOptions=function(options){if(!options){return}options=angular.extend({},options);if(options.draggable){angular.extend(this.draggable,options.draggable);delete options.draggable}if(options.resizable){angular.extend(this.resizable,options.resizable);delete options.resizable}angular.extend(this,options);if(!this.margins||this.margins.length!==2){this.margins=[0,0]}else{for(var x=0,l=this.margins.length;x<l;++x){this.margins[x]=parseInt(this.margins[x],10);if(isNaN(this.margins[x])){this.margins[x]=0}}}};this.canItemOccupy=function(item,row,column){return row>-1&&column>-1&&item.sizeX+column<=this.columns&&item.sizeY+row<=this.maxRows};this.autoSetItemPosition=function(item){for(var rowIndex=0;rowIndex<this.maxRows;++rowIndex){for(var colIndex=0;colIndex<this.columns;++colIndex){var items=this.getItems(rowIndex,colIndex,item.sizeX,item.sizeY,item);if(items.length===0&&this.canItemOccupy(item,rowIndex,colIndex)){this.putItem(item,rowIndex,colIndex);return}}}throw new Error('Unable to place item!')};this.getItems=function(row,column,sizeX,sizeY,excludeItems){var items=[];if(!sizeX||!sizeY){sizeX=sizeY=1}if(excludeItems&&!(excludeItems instanceof Array)){excludeItems=[excludeItems]}for(var h=0;h<sizeY;++h){for(var w=0;w<sizeX;++w){var item=this.getItem(row+h,column+w,excludeItems);if(item&&(!excludeItems||excludeItems.indexOf(item)===-1)&&items.indexOf(item)===-1){items.push(item)}}}return items};this.getBoundingBox=function(items){if(items.length===0){return null}if(items.length===1){return{row:items[0].row,col:items[0].col,sizeY:items[0].sizeY,sizeX:items[0].sizeX}}var maxRow=0;var maxCol=0;var minRow=9999;var minCol=9999;for(var i=0,l=items.length;i<l;++i){var item=items[i];minRow=Math.min(item.row,minRow);minCol=Math.min(item.col,minCol);maxRow=Math.max(item.row+item.sizeY,maxRow);maxCol=Math.max(item.col+item.sizeX,maxCol)}return{row:minRow,col:minCol,sizeY:maxRow-minRow,sizeX:maxCol-minCol}};this.removeItem=function(item){for(var rowIndex=0,l=this.grid.length;rowIndex<l;++rowIndex){var columns=this.grid[rowIndex];if(!columns){continue}var index=columns.indexOf(item);if(index!==-1){columns[index]=null;break}}this.layoutChanged()};this.getItem=function(row,column,excludeItems){if(excludeItems&&!(excludeItems instanceof Array)){excludeItems=[excludeItems]}var sizeY=1;while(row>-1){var sizeX=1,col=column;while(col>-1){var items=this.grid[row];if(items){var item=items[col];if(item&&(!excludeItems||excludeItems.indexOf(item)===-1)&&item.sizeX>=sizeX&&item.sizeY>=sizeY){return item}}++sizeX;--col}--row;++sizeY}return null};this.putItems=function(items){for(var i=0,l=items.length;i<l;++i){this.putItem(items[i])}};this.putItem=function(item,row,column,ignoreItems){if(typeof row==='undefined'||row===null){row=item.row;column=item.col;if(typeof row==='undefined'||row===null){this.autoSetItemPosition(item);return}}if(!this.canItemOccupy(item,row,column)){column=Math.min(this.columns-item.sizeX,Math.max(0,column));row=Math.min(this.maxRows-item.sizeY,Math.max(0,row))}if(item.oldRow!==null&&typeof item.oldRow!=='undefined'){var samePosition=item.oldRow===row&&item.oldColumn===column;var inGrid=this.grid[row]&&this.grid[row][column]===item;if(samePosition&&inGrid){item.row=row;item.col=column;return}else{var oldRow=this.grid[item.oldRow];if(oldRow&&oldRow[item.oldColumn]===item){delete oldRow[item.oldColumn]}}}item.oldRow=item.row=row;item.oldColumn=item.col=column;this.moveOverlappingItems(item,ignoreItems);if(!this.grid[row]){this.grid[row]=[]}this.grid[row][column]=item;if(this.movingItem===item){this.floatItemUp(item)}this.layoutChanged()};this.swapItems=function(item1,item2){this.grid[item1.row][item1.col]=item2;this.grid[item2.row][item2.col]=item1;var item1Row=item1.row;var item1Col=item1.col;item1.row=item2.row;item1.col=item2.col;item2.row=item1Row;item2.col=item1Col};this.moveOverlappingItems=function(item,ignoreItems){if(!ignoreItems){ignoreItems=[item]}else if(ignoreItems.indexOf(item)===-1){ignoreItems=ignoreItems.slice(0);ignoreItems.push(item)}var overlappingItems=this.getItems(item.row,item.col,item.sizeX,item.sizeY,ignoreItems);this.moveItemsDown(overlappingItems,item.row+item.sizeY,ignoreItems)};this.moveItemsDown=function(items,newRow,ignoreItems){if(!items||items.length===0){return}items.sort(function(a,b){return a.row-b.row});ignoreItems=ignoreItems?ignoreItems.slice(0):[];var topRows={},item,i,l;for(i=0,l=items.length;i<l;++i){item=items[i];var topRow=topRows[item.col];if(typeof topRow==='undefined'||item.row<topRow){topRows[item.col]=item.row}}for(i=0,l=items.length;i<l;++i){item=items[i];var rowsToMove=newRow-topRows[item.col];this.moveItemDown(item,item.row+rowsToMove,ignoreItems);ignoreItems.push(item)}};this.moveItemDown=function(item,newRow,ignoreItems){if(item.row>=newRow){return}while(item.row<newRow){++item.row;this.moveOverlappingItems(item,ignoreItems)}this.putItem(item,item.row,item.col,ignoreItems)};this.floatItemsUp=function(){if(this.floating===false){return}for(var rowIndex=0,l=this.grid.length;rowIndex<l;++rowIndex){var columns=this.grid[rowIndex];if(!columns){continue}for(var colIndex=0,len=columns.length;colIndex<len;++colIndex){var item=columns[colIndex];if(item){this.floatItemUp(item)}}}};this.floatItemUp=function(item){if(this.floating===false){return}var colIndex=item.col,sizeY=item.sizeY,sizeX=item.sizeX,bestRow=null,bestColumn=null,rowIndex=item.row-1;while(rowIndex>-1){var items=this.getItems(rowIndex,colIndex,sizeX,sizeY,item);if(items.length!==0){break}bestRow=rowIndex;bestColumn=colIndex;--rowIndex}if(bestRow!==null){this.putItem(item,bestRow,bestColumn)}};this.updateHeight=function(plus){var maxHeight=this.minRows;plus=plus||0;for(var rowIndex=this.grid.length;rowIndex>=0;--rowIndex){var columns=this.grid[rowIndex];if(!columns){continue}for(var colIndex=0,len=columns.length;colIndex<len;++colIndex){if(columns[colIndex]){maxHeight=Math.max(maxHeight,rowIndex+plus+columns[colIndex].sizeY)}}}this.gridHeight=this.maxRows-maxHeight>0?Math.min(this.maxRows,maxHeight):Math.max(this.maxRows,maxHeight)};this.pixelsToRows=function(pixels,ceilOrFloor){if(!this.outerMargin){pixels+=this.margins[0]/2}if(ceilOrFloor===true){return Math.ceil(pixels/this.curRowHeight)}else if(ceilOrFloor===false){return Math.floor(pixels/this.curRowHeight)}return Math.round(pixels/this.curRowHeight)};this.pixelsToColumns=function(pixels,ceilOrFloor){if(!this.outerMargin){pixels+=this.margins[1]/2}if(ceilOrFloor===true){return Math.ceil(pixels/this.curColWidth)}else if(ceilOrFloor===false){return Math.floor(pixels/this.curColWidth)}return Math.round(pixels/this.curColWidth)}}]).directive('gridsterPreview',function(){return{replace:true,scope:true,require:'^gridster',template:'<div ng-style="previewStyle()" class="gridster-item gridster-preview-holder"></div>',link:function link(scope,$el,attrs,gridster){scope.previewStyle=function(){if(!gridster.movingItem){return{display:'none'}}return{display:'block',height:gridster.movingItem.sizeY*gridster.curRowHeight-gridster.margins[0]+'px',width:gridster.movingItem.sizeX*gridster.curColWidth-gridster.margins[1]+'px',top:gridster.movingItem.row*gridster.curRowHeight+(gridster.outerMargin?gridster.margins[0]:0)+'px',left:gridster.movingItem.col*gridster.curColWidth+(gridster.outerMargin?gridster.margins[1]:0)+'px'}}}}}).directive('gridster',['$timeout','$window','$rootScope','gridsterDebounce',function($timeout,$window,$rootScope,gridsterDebounce){return{scope:true,restrict:'EAC',controller:'GridsterCtrl',controllerAs:'gridster',compile:function compile($tplElem){$tplElem.prepend('<div ng-if="gridster.movingItem" gridster-preview></div>');return function(scope,$elem,attrs,gridster){gridster.loaded=false;gridster.$element=$elem;scope.gridster=gridster;$elem.addClass('gridster');var isVisible=function isVisible(ele){return ele.style.visibility!=='hidden'&&ele.style.display!=='none'};function updateHeight(){$elem.css('height',gridster.gridHeight*gridster.curRowHeight+(gridster.outerMargin?gridster.margins[0]:-gridster.margins[0])+'px')}scope.$watch(function(){return gridster.gridHeight},updateHeight);scope.$watch(function(){return gridster.movingItem},function(){gridster.updateHeight(gridster.movingItem?gridster.movingItem.sizeY:0)});function refresh(config){gridster.setOptions(config);if(!isVisible($elem[0])){return}if(gridster.width==='auto'){gridster.curWidth=$elem[0].offsetWidth||parseInt($elem.css('width'),10)}else{gridster.curWidth=gridster.width}if(gridster.colWidth==='auto'){gridster.curColWidth=(gridster.curWidth+(gridster.outerMargin?-gridster.margins[1]:gridster.margins[1]))/gridster.columns}else{gridster.curColWidth=gridster.colWidth}gridster.curRowHeight=gridster.rowHeight;if(typeof gridster.rowHeight==='string'){if(gridster.rowHeight==='match'){gridster.curRowHeight=Math.round(gridster.curColWidth)}else if(gridster.rowHeight.indexOf('*')!==-1){gridster.curRowHeight=Math.round(gridster.curColWidth*gridster.rowHeight.replace('*','').replace(' ',''))}else if(gridster.rowHeight.indexOf('/')!==-1){gridster.curRowHeight=Math.round(gridster.curColWidth/gridster.rowHeight.replace('/','').replace(' ',''))}}gridster.isMobile=gridster.mobileModeEnabled&&gridster.curWidth<=gridster.mobileBreakPoint;for(var rowIndex=0,l=gridster.grid.length;rowIndex<l;++rowIndex){var columns=gridster.grid[rowIndex];if(!columns){continue}for(var colIndex=0,len=columns.length;colIndex<len;++colIndex){if(columns[colIndex]){var item=columns[colIndex];item.setElementPosition();item.setElementSizeY();item.setElementSizeX()}}}updateHeight()}var optionsKey=attrs.gridster;if(optionsKey){scope.$parent.$watch(optionsKey,function(newConfig){refresh(newConfig)},true)}else{refresh({})}scope.$watch(function(){return gridster.loaded},function(){if(gridster.loaded){$elem.addClass('gridster-loaded');$rootScope.$broadcast('gridster-loaded',gridster)}else{$elem.removeClass('gridster-loaded')}});scope.$watch(function(){return gridster.isMobile},function(){if(gridster.isMobile){$elem.addClass('gridster-mobile').removeClass('gridster-desktop')}else{$elem.removeClass('gridster-mobile').addClass('gridster-desktop')}$rootScope.$broadcast('gridster-mobile-changed',gridster)});scope.$watch(function(){return gridster.draggable},function(){$rootScope.$broadcast('gridster-draggable-changed',gridster)},true);scope.$watch(function(){return gridster.resizable},function(){$rootScope.$broadcast('gridster-resizable-changed',gridster)},true);var prevWidth=$elem[0].offsetWidth||parseInt($elem.css('width'),10);var resize=function resize(){var width=$elem[0].offsetWidth||parseInt($elem.css('width'),10);if(!width||width===prevWidth||gridster.movingItem){return}prevWidth=width;if(gridster.loaded){$elem.removeClass('gridster-loaded')}refresh();if(gridster.loaded){$elem.addClass('gridster-loaded')}$rootScope.$broadcast('gridster-resized',[width,$elem[0].offsetHeight],gridster)};var onResize=gridsterDebounce(function onResize(){resize();$timeout(function(){scope.$apply()})},100);scope.$watch(function(){return isVisible($elem[0])},onResize);if(typeof window.addResizeListener==='function'){window.addResizeListener($elem[0],onResize)}else{scope.$watch(function(){return $elem[0].offsetWidth||parseInt($elem.css('width'),10)},resize)}var $win=angular.element($window);$win.on('resize',onResize);scope.$on('$destroy',function(){gridster.destroy();$win.off('resize',onResize);if(typeof window.removeResizeListener==='function'){window.removeResizeListener($elem[0],onResize)}});$timeout(function(){scope.$watch('gridster.floating',function(){gridster.floatItemsUp()});gridster.loaded=true},100)}}}}]).controller('GridsterItemCtrl',function(){this.$element=null;this.gridster=null;this.row=null;this.col=null;this.sizeX=null;this.sizeY=null;this.minSizeX=0;this.minSizeY=0;this.maxSizeX=null;this.maxSizeY=null;this.init=function($element,gridster){this.$element=$element;this.gridster=gridster;this.sizeX=gridster.defaultSizeX;this.sizeY=gridster.defaultSizeY};this.destroy=function(){this.gridster=null;this.$element=null};this.toJSON=function(){return{row:this.row,col:this.col,sizeY:this.sizeY,sizeX:this.sizeX}};this.isMoving=function(){return this.gridster.movingItem===this};this.setPosition=function(row,column){this.gridster.putItem(this,row,column);if(!this.isMoving()){this.setElementPosition()}};this.setSize=function(key,value,preventMove){key=key.toUpperCase();var camelCase='size'+key,titleCase='Size'+key;if(value===''){return}value=parseInt(value,10);if(isNaN(value)||value===0){value=this.gridster['default'+titleCase]}var max=key==='X'?this.gridster.columns:this.gridster.maxRows;if(this['max'+titleCase]){max=Math.min(this['max'+titleCase],max)}if(this.gridster['max'+titleCase]){max=Math.min(this.gridster['max'+titleCase],max)}if(key==='X'&&this.cols){max-=this.cols}else if(key==='Y'&&this.rows){max-=this.rows}var min=0;if(this['min'+titleCase]){min=Math.max(this['min'+titleCase],min)}if(this.gridster['min'+titleCase]){min=Math.max(this.gridster['min'+titleCase],min)}value=Math.max(Math.min(value,max),min);var changed=this[camelCase]!==value||this['old'+titleCase]&&this['old'+titleCase]!==value;this['old'+titleCase]=this[camelCase]=value;if(!this.isMoving()){this['setElement'+titleCase]()}if(!preventMove&&changed){this.gridster.moveOverlappingItems(this);this.gridster.layoutChanged()}return changed};this.setSizeY=function(rows,preventMove){return this.setSize('Y',rows,preventMove)};this.setSizeX=function(columns,preventMove){return this.setSize('X',columns,preventMove)};this.setElementPosition=function(){if(this.gridster.isMobile){this.$element.css({marginLeft:this.gridster.margins[0]+'px',marginRight:this.gridster.margins[0]+'px',marginTop:this.gridster.margins[1]+'px',marginBottom:this.gridster.margins[1]+'px',top:'',left:''})}else{this.$element.css({margin:0,top:this.row*this.gridster.curRowHeight+(this.gridster.outerMargin?this.gridster.margins[0]:0)+'px',left:this.col*this.gridster.curColWidth+(this.gridster.outerMargin?this.gridster.margins[1]:0)+'px'})}};this.setElementSizeY=function(){if(this.gridster.isMobile&&!this.gridster.saveGridItemCalculatedHeightInMobile){this.$element.css('height','')}else{this.$element.css('height',this.sizeY*this.gridster.curRowHeight-this.gridster.margins[0]+'px')}};this.setElementSizeX=function(){if(this.gridster.isMobile){this.$element.css('width','')}else{this.$element.css('width',this.sizeX*this.gridster.curColWidth-this.gridster.margins[1]+'px')}};this.getElementSizeX=function(){return this.sizeX*this.gridster.curColWidth-this.gridster.margins[1]};this.getElementSizeY=function(){return this.sizeY*this.gridster.curRowHeight-this.gridster.margins[0]}}).factory('GridsterTouch',[function(){return function GridsterTouch(target,startEvent,moveEvent,endEvent){var lastXYById={};var numberOfKeys=function numberOfKeys(theObject){if(Object.keys){return Object.keys(theObject).length}var n=0,key;for(key in theObject){++n}return n};var computeDocumentToElementDelta=function computeDocumentToElementDelta(theElement){var elementLeft=0;var elementTop=0;var oldIEUserAgent=navigator.userAgent.match(/\bMSIE\b/);for(var offsetElement=theElement;offsetElement!=null;offsetElement=offsetElement.offsetParent){if(oldIEUserAgent&&(!document.documentMode||document.documentMode<8)&&offsetElement.currentStyle.position==='relative'&&offsetElement.offsetParent&&offsetElement.offsetParent.currentStyle.position==='relative'&&offsetElement.offsetLeft===offsetElement.offsetParent.offsetLeft){elementTop+=offsetElement.offsetTop}else{elementLeft+=offsetElement.offsetLeft;elementTop+=offsetElement.offsetTop}}return{x:elementLeft,y:elementTop}};var documentToTargetDelta=computeDocumentToElementDelta(target);var useSetReleaseCapture=false;var doEvent=function doEvent(theEvtObj){if(theEvtObj.type==='mousemove'&&numberOfKeys(lastXYById)===0){return}var prevent=true;var pointerList=theEvtObj.changedTouches?theEvtObj.changedTouches:[theEvtObj];for(var i=0;i<pointerList.length;++i){var pointerObj=pointerList[i];var pointerId=typeof pointerObj.identifier!=='undefined'?pointerObj.identifier:typeof pointerObj.pointerId!=='undefined'?pointerObj.pointerId:1;if(typeof pointerObj.pageX==='undefined'){pointerObj.pageX=pointerObj.offsetX+documentToTargetDelta.x;pointerObj.pageY=pointerObj.offsetY+documentToTargetDelta.y;if(pointerObj.srcElement.offsetParent===target&&document.documentMode&&document.documentMode===8&&pointerObj.type==='mousedown'){pointerObj.pageX+=pointerObj.srcElement.offsetLeft;pointerObj.pageY+=pointerObj.srcElement.offsetTop}else if(pointerObj.srcElement!==target&&!document.documentMode||document.documentMode<8){var sx=-2,sy=-2;for(var scrollElement=pointerObj.srcElement;scrollElement!==null;scrollElement=scrollElement.parentNode){sx+=scrollElement.scrollLeft?scrollElement.scrollLeft:0;sy+=scrollElement.scrollTop?scrollElement.scrollTop:0}pointerObj.pageX=pointerObj.clientX+sx;pointerObj.pageY=pointerObj.clientY+sy}}var pageX=pointerObj.pageX;var pageY=pointerObj.pageY;if(theEvtObj.type.match(/(start|down)$/i)){documentToTargetDelta=computeDocumentToElementDelta(target);if(lastXYById[pointerId]){if(endEvent){endEvent({target:theEvtObj.target,which:theEvtObj.which,pointerId:pointerId,pageX:pageX,pageY:pageY})}delete lastXYById[pointerId]}if(startEvent){if(prevent){prevent=startEvent({target:theEvtObj.target,which:theEvtObj.which,pointerId:pointerId,pageX:pageX,pageY:pageY})}}lastXYById[pointerId]={x:pageX,y:pageY};if(target.msSetPointerCapture&&prevent){target.msSetPointerCapture(pointerId)}else if(theEvtObj.type==='mousedown'&&numberOfKeys(lastXYById)===1){if(useSetReleaseCapture){target.setCapture(true)}else{document.addEventListener('mousemove',doEvent,false);document.addEventListener('mouseup',doEvent,false)}}}else if(theEvtObj.type.match(/move$/i)){if(lastXYById[pointerId]&&!(lastXYById[pointerId].x===pageX&&lastXYById[pointerId].y===pageY)){if(moveEvent&&prevent){prevent=moveEvent({target:theEvtObj.target,which:theEvtObj.which,pointerId:pointerId,pageX:pageX,pageY:pageY})}lastXYById[pointerId].x=pageX;lastXYById[pointerId].y=pageY}}else if(lastXYById[pointerId]&&theEvtObj.type.match(/(up|end|cancel)$/i)){if(endEvent&&prevent){prevent=endEvent({target:theEvtObj.target,which:theEvtObj.which,pointerId:pointerId,pageX:pageX,pageY:pageY})}delete lastXYById[pointerId];if(target.msReleasePointerCapture){target.msReleasePointerCapture(pointerId)}else if(theEvtObj.type==='mouseup'&&numberOfKeys(lastXYById)===0){if(useSetReleaseCapture){target.releaseCapture()}else{document.removeEventListener('mousemove',doEvent,false);document.removeEventListener('mouseup',doEvent,false)}}}}if(prevent){if(theEvtObj.preventDefault){theEvtObj.preventDefault()}if(theEvtObj.preventManipulation){theEvtObj.preventManipulation()}if(theEvtObj.preventMouseEvent){theEvtObj.preventMouseEvent()}}};var contentZooming,msTouchAction;this.enable=function(){if(window.navigator.msPointerEnabled){target.addEventListener('MSPointerDown',doEvent,false);target.addEventListener('MSPointerMove',doEvent,false);target.addEventListener('MSPointerUp',doEvent,false);target.addEventListener('MSPointerCancel',doEvent,false);if(typeof target.style.msContentZooming!=='undefined'){contentZooming=target.style.msContentZooming;target.style.msContentZooming='none'}if(typeof target.style.msTouchAction!=='undefined'){msTouchAction=target.style.msTouchAction;target.style.msTouchAction='none'}}else if(target.addEventListener){target.addEventListener('touchstart',doEvent,false);target.addEventListener('touchmove',doEvent,false);target.addEventListener('touchend',doEvent,false);target.addEventListener('touchcancel',doEvent,false);target.addEventListener('mousedown',doEvent,false);if(target.setCapture&&!window.navigator.userAgent.match(/\bGecko\b/)){useSetReleaseCapture=true;target.addEventListener('mousemove',doEvent,false);target.addEventListener('mouseup',doEvent,false)}}else if(target.attachEvent&&target.setCapture){useSetReleaseCapture=true;target.attachEvent('onmousedown',function(){doEvent(window.event);window.event.returnValue=false;return false});target.attachEvent('onmousemove',function(){doEvent(window.event);window.event.returnValue=false;return false});target.attachEvent('onmouseup',function(){doEvent(window.event);window.event.returnValue=false;return false})}};this.disable=function(){if(window.navigator.msPointerEnabled){target.removeEventListener('MSPointerDown',doEvent,false);target.removeEventListener('MSPointerMove',doEvent,false);target.removeEventListener('MSPointerUp',doEvent,false);target.removeEventListener('MSPointerCancel',doEvent,false);if(contentZooming){target.style.msContentZooming=contentZooming}if(msTouchAction){target.style.msTouchAction=msTouchAction}}else if(target.removeEventListener){target.removeEventListener('touchstart',doEvent,false);target.removeEventListener('touchmove',doEvent,false);target.removeEventListener('touchend',doEvent,false);target.removeEventListener('touchcancel',doEvent,false);target.removeEventListener('mousedown',doEvent,false);if(target.setCapture&&!window.navigator.userAgent.match(/\bGecko\b/)){useSetReleaseCapture=true;target.removeEventListener('mousemove',doEvent,false);target.removeEventListener('mouseup',doEvent,false)}}else if(target.detachEvent&&target.setCapture){useSetReleaseCapture=true;target.detachEvent('onmousedown');target.detachEvent('onmousemove');target.detachEvent('onmouseup')}};return this}}]).factory('GridsterDraggable',['$document','$window','GridsterTouch',function($document,$window,GridsterTouch){function GridsterDraggable($el,scope,gridster,item,itemOptions){var elmX,elmY,elmW,elmH,mouseX=0,mouseY=0,lastMouseX=0,lastMouseY=0,mOffX=0,mOffY=0,minTop=0,minLeft=0,realdocument=$document[0];var originalCol,originalRow;var inputTags=['select','option','input','textarea','button'];function dragStart(event){$el.addClass('gridster-item-moving');gridster.movingItem=item;gridster.updateHeight(item.sizeY);scope.$apply(function(){if(gridster.draggable&&gridster.draggable.start){gridster.draggable.start(event,$el,itemOptions)}})}function drag(event){var oldRow=item.row,oldCol=item.col,hasCallback=gridster.draggable&&gridster.draggable.drag,scrollSensitivity=gridster.draggable.scrollSensitivity,scrollSpeed=gridster.draggable.scrollSpeed;var row=Math.min(gridster.pixelsToRows(elmY),gridster.maxRows-1);var col=Math.min(gridster.pixelsToColumns(elmX),gridster.columns-1);var itemsInTheWay=gridster.getItems(row,col,item.sizeX,item.sizeY,item);var hasItemsInTheWay=itemsInTheWay.length!==0;if(gridster.swapping===true&&hasItemsInTheWay){var boundingBoxItem=gridster.getBoundingBox(itemsInTheWay),sameSize=boundingBoxItem.sizeX===item.sizeX&&boundingBoxItem.sizeY===item.sizeY,sameRow=boundingBoxItem.row===oldRow,sameCol=boundingBoxItem.col===oldCol,samePosition=boundingBoxItem.row===row&&boundingBoxItem.col===col,inline=sameRow||sameCol;if(sameSize&&itemsInTheWay.length===1){if(samePosition){gridster.swapItems(item,itemsInTheWay[0])}else if(inline){return}}else if(boundingBoxItem.sizeX<=item.sizeX&&boundingBoxItem.sizeY<=item.sizeY&&inline){var emptyRow=item.row<=row?item.row:row+item.sizeY,emptyCol=item.col<=col?item.col:col+item.sizeX,rowOffset=emptyRow-boundingBoxItem.row,colOffset=emptyCol-boundingBoxItem.col;for(var i=0,l=itemsInTheWay.length;i<l;++i){var itemInTheWay=itemsInTheWay[i];var itemsInFreeSpace=gridster.getItems(itemInTheWay.row+rowOffset,itemInTheWay.col+colOffset,itemInTheWay.sizeX,itemInTheWay.sizeY,item);if(itemsInFreeSpace.length===0){gridster.putItem(itemInTheWay,itemInTheWay.row+rowOffset,itemInTheWay.col+colOffset)}}}}if(gridster.pushing!==false||!hasItemsInTheWay){item.row=row;item.col=col}if(event.pageY-realdocument.body.scrollTop<scrollSensitivity){realdocument.body.scrollTop=realdocument.body.scrollTop-scrollSpeed}else if($window.innerHeight-(event.pageY-realdocument.body.scrollTop)<scrollSensitivity){realdocument.body.scrollTop=realdocument.body.scrollTop+scrollSpeed}if(event.pageX-realdocument.body.scrollLeft<scrollSensitivity){realdocument.body.scrollLeft=realdocument.body.scrollLeft-scrollSpeed}else if($window.innerWidth-(event.pageX-realdocument.body.scrollLeft)<scrollSensitivity){realdocument.body.scrollLeft=realdocument.body.scrollLeft+scrollSpeed}if(hasCallback||oldRow!==item.row||oldCol!==item.col){scope.$apply(function(){if(hasCallback){gridster.draggable.drag(event,$el,itemOptions)}})}}function dragStop(event){$el.removeClass('gridster-item-moving');var row=Math.min(gridster.pixelsToRows(elmY),gridster.maxRows-1);var col=Math.min(gridster.pixelsToColumns(elmX),gridster.columns-1);if(gridster.pushing!==false||gridster.getItems(row,col,item.sizeX,item.sizeY,item).length===0){item.row=row;item.col=col}gridster.movingItem=null;item.setPosition(item.row,item.col);scope.$apply(function(){if(gridster.draggable&&gridster.draggable.stop){gridster.draggable.stop(event,$el,itemOptions)}})}function mouseDown(e){if(inputTags.indexOf(e.target.nodeName.toLowerCase())!==-1){return false}var $target=angular.element(e.target);if($target.hasClass('gridster-item-resizable-handler')){return false}if($target.attr('onclick')||$target.attr('ng-click')){return false}if($target.closest&&$target.closest('.gridster-no-drag').length){return false}if(gridster.draggable&&gridster.draggable.handle){var $dragHandles=angular.element($el[0].querySelectorAll(gridster.draggable.handle));var match=false;outerloop:for(var h=0,hl=$dragHandles.length;h<hl;++h){var handle=$dragHandles[h];if(handle===e.target){match=true;break}var target=e.target;for(var p=0;p<20;++p){var parent=target.parentNode;if(parent===$el[0]||!parent){break}if(parent===handle){match=true;break outerloop}target=parent}}if(!match){return false}}switch(e.which){case 1:break;case 2:case 3:return;}lastMouseX=e.pageX;lastMouseY=e.pageY;elmX=parseInt($el.css('left'),10);elmY=parseInt($el.css('top'),10);elmW=$el[0].offsetWidth;elmH=$el[0].offsetHeight;originalCol=item.col;originalRow=item.row;dragStart(e);return true}function mouseMove(e){if(!$el.hasClass('gridster-item-moving')||$el.hasClass('gridster-item-resizing')){return false}var maxLeft=gridster.curWidth-1;var maxTop=gridster.curRowHeight*gridster.maxRows-1;mouseX=e.pageX;mouseY=e.pageY;var diffX=mouseX-lastMouseX+mOffX;var diffY=mouseY-lastMouseY+mOffY;mOffX=mOffY=0;lastMouseX=mouseX;lastMouseY=mouseY;var dX=diffX,dY=diffY;if(elmX+dX<minLeft){diffX=minLeft-elmX;mOffX=dX-diffX}else if(elmX+elmW+dX>maxLeft){diffX=maxLeft-elmX-elmW;mOffX=dX-diffX}if(elmY+dY<minTop){diffY=minTop-elmY;mOffY=dY-diffY}else if(elmY+elmH+dY>maxTop){diffY=maxTop-elmY-elmH;mOffY=dY-diffY}elmX+=diffX;elmY+=diffY;$el.css({'top':elmY+'px','left':elmX+'px'});drag(e);return true}function mouseUp(e){if(!$el.hasClass('gridster-item-moving')||$el.hasClass('gridster-item-resizing')){return false}mOffX=mOffY=0;dragStop(e);return true}var enabled=null;var gridsterTouch=null;this.enable=function(){if(enabled===true){return}enabled=true;if(gridsterTouch){gridsterTouch.enable();return}gridsterTouch=new GridsterTouch($el[0],mouseDown,mouseMove,mouseUp);gridsterTouch.enable()};this.disable=function(){if(enabled===false){return}enabled=false;if(gridsterTouch){gridsterTouch.disable()}};this.toggle=function(enabled){if(enabled){this.enable()}else{this.disable()}};this.destroy=function(){this.disable()}}return GridsterDraggable}]).factory('GridsterResizable',['GridsterTouch',function(GridsterTouch){function GridsterResizable($el,scope,gridster,item,itemOptions){function ResizeHandle(handleClass){var hClass=handleClass;var elmX,elmY,elmW,elmH,mouseX=0,mouseY=0,lastMouseX=0,lastMouseY=0,mOffX=0,mOffY=0,minTop=0,maxTop=9999,minLeft=0;var getMinHeight=function getMinHeight(){return(item.minSizeY?item.minSizeY:1)*gridster.curRowHeight-gridster.margins[0]};var getMinWidth=function getMinWidth(){return(item.minSizeX?item.minSizeX:1)*gridster.curColWidth-gridster.margins[1]};var originalWidth,originalHeight;var savedDraggable;function resizeStart(e){$el.addClass('gridster-item-moving');$el.addClass('gridster-item-resizing');gridster.movingItem=item;item.setElementSizeX();item.setElementSizeY();item.setElementPosition();gridster.updateHeight(1);scope.$apply(function(){if(gridster.resizable&&gridster.resizable.start){gridster.resizable.start(e,$el,itemOptions)}})}function resize(e){var oldRow=item.row,oldCol=item.col,oldSizeX=item.sizeX,oldSizeY=item.sizeY,hasCallback=gridster.resizable&&gridster.resizable.resize;var col=item.col;if(['w','nw','sw'].indexOf(handleClass)!==-1){col=gridster.pixelsToColumns(elmX,false)}var row=item.row;if(['n','ne','nw'].indexOf(handleClass)!==-1){row=gridster.pixelsToRows(elmY,false)}var sizeX=item.sizeX;if(['n','s'].indexOf(handleClass)===-1){sizeX=gridster.pixelsToColumns(elmW,true)}var sizeY=item.sizeY;if(['e','w'].indexOf(handleClass)===-1){sizeY=gridster.pixelsToRows(elmH,true)}var canOccupy=row>-1&&col>-1&&sizeX+col<=gridster.columns&&sizeY+row<=gridster.maxRows;if(canOccupy&&(gridster.pushing!==false||gridster.getItems(row,col,sizeX,sizeY,item).length===0)){item.row=row;item.col=col;item.sizeX=sizeX;item.sizeY=sizeY}var isChanged=item.row!==oldRow||item.col!==oldCol||item.sizeX!==oldSizeX||item.sizeY!==oldSizeY;if(hasCallback||isChanged){scope.$apply(function(){if(hasCallback){gridster.resizable.resize(e,$el,itemOptions)}})}}function resizeStop(e){$el.removeClass('gridster-item-moving');$el.removeClass('gridster-item-resizing');gridster.movingItem=null;item.setPosition(item.row,item.col);item.setSizeY(item.sizeY);item.setSizeX(item.sizeX);scope.$apply(function(){if(gridster.resizable&&gridster.resizable.stop){gridster.resizable.stop(e,$el,itemOptions)}})}function mouseDown(e){switch(e.which){case 1:break;case 2:case 3:return;}savedDraggable=gridster.draggable.enabled;if(savedDraggable){gridster.draggable.enabled=false;scope.$broadcast('gridster-draggable-changed',gridster)}lastMouseX=e.pageX;lastMouseY=e.pageY;elmX=parseInt($el.css('left'),10);elmY=parseInt($el.css('top'),10);elmW=$el[0].offsetWidth;elmH=$el[0].offsetHeight;originalWidth=item.sizeX;originalHeight=item.sizeY;resizeStart(e);return true}function mouseMove(e){var maxLeft=gridster.curWidth-1;mouseX=e.pageX;mouseY=e.pageY;var diffX=mouseX-lastMouseX+mOffX;var diffY=mouseY-lastMouseY+mOffY;mOffX=mOffY=0;lastMouseX=mouseX;lastMouseY=mouseY;var dY=diffY,dX=diffX;if(hClass.indexOf('n')>=0){if(elmH-dY<getMinHeight()){diffY=elmH-getMinHeight();mOffY=dY-diffY}else if(elmY+dY<minTop){diffY=minTop-elmY;mOffY=dY-diffY}elmY+=diffY;elmH-=diffY}if(hClass.indexOf('s')>=0){if(elmH+dY<getMinHeight()){diffY=getMinHeight()-elmH;mOffY=dY-diffY}else if(elmY+elmH+dY>maxTop){diffY=maxTop-elmY-elmH;mOffY=dY-diffY}elmH+=diffY}if(hClass.indexOf('w')>=0){if(elmW-dX<getMinWidth()){diffX=elmW-getMinWidth();mOffX=dX-diffX}else if(elmX+dX<minLeft){diffX=minLeft-elmX;mOffX=dX-diffX}elmX+=diffX;elmW-=diffX}if(hClass.indexOf('e')>=0){if(elmW+dX<getMinWidth()){diffX=getMinWidth()-elmW;mOffX=dX-diffX}else if(elmX+elmW+dX>maxLeft){diffX=maxLeft-elmX-elmW;mOffX=dX-diffX}elmW+=diffX}$el.css({'top':elmY+'px','left':elmX+'px','width':elmW+'px','height':elmH+'px'});resize(e);return true}function mouseUp(e){if(gridster.draggable.enabled!==savedDraggable){gridster.draggable.enabled=savedDraggable;scope.$broadcast('gridster-draggable-changed',gridster)}mOffX=mOffY=0;resizeStop(e);return true}var $dragHandle=null;var unifiedInput;this.enable=function(){if(!$dragHandle){$dragHandle=angular.element('<div class="gridster-item-resizable-handler handle-'+hClass+'"></div>');$el.append($dragHandle)}unifiedInput=new GridsterTouch($dragHandle[0],mouseDown,mouseMove,mouseUp);unifiedInput.enable()};this.disable=function(){if($dragHandle){$dragHandle.remove();$dragHandle=null}unifiedInput.disable();unifiedInput=undefined};this.destroy=function(){this.disable()}}var handles=[];var handlesOpts=gridster.resizable.handles;if(typeof handlesOpts==='string'){handlesOpts=gridster.resizable.handles.split(',')}var enabled=false;for(var c=0,l=handlesOpts.length;c<l;c++){handles.push(new ResizeHandle(handlesOpts[c]))}this.enable=function(){if(enabled){return}for(var c=0,l=handles.length;c<l;c++){handles[c].enable()}enabled=true};this.disable=function(){if(!enabled){return}for(var c=0,l=handles.length;c<l;c++){handles[c].disable()}enabled=false};this.toggle=function(enabled){if(enabled){this.enable()}else{this.disable()}};this.destroy=function(){for(var c=0,l=handles.length;c<l;c++){handles[c].destroy()}}}return GridsterResizable}]).factory('gridsterDebounce',function(){return function gridsterDebounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments;var later=function later(){timeout=null;if(!immediate){func.apply(context,args)}};var callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow){func.apply(context,args)}}}}).directive('gridsterItem',['$parse','GridsterDraggable','GridsterResizable','gridsterDebounce',function($parse,GridsterDraggable,GridsterResizable,gridsterDebounce){return{scope:true,restrict:'EA',controller:'GridsterItemCtrl',controllerAs:'gridsterItem',require:['^gridster','gridsterItem'],link:function link(scope,$el,attrs,controllers){var optionsKey=attrs.gridsterItem,options;var gridster=controllers[0],item=controllers[1];scope.gridster=gridster;if(optionsKey){var $optionsGetter=$parse(optionsKey);options=$optionsGetter(scope)||{};if(!options&&$optionsGetter.assign){options={row:item.row,col:item.col,sizeX:item.sizeX,sizeY:item.sizeY,minSizeX:0,minSizeY:0,maxSizeX:null,maxSizeY:null};$optionsGetter.assign(scope,options)}}else{options=attrs}item.init($el,gridster);$el.addClass('gridster-item');var aspects=['minSizeX','maxSizeX','minSizeY','maxSizeY','sizeX','sizeY','row','col'],$getters={};var expressions=[];var aspectFn=function aspectFn(aspect){var expression;if(typeof options[aspect]==='string'){expression=options[aspect]}else if(typeof options[aspect.toLowerCase()]==='string'){expression=options[aspect.toLowerCase()]}else if(optionsKey){expression=optionsKey+'.'+aspect}else{return}expressions.push('"'+aspect+'":'+expression);$getters[aspect]=$parse(expression);var val=$getters[aspect](scope);if(typeof val==='number'){item[aspect]=val}};for(var i=0,l=aspects.length;i<l;++i){aspectFn(aspects[i])}var watchExpressions='{'+expressions.join(',')+'}';scope.$watchCollection(watchExpressions,function(newVals,oldVals){for(var aspect in newVals){var newVal=newVals[aspect];var oldVal=oldVals[aspect];if(oldVal===newVal){continue}newVal=parseInt(newVal,10);if(!isNaN(newVal)){item[aspect]=newVal}}});function positionChanged(){item.setPosition(item.row,item.col);if($getters.row&&$getters.row.assign){$getters.row.assign(scope,item.row)}if($getters.col&&$getters.col.assign){$getters.col.assign(scope,item.col)}}scope.$watch(function(){return item.row+','+item.col},positionChanged);function sizeChanged(){var changedX=item.setSizeX(item.sizeX,true);if(changedX&&$getters.sizeX&&$getters.sizeX.assign){$getters.sizeX.assign(scope,item.sizeX)}var changedY=item.setSizeY(item.sizeY,true);if(changedY&&$getters.sizeY&&$getters.sizeY.assign){$getters.sizeY.assign(scope,item.sizeY)}if(changedX||changedY){item.gridster.moveOverlappingItems(item);gridster.layoutChanged();scope.$broadcast('gridster-item-resized',item)}}scope.$watch(function(){return item.sizeY+','+item.sizeX+','+item.minSizeX+','+item.maxSizeX+','+item.minSizeY+','+item.maxSizeY},sizeChanged);var draggable=new GridsterDraggable($el,scope,gridster,item,options);var resizable=new GridsterResizable($el,scope,gridster,item,options);var updateResizable=function updateResizable(){resizable.toggle(!gridster.isMobile&&gridster.resizable&&gridster.resizable.enabled)};updateResizable();var updateDraggable=function updateDraggable(){draggable.toggle(!gridster.isMobile&&gridster.draggable&&gridster.draggable.enabled)};updateDraggable();scope.$on('gridster-draggable-changed',updateDraggable);scope.$on('gridster-resizable-changed',updateResizable);scope.$on('gridster-resized',updateResizable);scope.$on('gridster-mobile-changed',function(){updateResizable();updateDraggable()});function whichTransitionEvent(){var el=document.createElement('div');var transitions={'transition':'transitionend','OTransition':'oTransitionEnd','MozTransition':'transitionend','WebkitTransition':'webkitTransitionEnd'};for(var t in transitions){if(el.style[t]!==undefined){return transitions[t]}}}var debouncedTransitionEndPublisher=gridsterDebounce(function(){scope.$apply(function(){scope.$broadcast('gridster-item-transition-end',item)})},50);$el.on(whichTransitionEvent(),debouncedTransitionEndPublisher);scope.$broadcast('gridster-item-initialized',item);return scope.$on('$destroy',function(){try{resizable.destroy();draggable.destroy()}catch(e){}try{gridster.removeItem(item)}catch(e){}try{item.destroy()}catch(e){}})}}}]).directive('gridsterNoDrag',function(){return{restrict:'A',link:function link(scope,$element){$element.addClass('gridster-no-drag')}}})});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9hbmd1bGFyLWdyaWRzdGVyL3NyYy9hbmd1bGFyLWdyaWRzdGVyLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsIm1vZHVsZSIsInJlcXVpcmUiLCJhbmd1bGFyIiwiY29uc3RhbnQiLCJjb2x1bW5zIiwicHVzaGluZyIsImZsb2F0aW5nIiwic3dhcHBpbmciLCJ3aWR0aCIsImNvbFdpZHRoIiwicm93SGVpZ2h0IiwibWFyZ2lucyIsIm91dGVyTWFyZ2luIiwiaXNNb2JpbGUiLCJtb2JpbGVCcmVha1BvaW50IiwibW9iaWxlTW9kZUVuYWJsZWQiLCJtaW5Db2x1bW5zIiwibWluUm93cyIsIm1heFJvd3MiLCJkZWZhdWx0U2l6ZVgiLCJkZWZhdWx0U2l6ZVkiLCJtaW5TaXplWCIsIm1heFNpemVYIiwibWluU2l6ZVkiLCJtYXhTaXplWSIsInNhdmVHcmlkSXRlbUNhbGN1bGF0ZWRIZWlnaHRJbk1vYmlsZSIsInJlc2l6YWJsZSIsImVuYWJsZWQiLCJoYW5kbGVzIiwiZHJhZ2dhYmxlIiwic2Nyb2xsU2Vuc2l0aXZpdHkiLCJzY3JvbGxTcGVlZCIsImNvbnRyb2xsZXIiLCJncmlkc3RlckNvbmZpZyIsIiR0aW1lb3V0IiwiZ3JpZHN0ZXIiLCJleHRlbmQiLCJmbGFnIiwibGF5b3V0Q2hhbmdlZCIsImxvYWRlZCIsImZsb2F0SXRlbXNVcCIsInVwZGF0ZUhlaWdodCIsIm1vdmluZ0l0ZW0iLCJzaXplWSIsImdyaWQiLCJkZXN0cm95IiwiJGVsZW1lbnQiLCJzZXRPcHRpb25zIiwib3B0aW9ucyIsImxlbmd0aCIsIngiLCJsIiwicGFyc2VJbnQiLCJpc05hTiIsImNhbkl0ZW1PY2N1cHkiLCJpdGVtIiwicm93IiwiY29sdW1uIiwic2l6ZVgiLCJhdXRvU2V0SXRlbVBvc2l0aW9uIiwicm93SW5kZXgiLCJjb2xJbmRleCIsIml0ZW1zIiwiZ2V0SXRlbXMiLCJwdXRJdGVtIiwiRXJyb3IiLCJleGNsdWRlSXRlbXMiLCJBcnJheSIsImgiLCJ3IiwiZ2V0SXRlbSIsImluZGV4T2YiLCJwdXNoIiwiZ2V0Qm91bmRpbmdCb3giLCJjb2wiLCJtYXhSb3ciLCJtYXhDb2wiLCJtaW5Sb3ciLCJtaW5Db2wiLCJpIiwiTWF0aCIsIm1pbiIsIm1heCIsInJlbW92ZUl0ZW0iLCJpbmRleCIsInB1dEl0ZW1zIiwiaWdub3JlSXRlbXMiLCJvbGRSb3ciLCJzYW1lUG9zaXRpb24iLCJvbGRDb2x1bW4iLCJpbkdyaWQiLCJtb3ZlT3ZlcmxhcHBpbmdJdGVtcyIsImZsb2F0SXRlbVVwIiwic3dhcEl0ZW1zIiwiaXRlbTEiLCJpdGVtMiIsIml0ZW0xUm93IiwiaXRlbTFDb2wiLCJzbGljZSIsIm92ZXJsYXBwaW5nSXRlbXMiLCJtb3ZlSXRlbXNEb3duIiwibmV3Um93Iiwic29ydCIsImEiLCJiIiwidG9wUm93cyIsInRvcFJvdyIsInJvd3NUb01vdmUiLCJtb3ZlSXRlbURvd24iLCJsZW4iLCJiZXN0Um93IiwiYmVzdENvbHVtbiIsInBsdXMiLCJtYXhIZWlnaHQiLCJncmlkSGVpZ2h0IiwicGl4ZWxzVG9Sb3dzIiwicGl4ZWxzIiwiY2VpbE9yRmxvb3IiLCJjZWlsIiwiY3VyUm93SGVpZ2h0IiwiZmxvb3IiLCJyb3VuZCIsInBpeGVsc1RvQ29sdW1ucyIsImN1ckNvbFdpZHRoIiwiZGlyZWN0aXZlIiwicmVwbGFjZSIsInNjb3BlIiwidGVtcGxhdGUiLCJsaW5rIiwiJGVsIiwiYXR0cnMiLCJwcmV2aWV3U3R5bGUiLCJkaXNwbGF5IiwiaGVpZ2h0IiwidG9wIiwibGVmdCIsIiR3aW5kb3ciLCIkcm9vdFNjb3BlIiwiZ3JpZHN0ZXJEZWJvdW5jZSIsInJlc3RyaWN0IiwiY29udHJvbGxlckFzIiwiY29tcGlsZSIsIiR0cGxFbGVtIiwicHJlcGVuZCIsIiRlbGVtIiwiYWRkQ2xhc3MiLCJpc1Zpc2libGUiLCJlbGUiLCJzdHlsZSIsInZpc2liaWxpdHkiLCJjc3MiLCIkd2F0Y2giLCJyZWZyZXNoIiwiY29uZmlnIiwiY3VyV2lkdGgiLCJvZmZzZXRXaWR0aCIsInNldEVsZW1lbnRQb3NpdGlvbiIsInNldEVsZW1lbnRTaXplWSIsInNldEVsZW1lbnRTaXplWCIsIm9wdGlvbnNLZXkiLCIkcGFyZW50IiwibmV3Q29uZmlnIiwiJGJyb2FkY2FzdCIsInJlbW92ZUNsYXNzIiwicHJldldpZHRoIiwicmVzaXplIiwib2Zmc2V0SGVpZ2h0Iiwib25SZXNpemUiLCIkYXBwbHkiLCJ3aW5kb3ciLCJhZGRSZXNpemVMaXN0ZW5lciIsIiR3aW4iLCJlbGVtZW50Iiwib24iLCIkb24iLCJvZmYiLCJyZW1vdmVSZXNpemVMaXN0ZW5lciIsImluaXQiLCJ0b0pTT04iLCJpc01vdmluZyIsInNldFBvc2l0aW9uIiwic2V0U2l6ZSIsImtleSIsInZhbHVlIiwicHJldmVudE1vdmUiLCJ0b1VwcGVyQ2FzZSIsImNhbWVsQ2FzZSIsInRpdGxlQ2FzZSIsImNvbHMiLCJyb3dzIiwiY2hhbmdlZCIsInNldFNpemVZIiwic2V0U2l6ZVgiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW4iLCJnZXRFbGVtZW50U2l6ZVgiLCJnZXRFbGVtZW50U2l6ZVkiLCJHcmlkc3RlclRvdWNoIiwidGFyZ2V0Iiwic3RhcnRFdmVudCIsIm1vdmVFdmVudCIsImVuZEV2ZW50IiwibGFzdFhZQnlJZCIsIm51bWJlck9mS2V5cyIsInRoZU9iamVjdCIsIk9iamVjdCIsImtleXMiLCJuIiwiY29tcHV0ZURvY3VtZW50VG9FbGVtZW50RGVsdGEiLCJ0aGVFbGVtZW50IiwiZWxlbWVudExlZnQiLCJlbGVtZW50VG9wIiwib2xkSUVVc2VyQWdlbnQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJtYXRjaCIsIm9mZnNldEVsZW1lbnQiLCJvZmZzZXRQYXJlbnQiLCJkb2N1bWVudCIsImRvY3VtZW50TW9kZSIsImN1cnJlbnRTdHlsZSIsInBvc2l0aW9uIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInkiLCJkb2N1bWVudFRvVGFyZ2V0RGVsdGEiLCJ1c2VTZXRSZWxlYXNlQ2FwdHVyZSIsImRvRXZlbnQiLCJ0aGVFdnRPYmoiLCJ0eXBlIiwicHJldmVudCIsInBvaW50ZXJMaXN0IiwiY2hhbmdlZFRvdWNoZXMiLCJwb2ludGVyT2JqIiwicG9pbnRlcklkIiwiaWRlbnRpZmllciIsInBhZ2VYIiwib2Zmc2V0WCIsInBhZ2VZIiwib2Zmc2V0WSIsInNyY0VsZW1lbnQiLCJzeCIsInN5Iiwic2Nyb2xsRWxlbWVudCIsInBhcmVudE5vZGUiLCJzY3JvbGxMZWZ0Iiwic2Nyb2xsVG9wIiwiY2xpZW50WCIsImNsaWVudFkiLCJ3aGljaCIsIm1zU2V0UG9pbnRlckNhcHR1cmUiLCJzZXRDYXB0dXJlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1zUmVsZWFzZVBvaW50ZXJDYXB0dXJlIiwicmVsZWFzZUNhcHR1cmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJwcmV2ZW50TWFuaXB1bGF0aW9uIiwicHJldmVudE1vdXNlRXZlbnQiLCJjb250ZW50Wm9vbWluZyIsIm1zVG91Y2hBY3Rpb24iLCJlbmFibGUiLCJtc1BvaW50ZXJFbmFibGVkIiwibXNDb250ZW50Wm9vbWluZyIsImF0dGFjaEV2ZW50IiwiZXZlbnQiLCJyZXR1cm5WYWx1ZSIsImRpc2FibGUiLCJkZXRhY2hFdmVudCIsIiRkb2N1bWVudCIsIkdyaWRzdGVyRHJhZ2dhYmxlIiwiaXRlbU9wdGlvbnMiLCJlbG1YIiwiZWxtWSIsImVsbVciLCJlbG1IIiwibW91c2VYIiwibW91c2VZIiwibGFzdE1vdXNlWCIsImxhc3RNb3VzZVkiLCJtT2ZmWCIsIm1PZmZZIiwibWluVG9wIiwibWluTGVmdCIsInJlYWxkb2N1bWVudCIsIm9yaWdpbmFsQ29sIiwib3JpZ2luYWxSb3ciLCJpbnB1dFRhZ3MiLCJkcmFnU3RhcnQiLCJzdGFydCIsImRyYWciLCJvbGRDb2wiLCJoYXNDYWxsYmFjayIsIml0ZW1zSW5UaGVXYXkiLCJoYXNJdGVtc0luVGhlV2F5IiwiYm91bmRpbmdCb3hJdGVtIiwic2FtZVNpemUiLCJzYW1lUm93Iiwic2FtZUNvbCIsImlubGluZSIsImVtcHR5Um93IiwiZW1wdHlDb2wiLCJyb3dPZmZzZXQiLCJjb2xPZmZzZXQiLCJpdGVtSW5UaGVXYXkiLCJpdGVtc0luRnJlZVNwYWNlIiwiYm9keSIsImlubmVySGVpZ2h0IiwiaW5uZXJXaWR0aCIsImRyYWdTdG9wIiwic3RvcCIsIm1vdXNlRG93biIsImUiLCJub2RlTmFtZSIsInRvTG93ZXJDYXNlIiwiJHRhcmdldCIsImhhc0NsYXNzIiwiYXR0ciIsImNsb3Nlc3QiLCJoYW5kbGUiLCIkZHJhZ0hhbmRsZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwib3V0ZXJsb29wIiwiaGwiLCJwIiwicGFyZW50IiwibW91c2VNb3ZlIiwibWF4TGVmdCIsIm1heFRvcCIsImRpZmZYIiwiZGlmZlkiLCJkWCIsImRZIiwibW91c2VVcCIsImdyaWRzdGVyVG91Y2giLCJ0b2dnbGUiLCJHcmlkc3RlclJlc2l6YWJsZSIsIlJlc2l6ZUhhbmRsZSIsImhhbmRsZUNsYXNzIiwiaENsYXNzIiwiZ2V0TWluSGVpZ2h0IiwiZ2V0TWluV2lkdGgiLCJvcmlnaW5hbFdpZHRoIiwib3JpZ2luYWxIZWlnaHQiLCJzYXZlZERyYWdnYWJsZSIsInJlc2l6ZVN0YXJ0Iiwib2xkU2l6ZVgiLCJvbGRTaXplWSIsImNhbk9jY3VweSIsImlzQ2hhbmdlZCIsInJlc2l6ZVN0b3AiLCIkZHJhZ0hhbmRsZSIsInVuaWZpZWRJbnB1dCIsImFwcGVuZCIsInJlbW92ZSIsInVuZGVmaW5lZCIsImhhbmRsZXNPcHRzIiwic3BsaXQiLCJjIiwiZnVuYyIsIndhaXQiLCJpbW1lZGlhdGUiLCJ0aW1lb3V0IiwiY29udGV4dCIsImFyZ3MiLCJhcmd1bWVudHMiLCJsYXRlciIsImFwcGx5IiwiY2FsbE5vdyIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCIkcGFyc2UiLCJjb250cm9sbGVycyIsImdyaWRzdGVySXRlbSIsIiRvcHRpb25zR2V0dGVyIiwiYXNzaWduIiwiYXNwZWN0cyIsIiRnZXR0ZXJzIiwiZXhwcmVzc2lvbnMiLCJhc3BlY3RGbiIsImFzcGVjdCIsImV4cHJlc3Npb24iLCJ2YWwiLCJ3YXRjaEV4cHJlc3Npb25zIiwiam9pbiIsIiR3YXRjaENvbGxlY3Rpb24iLCJuZXdWYWxzIiwib2xkVmFscyIsIm5ld1ZhbCIsIm9sZFZhbCIsInBvc2l0aW9uQ2hhbmdlZCIsInNpemVDaGFuZ2VkIiwiY2hhbmdlZFgiLCJjaGFuZ2VkWSIsInVwZGF0ZVJlc2l6YWJsZSIsInVwZGF0ZURyYWdnYWJsZSIsIndoaWNoVHJhbnNpdGlvbkV2ZW50IiwiZWwiLCJjcmVhdGVFbGVtZW50IiwidHJhbnNpdGlvbnMiLCJ0IiwiZGVib3VuY2VkVHJhbnNpdGlvbkVuZFB1Ymxpc2hlciJdLCJtYXBwaW5ncyI6Im9QQUNDLENBQUEsU0FBU0EsSUFBVCxDQUFlQyxPQUFmLENBQXdCLENBRXhCLGFBRUEsR0FBSSxNQUFPQyxPQUFQLEdBQWtCLFVBQWxCLEVBQWdDQSxPQUFPQyxHQUEzQyxDQUFnRCxDQUUvQ0QsT0FBTyxDQUFDLFNBQUQsQ0FBUEEsQ0FBb0JELE9BQXBCQyxDQUZELENBQUEsSUFHTyxJQUFJLE9BQU9FLFFBQVAsbUNBQU9BLE9BQVAsS0FBbUIsUUFBdkIsQ0FBaUMsQ0FFdkNDLE9BQU9ELE9BQVBDLENBQWlCSixRQUFRSyxRQUFRLFNBQVJBLENBQVJMLENBRlgsQ0FBQSxJQUdBLENBRU5BLFFBQVFELEtBQUtPLE9BQWJOLENBQ0EsQ0FiRCxDQUFBLFlBY08sU0FBU00sT0FBVCxDQUFrQixDQUV6QixhQUdBLE1BQU9BLFNBQVFGLE1BQVJFLENBQWUsVUFBZkEsQ0FBMkIsRUFBM0JBLEVBRU5DLFFBRk1ELENBRUcsZ0JBRkhBLENBRXFCLENBQzNCRSxRQUFTLENBRGtCLENBRTNCQyxRQUFTLElBRmtCLENBRzNCQyxTQUFVLElBSGlCLENBSTNCQyxTQUFVLEtBSmlCLENBSzNCQyxNQUFPLE1BTG9CLENBTTNCQyxTQUFVLE1BTmlC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Z25FSSxnQkFobkVKQSxDQWduRXNCLFVBQVcsQ0FDdkMsTUFBTyxDQUNOeUksU0FBVSxHQURKLENBRU5YLEtBQU0sY0FBU0YsS0FBVCxDQUFnQmhGLFFBQWhCLENBQTBCLENBQy9CQSxTQUFTbUcsUUFBVG5HLENBQWtCLGtCQUFsQkEsQ0FDQSxDQUpLLENBam5FRCxDQUFBNUMsQ0FuQlAsQ0FBQSIsImZpbGUiOiJub2RlX21vZHVsZXMvYW5ndWxhci1ncmlkc3Rlci9zcmMvYW5ndWxhci1ncmlkc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIGRlZmluZTp0cnVlKi9cbihmdW5jdGlvbihyb290LCBmYWN0b3J5KSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyBBTURcblx0XHRkZWZpbmUoWydhbmd1bGFyJ10sIGZhY3RvcnkpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuXHRcdC8vIENvbW1vbkpTXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoJ2FuZ3VsYXInKSk7XG5cdH0gZWxzZSB7XG5cdFx0Ly8gQnJvd3Nlciwgbm90aGluZyBcImV4cG9ydGVkXCIuIE9ubHkgcmVnaXN0ZXJlZCBhcyBhIG1vZHVsZSB3aXRoIGFuZ3VsYXIuXG5cdFx0ZmFjdG9yeShyb290LmFuZ3VsYXIpO1xuXHR9XG59KHRoaXMsIGZ1bmN0aW9uKGFuZ3VsYXIpIHtcblxuXHQndXNlIHN0cmljdCc7XG5cblx0Ly8gVGhpcyByZXR1cm5lZCBhbmd1bGFyIG1vZHVsZSAnZ3JpZHN0ZXInIGlzIHdoYXQgaXMgZXhwb3J0ZWQuXG5cdHJldHVybiBhbmd1bGFyLm1vZHVsZSgnZ3JpZHN0ZXInLCBbXSlcblxuXHQuY29uc3RhbnQoJ2dyaWRzdGVyQ29uZmlnJywge1xuXHRcdGNvbHVtbnM6IDYsIC8vIG51bWJlciBvZiBjb2x1bW5zIGluIHRoZSBncmlkXG5cdFx0cHVzaGluZzogdHJ1ZSwgLy8gd2hldGhlciB0byBwdXNoIG90aGVyIGl0ZW1zIG91dCBvZiB0aGUgd2F5XG5cdFx0ZmxvYXRpbmc6IHRydWUsIC8vIHdoZXRoZXIgdG8gYXV0b21hdGljYWxseSBmbG9hdCBpdGVtcyB1cCBzbyB0aGV5IHN0YWNrXG5cdFx0c3dhcHBpbmc6IGZhbHNlLCAvLyB3aGV0aGVyIG9yIG5vdCB0byBoYXZlIGl0ZW1zIHN3aXRjaCBwbGFjZXMgaW5zdGVhZCBvZiBwdXNoIGRvd24gaWYgdGhleSBhcmUgdGhlIHNhbWUgc2l6ZVxuXHRcdHdpZHRoOiAnYXV0bycsIC8vIHdpZHRoIG9mIHRoZSBncmlkLiBcImF1dG9cIiB3aWxsIGV4cGFuZCB0aGUgZ3JpZCB0byBpdHMgcGFyZW50IGNvbnRhaW5lclxuXHRcdGNvbFdpZHRoOiAnYXV0bycsIC8vIHdpZHRoIG9mIGdyaWQgY29sdW1ucy4gXCJhdXRvXCIgd2lsbCBkaXZpZGUgdGhlIHdpZHRoIG9mIHRoZSBncmlkIGV2ZW5seSBhbW9uZyB0aGUgY29sdW1uc1xuXHRcdHJvd0hlaWdodDogJ21hdGNoJywgLy8gaGVpZ2h0IG9mIGdyaWQgcm93cy4gJ21hdGNoJyB3aWxsIG1ha2UgaXQgdGhlIHNhbWUgYXMgdGhlIGNvbHVtbiB3aWR0aCwgYSBudW1lcmljIHZhbHVlIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgcGl4ZWxzLCAnLzInIGlzIGhhbGYgdGhlIGNvbHVtbiB3aWR0aCwgJyo1JyBpcyBmaXZlIHRpbWVzIHRoZSBjb2x1bW4gd2lkdGgsIGV0Yy5cblx0XHRtYXJnaW5zOiBbMTAsIDEwXSwgLy8gbWFyZ2lucyBpbiBiZXR3ZWVuIGdyaWQgaXRlbXNcblx0XHRvdXRlck1hcmdpbjogdHJ1ZSxcblx0XHRpc01vYmlsZTogZmFsc2UsIC8vIHRvZ2dsZSBtb2JpbGUgdmlld1xuXHRcdG1vYmlsZUJyZWFrUG9pbnQ6IDYwMCwgLy8gd2lkdGggdGhyZXNob2xkIHRvIHRvZ2dsZSBtb2JpbGUgbW9kZVxuXHRcdG1vYmlsZU1vZGVFbmFibGVkOiB0cnVlLCAvLyB3aGV0aGVyIG9yIG5vdCB0byB0b2dnbGUgbW9iaWxlIG1vZGUgd2hlbiBzY3JlZW4gd2lkdGggaXMgbGVzcyB0aGFuIG1vYmlsZUJyZWFrUG9pbnRcblx0XHRtaW5Db2x1bW5zOiAxLCAvLyBtaW5pbXVtIGFtb3VudCBvZiBjb2x1bW5zIHRoZSBncmlkIGNhbiBzY2FsZSBkb3duIHRvXG5cdFx0bWluUm93czogMSwgLy8gbWluaW11bSBhbW91bnQgb2Ygcm93cyB0byBzaG93IGlmIHRoZSBncmlkIGlzIGVtcHR5XG5cdFx0bWF4Um93czogMTAwLCAvLyBtYXhpbXVtIGFtb3VudCBvZiByb3dzIGluIHRoZSBncmlkXG5cdFx0ZGVmYXVsdFNpemVYOiAyLCAvLyBkZWZhdWx0IHdpZHRoIG9mIGFuIGl0ZW0gaW4gY29sdW1uc1xuXHRcdGRlZmF1bHRTaXplWTogMSwgLy8gZGVmYXVsdCBoZWlnaHQgb2YgYW4gaXRlbSBpbiByb3dzXG5cdFx0bWluU2l6ZVg6IDEsIC8vIG1pbmltdW0gY29sdW1uIHdpZHRoIG9mIGFuIGl0ZW1cblx0XHRtYXhTaXplWDogbnVsbCwgLy8gbWF4aW11bSBjb2x1bW4gd2lkdGggb2YgYW4gaXRlbVxuXHRcdG1pblNpemVZOiAxLCAvLyBtaW51bXVtIHJvdyBoZWlnaHQgb2YgYW4gaXRlbVxuXHRcdG1heFNpemVZOiBudWxsLCAvLyBtYXhpbXVtIHJvdyBoZWlnaHQgb2YgYW4gaXRlbVxuXHRcdHNhdmVHcmlkSXRlbUNhbGN1bGF0ZWRIZWlnaHRJbk1vYmlsZTogZmFsc2UsIC8vIGdyaWQgaXRlbSBoZWlnaHQgaW4gbW9iaWxlIGRpc3BsYXkuIHRydWUtIHRvIHVzZSB0aGUgY2FsY3VsYXRlZCBoZWlnaHQgYnkgc2l6ZVkgZ2l2ZW5cblx0XHRyZXNpemFibGU6IHsgLy8gb3B0aW9ucyB0byBwYXNzIHRvIHJlc2l6YWJsZSBoYW5kbGVyXG5cdFx0XHRlbmFibGVkOiB0cnVlLFxuXHRcdFx0aGFuZGxlczogWydzJywgJ2UnLCAnbicsICd3JywgJ3NlJywgJ25lJywgJ3N3JywgJ253J11cblx0XHR9LFxuXHRcdGRyYWdnYWJsZTogeyAvLyBvcHRpb25zIHRvIHBhc3MgdG8gZHJhZ2dhYmxlIGhhbmRsZXJcblx0XHRcdGVuYWJsZWQ6IHRydWUsXG5cdFx0XHRzY3JvbGxTZW5zaXRpdml0eTogMjAsIC8vIERpc3RhbmNlIGluIHBpeGVscyBmcm9tIHRoZSBlZGdlIG9mIHRoZSB2aWV3cG9ydCBhZnRlciB3aGljaCB0aGUgdmlld3BvcnQgc2hvdWxkIHNjcm9sbCwgcmVsYXRpdmUgdG8gcG9pbnRlclxuXHRcdFx0c2Nyb2xsU3BlZWQ6IDE1IC8vIFNwZWVkIGF0IHdoaWNoIHRoZSB3aW5kb3cgc2hvdWxkIHNjcm9sbCBvbmNlIHRoZSBtb3VzZSBwb2ludGVyIGdldHMgd2l0aGluIHNjcm9sbFNlbnNpdGl2aXR5IGRpc3RhbmNlXG5cdFx0fVxuXHR9KVxuXG5cdC5jb250cm9sbGVyKCdHcmlkc3RlckN0cmwnLCBbJ2dyaWRzdGVyQ29uZmlnJywgJyR0aW1lb3V0Jyxcblx0XHRmdW5jdGlvbihncmlkc3RlckNvbmZpZywgJHRpbWVvdXQpIHtcblxuXHRcdFx0dmFyIGdyaWRzdGVyID0gdGhpcztcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBDcmVhdGUgb3B0aW9ucyBmcm9tIGdyaWRzdGVyQ29uZmlnIGNvbnN0YW50XG5cdFx0XHQgKi9cblx0XHRcdGFuZ3VsYXIuZXh0ZW5kKHRoaXMsIGdyaWRzdGVyQ29uZmlnKTtcblxuXHRcdFx0dGhpcy5yZXNpemFibGUgPSBhbmd1bGFyLmV4dGVuZCh7fSwgZ3JpZHN0ZXJDb25maWcucmVzaXphYmxlIHx8IHt9KTtcblx0XHRcdHRoaXMuZHJhZ2dhYmxlID0gYW5ndWxhci5leHRlbmQoe30sIGdyaWRzdGVyQ29uZmlnLmRyYWdnYWJsZSB8fCB7fSk7XG5cblx0XHRcdHZhciBmbGFnID0gZmFsc2U7XG5cdFx0XHR0aGlzLmxheW91dENoYW5nZWQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKGZsYWcpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0ZmxhZyA9IHRydWU7XG5cdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGZsYWcgPSBmYWxzZTtcblx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIubG9hZGVkKSB7XG5cdFx0XHRcdFx0XHRncmlkc3Rlci5mbG9hdEl0ZW1zVXAoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Z3JpZHN0ZXIudXBkYXRlSGVpZ2h0KGdyaWRzdGVyLm1vdmluZ0l0ZW0gPyBncmlkc3Rlci5tb3ZpbmdJdGVtLnNpemVZIDogMCk7XG5cdFx0XHRcdH0sIDMwKTtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogQSBwb3NpdGlvbmFsIGFycmF5IG9mIHRoZSBpdGVtcyBpbiB0aGUgZ3JpZFxuXHRcdFx0ICovXG5cdFx0XHR0aGlzLmdyaWQgPSBbXTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBDbGVhbiB1cCBhZnRlciB5b3Vyc2VsZlxuXHRcdFx0ICovXG5cdFx0XHR0aGlzLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0Ly8gZW1wdHkgdGhlIGdyaWQgdG8gY3V0IGJhY2sgb24gdGhlIHBvc3NpYmlsaXR5XG5cdFx0XHRcdC8vIG9mIGNpcmN1bGFyIHJlZmVyZW5jZXNcblx0XHRcdFx0aWYgKHRoaXMuZ3JpZCkge1xuXHRcdFx0XHRcdHRoaXMuZ3JpZCA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuJGVsZW1lbnQgPSBudWxsO1xuXHRcdFx0fTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBPdmVycmlkZXMgZGVmYXVsdCBvcHRpb25zXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgVGhlIG9wdGlvbnMgdG8gb3ZlcnJpZGVcblx0XHRcdCAqL1xuXHRcdFx0dGhpcy5zZXRPcHRpb25zID0gZnVuY3Rpb24ob3B0aW9ucykge1xuXHRcdFx0XHRpZiAoIW9wdGlvbnMpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRvcHRpb25zID0gYW5ndWxhci5leHRlbmQoe30sIG9wdGlvbnMpO1xuXG5cdFx0XHRcdC8vIGFsbCB0aGlzIHRvIGF2b2lkIHVzaW5nIGpRdWVyeS4uLlxuXHRcdFx0XHRpZiAob3B0aW9ucy5kcmFnZ2FibGUpIHtcblx0XHRcdFx0XHRhbmd1bGFyLmV4dGVuZCh0aGlzLmRyYWdnYWJsZSwgb3B0aW9ucy5kcmFnZ2FibGUpO1xuXHRcdFx0XHRcdGRlbGV0ZShvcHRpb25zLmRyYWdnYWJsZSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG9wdGlvbnMucmVzaXphYmxlKSB7XG5cdFx0XHRcdFx0YW5ndWxhci5leHRlbmQodGhpcy5yZXNpemFibGUsIG9wdGlvbnMucmVzaXphYmxlKTtcblx0XHRcdFx0XHRkZWxldGUob3B0aW9ucy5yZXNpemFibGUpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YW5ndWxhci5leHRlbmQodGhpcywgb3B0aW9ucyk7XG5cblx0XHRcdFx0aWYgKCF0aGlzLm1hcmdpbnMgfHwgdGhpcy5tYXJnaW5zLmxlbmd0aCAhPT0gMikge1xuXHRcdFx0XHRcdHRoaXMubWFyZ2lucyA9IFswLCAwXTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmb3IgKHZhciB4ID0gMCwgbCA9IHRoaXMubWFyZ2lucy5sZW5ndGg7IHggPCBsOyArK3gpIHtcblx0XHRcdFx0XHRcdHRoaXMubWFyZ2luc1t4XSA9IHBhcnNlSW50KHRoaXMubWFyZ2luc1t4XSwgMTApO1xuXHRcdFx0XHRcdFx0aWYgKGlzTmFOKHRoaXMubWFyZ2luc1t4XSkpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5tYXJnaW5zW3hdID0gMDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogQ2hlY2sgaWYgaXRlbSBjYW4gb2NjdXB5IGEgc3BlY2lmaWVkIHBvc2l0aW9uIGluIHRoZSBncmlkXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3R9IGl0ZW0gVGhlIGl0ZW0gaW4gcXVlc3Rpb25cblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSByb3cgVGhlIHJvdyBpbmRleFxuXHRcdFx0ICogQHBhcmFtIHtOdW1iZXJ9IGNvbHVtbiBUaGUgY29sdW1uIGluZGV4XG5cdFx0XHQgKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiBpZiBpdGVtIGZpdHNcblx0XHRcdCAqL1xuXHRcdFx0dGhpcy5jYW5JdGVtT2NjdXB5ID0gZnVuY3Rpb24oaXRlbSwgcm93LCBjb2x1bW4pIHtcblx0XHRcdFx0cmV0dXJuIHJvdyA+IC0xICYmIGNvbHVtbiA+IC0xICYmIGl0ZW0uc2l6ZVggKyBjb2x1bW4gPD0gdGhpcy5jb2x1bW5zICYmIGl0ZW0uc2l6ZVkgKyByb3cgPD0gdGhpcy5tYXhSb3dzO1xuXHRcdFx0fTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTZXQgdGhlIGl0ZW0gaW4gdGhlIGZpcnN0IHN1aXRhYmxlIHBvc2l0aW9uXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3R9IGl0ZW0gVGhlIGl0ZW0gdG8gaW5zZXJ0XG5cdFx0XHQgKi9cblx0XHRcdHRoaXMuYXV0b1NldEl0ZW1Qb3NpdGlvbiA9IGZ1bmN0aW9uKGl0ZW0pIHtcblx0XHRcdFx0Ly8gd2FsayB0aHJvdWdoIGVhY2ggcm93IGFuZCBjb2x1bW4gbG9va2luZyBmb3IgYSBwbGFjZSBpdCB3aWxsIGZpdFxuXHRcdFx0XHRmb3IgKHZhciByb3dJbmRleCA9IDA7IHJvd0luZGV4IDwgdGhpcy5tYXhSb3dzOyArK3Jvd0luZGV4KSB7XG5cdFx0XHRcdFx0Zm9yICh2YXIgY29sSW5kZXggPSAwOyBjb2xJbmRleCA8IHRoaXMuY29sdW1uczsgKytjb2xJbmRleCkge1xuXHRcdFx0XHRcdFx0Ly8gb25seSBpbnNlcnQgaWYgcG9zaXRpb24gaXMgbm90IGFscmVhZHkgdGFrZW4gYW5kIGl0IGNhbiBmaXRcblx0XHRcdFx0XHRcdHZhciBpdGVtcyA9IHRoaXMuZ2V0SXRlbXMocm93SW5kZXgsIGNvbEluZGV4LCBpdGVtLnNpemVYLCBpdGVtLnNpemVZLCBpdGVtKTtcblx0XHRcdFx0XHRcdGlmIChpdGVtcy5sZW5ndGggPT09IDAgJiYgdGhpcy5jYW5JdGVtT2NjdXB5KGl0ZW0sIHJvd0luZGV4LCBjb2xJbmRleCkpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5wdXRJdGVtKGl0ZW0sIHJvd0luZGV4LCBjb2xJbmRleCk7XG5cdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gcGxhY2UgaXRlbSEnKTtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogR2V0cyBpdGVtcyBhdCBhIHNwZWNpZmljIGNvb3JkaW5hdGVcblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge051bWJlcn0gcm93XG5cdFx0XHQgKiBAcGFyYW0ge051bWJlcn0gY29sdW1uXG5cdFx0XHQgKiBAcGFyYW0ge051bWJlcn0gc2l6ZVhcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBzaXplWVxuXHRcdFx0ICogQHBhcmFtIHtBcnJheX0gZXhjbHVkZUl0ZW1zIEFuIGFycmF5IG9mIGl0ZW1zIHRvIGV4Y2x1ZGUgZnJvbSBzZWxlY3Rpb25cblx0XHRcdCAqIEByZXR1cm5zIHtBcnJheX0gSXRlbXMgdGhhdCBtYXRjaCB0aGUgY3JpdGVyaWFcblx0XHRcdCAqL1xuXHRcdFx0dGhpcy5nZXRJdGVtcyA9IGZ1bmN0aW9uKHJvdywgY29sdW1uLCBzaXplWCwgc2l6ZVksIGV4Y2x1ZGVJdGVtcykge1xuXHRcdFx0XHR2YXIgaXRlbXMgPSBbXTtcblx0XHRcdFx0aWYgKCFzaXplWCB8fCAhc2l6ZVkpIHtcblx0XHRcdFx0XHRzaXplWCA9IHNpemVZID0gMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoZXhjbHVkZUl0ZW1zICYmICEoZXhjbHVkZUl0ZW1zIGluc3RhbmNlb2YgQXJyYXkpKSB7XG5cdFx0XHRcdFx0ZXhjbHVkZUl0ZW1zID0gW2V4Y2x1ZGVJdGVtc107XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yICh2YXIgaCA9IDA7IGggPCBzaXplWTsgKytoKSB7XG5cdFx0XHRcdFx0Zm9yICh2YXIgdyA9IDA7IHcgPCBzaXplWDsgKyt3KSB7XG5cdFx0XHRcdFx0XHR2YXIgaXRlbSA9IHRoaXMuZ2V0SXRlbShyb3cgKyBoLCBjb2x1bW4gKyB3LCBleGNsdWRlSXRlbXMpO1xuXHRcdFx0XHRcdFx0aWYgKGl0ZW0gJiYgKCFleGNsdWRlSXRlbXMgfHwgZXhjbHVkZUl0ZW1zLmluZGV4T2YoaXRlbSkgPT09IC0xKSAmJiBpdGVtcy5pbmRleE9mKGl0ZW0pID09PSAtMSkge1xuXHRcdFx0XHRcdFx0XHRpdGVtcy5wdXNoKGl0ZW0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gaXRlbXM7XG5cdFx0XHR9O1xuXG5cdFx0XHQvKipcblx0XHRcdCAqIEBwYXJhbSB7QXJyYXl9IGl0ZW1zXG5cdFx0XHQgKiBAcmV0dXJucyB7T2JqZWN0fSBBbiBpdGVtIHRoYXQgcmVwcmVzZW50cyB0aGUgYm91bmRpbmcgYm94IG9mIHRoZSBpdGVtc1xuXHRcdFx0ICovXG5cdFx0XHR0aGlzLmdldEJvdW5kaW5nQm94ID0gZnVuY3Rpb24oaXRlbXMpIHtcblxuXHRcdFx0XHRpZiAoaXRlbXMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGl0ZW1zLmxlbmd0aCA9PT0gMSkge1xuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRyb3c6IGl0ZW1zWzBdLnJvdyxcblx0XHRcdFx0XHRcdGNvbDogaXRlbXNbMF0uY29sLFxuXHRcdFx0XHRcdFx0c2l6ZVk6IGl0ZW1zWzBdLnNpemVZLFxuXHRcdFx0XHRcdFx0c2l6ZVg6IGl0ZW1zWzBdLnNpemVYXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHZhciBtYXhSb3cgPSAwO1xuXHRcdFx0XHR2YXIgbWF4Q29sID0gMDtcblx0XHRcdFx0dmFyIG1pblJvdyA9IDk5OTk7XG5cdFx0XHRcdHZhciBtaW5Db2wgPSA5OTk5O1xuXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgKytpKSB7XG5cdFx0XHRcdFx0dmFyIGl0ZW0gPSBpdGVtc1tpXTtcblx0XHRcdFx0XHRtaW5Sb3cgPSBNYXRoLm1pbihpdGVtLnJvdywgbWluUm93KTtcblx0XHRcdFx0XHRtaW5Db2wgPSBNYXRoLm1pbihpdGVtLmNvbCwgbWluQ29sKTtcblx0XHRcdFx0XHRtYXhSb3cgPSBNYXRoLm1heChpdGVtLnJvdyArIGl0ZW0uc2l6ZVksIG1heFJvdyk7XG5cdFx0XHRcdFx0bWF4Q29sID0gTWF0aC5tYXgoaXRlbS5jb2wgKyBpdGVtLnNpemVYLCBtYXhDb2wpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRyb3c6IG1pblJvdyxcblx0XHRcdFx0XHRjb2w6IG1pbkNvbCxcblx0XHRcdFx0XHRzaXplWTogbWF4Um93IC0gbWluUm93LFxuXHRcdFx0XHRcdHNpemVYOiBtYXhDb2wgLSBtaW5Db2xcblx0XHRcdFx0fTtcblx0XHRcdH07XG5cblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBSZW1vdmVzIGFuIGl0ZW0gZnJvbSB0aGUgZ3JpZFxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0fSBpdGVtXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMucmVtb3ZlSXRlbSA9IGZ1bmN0aW9uKGl0ZW0pIHtcblx0XHRcdFx0Zm9yICh2YXIgcm93SW5kZXggPSAwLCBsID0gdGhpcy5ncmlkLmxlbmd0aDsgcm93SW5kZXggPCBsOyArK3Jvd0luZGV4KSB7XG5cdFx0XHRcdFx0dmFyIGNvbHVtbnMgPSB0aGlzLmdyaWRbcm93SW5kZXhdO1xuXHRcdFx0XHRcdGlmICghY29sdW1ucykge1xuXHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHZhciBpbmRleCA9IGNvbHVtbnMuaW5kZXhPZihpdGVtKTtcblx0XHRcdFx0XHRpZiAoaW5kZXggIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRjb2x1bW5zW2luZGV4XSA9IG51bGw7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5sYXlvdXRDaGFuZ2VkKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHQvKipcblx0XHRcdCAqIFJldHVybnMgdGhlIGl0ZW0gYXQgYSBzcGVjaWZpZWQgY29vcmRpbmF0ZVxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSByb3dcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBjb2x1bW5cblx0XHRcdCAqIEBwYXJhbSB7QXJyYXl9IGV4Y2x1ZGVJdGVtcyBJdGVtcyB0byBleGNsdWRlIGZyb20gc2VsZWN0aW9uXG5cdFx0XHQgKiBAcmV0dXJucyB7T2JqZWN0fSBUaGUgbWF0Y2hlZCBpdGVtIG9yIG51bGxcblx0XHRcdCAqL1xuXHRcdFx0dGhpcy5nZXRJdGVtID0gZnVuY3Rpb24ocm93LCBjb2x1bW4sIGV4Y2x1ZGVJdGVtcykge1xuXHRcdFx0XHRpZiAoZXhjbHVkZUl0ZW1zICYmICEoZXhjbHVkZUl0ZW1zIGluc3RhbmNlb2YgQXJyYXkpKSB7XG5cdFx0XHRcdFx0ZXhjbHVkZUl0ZW1zID0gW2V4Y2x1ZGVJdGVtc107XG5cdFx0XHRcdH1cblx0XHRcdFx0dmFyIHNpemVZID0gMTtcblx0XHRcdFx0d2hpbGUgKHJvdyA+IC0xKSB7XG5cdFx0XHRcdFx0dmFyIHNpemVYID0gMSxcblx0XHRcdFx0XHRcdGNvbCA9IGNvbHVtbjtcblx0XHRcdFx0XHR3aGlsZSAoY29sID4gLTEpIHtcblx0XHRcdFx0XHRcdHZhciBpdGVtcyA9IHRoaXMuZ3JpZFtyb3ddO1xuXHRcdFx0XHRcdFx0aWYgKGl0ZW1zKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBpdGVtID0gaXRlbXNbY29sXTtcblx0XHRcdFx0XHRcdFx0aWYgKGl0ZW0gJiYgKCFleGNsdWRlSXRlbXMgfHwgZXhjbHVkZUl0ZW1zLmluZGV4T2YoaXRlbSkgPT09IC0xKSAmJiBpdGVtLnNpemVYID49IHNpemVYICYmIGl0ZW0uc2l6ZVkgPj0gc2l6ZVkpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gaXRlbTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KytzaXplWDtcblx0XHRcdFx0XHRcdC0tY29sO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQtLXJvdztcblx0XHRcdFx0XHQrK3NpemVZO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBJbnNlcnQgYW4gYXJyYXkgb2YgaXRlbXMgaW50byB0aGUgZ3JpZFxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7QXJyYXl9IGl0ZW1zIEFuIGFycmF5IG9mIGl0ZW1zIHRvIGluc2VydFxuXHRcdFx0ICovXG5cdFx0XHR0aGlzLnB1dEl0ZW1zID0gZnVuY3Rpb24oaXRlbXMpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDAsIGwgPSBpdGVtcy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcblx0XHRcdFx0XHR0aGlzLnB1dEl0ZW0oaXRlbXNbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHQvKipcblx0XHRcdCAqIEluc2VydCBhIHNpbmdsZSBpdGVtIGludG8gdGhlIGdyaWRcblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge09iamVjdH0gaXRlbSBUaGUgaXRlbSB0byBpbnNlcnRcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSByb3cgKE9wdGlvbmFsKSBTcGVjaWZpZXMgdGhlIGl0ZW1zIHJvdyBpbmRleFxuXHRcdFx0ICogQHBhcmFtIHtOdW1iZXJ9IGNvbHVtbiAoT3B0aW9uYWwpIFNwZWNpZmllcyB0aGUgaXRlbXMgY29sdW1uIGluZGV4XG5cdFx0XHQgKiBAcGFyYW0ge0FycmF5fSBpZ25vcmVJdGVtc1xuXHRcdFx0ICovXG5cdFx0XHR0aGlzLnB1dEl0ZW0gPSBmdW5jdGlvbihpdGVtLCByb3csIGNvbHVtbiwgaWdub3JlSXRlbXMpIHtcblx0XHRcdFx0Ly8gYXV0byBwbGFjZSBpdGVtIGlmIG5vIHJvdyBzcGVjaWZpZWRcblx0XHRcdFx0aWYgKHR5cGVvZiByb3cgPT09ICd1bmRlZmluZWQnIHx8IHJvdyA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHJvdyA9IGl0ZW0ucm93O1xuXHRcdFx0XHRcdGNvbHVtbiA9IGl0ZW0uY29sO1xuXHRcdFx0XHRcdGlmICh0eXBlb2Ygcm93ID09PSAndW5kZWZpbmVkJyB8fCByb3cgPT09IG51bGwpIHtcblx0XHRcdFx0XHRcdHRoaXMuYXV0b1NldEl0ZW1Qb3NpdGlvbihpdGVtKTtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBrZWVwIGl0ZW0gd2l0aGluIGFsbG93ZWQgYm91bmRzXG5cdFx0XHRcdGlmICghdGhpcy5jYW5JdGVtT2NjdXB5KGl0ZW0sIHJvdywgY29sdW1uKSkge1xuXHRcdFx0XHRcdGNvbHVtbiA9IE1hdGgubWluKHRoaXMuY29sdW1ucyAtIGl0ZW0uc2l6ZVgsIE1hdGgubWF4KDAsIGNvbHVtbikpO1xuXHRcdFx0XHRcdHJvdyA9IE1hdGgubWluKHRoaXMubWF4Um93cyAtIGl0ZW0uc2l6ZVksIE1hdGgubWF4KDAsIHJvdykpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gY2hlY2sgaWYgaXRlbSBpcyBhbHJlYWR5IGluIGdyaWRcblx0XHRcdFx0aWYgKGl0ZW0ub2xkUm93ICE9PSBudWxsICYmIHR5cGVvZiBpdGVtLm9sZFJvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0XHR2YXIgc2FtZVBvc2l0aW9uID0gaXRlbS5vbGRSb3cgPT09IHJvdyAmJiBpdGVtLm9sZENvbHVtbiA9PT0gY29sdW1uO1xuXHRcdFx0XHRcdHZhciBpbkdyaWQgPSB0aGlzLmdyaWRbcm93XSAmJiB0aGlzLmdyaWRbcm93XVtjb2x1bW5dID09PSBpdGVtO1xuXHRcdFx0XHRcdGlmIChzYW1lUG9zaXRpb24gJiYgaW5HcmlkKSB7XG5cdFx0XHRcdFx0XHRpdGVtLnJvdyA9IHJvdztcblx0XHRcdFx0XHRcdGl0ZW0uY29sID0gY29sdW1uO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHQvLyByZW1vdmUgZnJvbSBvbGQgcG9zaXRpb25cblx0XHRcdFx0XHRcdHZhciBvbGRSb3cgPSB0aGlzLmdyaWRbaXRlbS5vbGRSb3ddO1xuXHRcdFx0XHRcdFx0aWYgKG9sZFJvdyAmJiBvbGRSb3dbaXRlbS5vbGRDb2x1bW5dID09PSBpdGVtKSB7XG5cdFx0XHRcdFx0XHRcdGRlbGV0ZSBvbGRSb3dbaXRlbS5vbGRDb2x1bW5dO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGl0ZW0ub2xkUm93ID0gaXRlbS5yb3cgPSByb3c7XG5cdFx0XHRcdGl0ZW0ub2xkQ29sdW1uID0gaXRlbS5jb2wgPSBjb2x1bW47XG5cblx0XHRcdFx0dGhpcy5tb3ZlT3ZlcmxhcHBpbmdJdGVtcyhpdGVtLCBpZ25vcmVJdGVtcyk7XG5cblx0XHRcdFx0aWYgKCF0aGlzLmdyaWRbcm93XSkge1xuXHRcdFx0XHRcdHRoaXMuZ3JpZFtyb3ddID0gW107XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5ncmlkW3Jvd11bY29sdW1uXSA9IGl0ZW07XG5cblx0XHRcdFx0aWYgKHRoaXMubW92aW5nSXRlbSA9PT0gaXRlbSkge1xuXHRcdFx0XHRcdHRoaXMuZmxvYXRJdGVtVXAoaXRlbSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5sYXlvdXRDaGFuZ2VkKCk7XG5cdFx0XHR9O1xuXG5cdFx0XHQvKipcblx0XHRcdCAqIFRyYWRlIHJvdyBhbmQgY29sdW1uIGlmIGl0ZW0xIHdpdGggaXRlbTJcblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge09iamVjdH0gaXRlbTFcblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0fSBpdGVtMlxuXHRcdFx0ICovXG5cdFx0XHR0aGlzLnN3YXBJdGVtcyA9IGZ1bmN0aW9uKGl0ZW0xLCBpdGVtMikge1xuXHRcdFx0XHR0aGlzLmdyaWRbaXRlbTEucm93XVtpdGVtMS5jb2xdID0gaXRlbTI7XG5cdFx0XHRcdHRoaXMuZ3JpZFtpdGVtMi5yb3ddW2l0ZW0yLmNvbF0gPSBpdGVtMTtcblxuXHRcdFx0XHR2YXIgaXRlbTFSb3cgPSBpdGVtMS5yb3c7XG5cdFx0XHRcdHZhciBpdGVtMUNvbCA9IGl0ZW0xLmNvbDtcblx0XHRcdFx0aXRlbTEucm93ID0gaXRlbTIucm93O1xuXHRcdFx0XHRpdGVtMS5jb2wgPSBpdGVtMi5jb2w7XG5cdFx0XHRcdGl0ZW0yLnJvdyA9IGl0ZW0xUm93O1xuXHRcdFx0XHRpdGVtMi5jb2wgPSBpdGVtMUNvbDtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUHJldmVudHMgaXRlbXMgZnJvbSBiZWluZyBvdmVybGFwcGVkXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtPYmplY3R9IGl0ZW0gVGhlIGl0ZW0gdGhhdCBzaG91bGQgcmVtYWluXG5cdFx0XHQgKiBAcGFyYW0ge0FycmF5fSBpZ25vcmVJdGVtc1xuXHRcdFx0ICovXG5cdFx0XHR0aGlzLm1vdmVPdmVybGFwcGluZ0l0ZW1zID0gZnVuY3Rpb24oaXRlbSwgaWdub3JlSXRlbXMpIHtcblx0XHRcdFx0Ly8gZG9uJ3QgbW92ZSBpdGVtLCBzbyBpZ25vcmUgaXRcblx0XHRcdFx0aWYgKCFpZ25vcmVJdGVtcykge1xuXHRcdFx0XHRcdGlnbm9yZUl0ZW1zID0gW2l0ZW1dO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGlnbm9yZUl0ZW1zLmluZGV4T2YoaXRlbSkgPT09IC0xKSB7XG5cdFx0XHRcdFx0aWdub3JlSXRlbXMgPSBpZ25vcmVJdGVtcy5zbGljZSgwKTtcblx0XHRcdFx0XHRpZ25vcmVJdGVtcy5wdXNoKGl0ZW0pO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gZ2V0IHRoZSBpdGVtcyBpbiB0aGUgc3BhY2Ugb2NjdXBpZWQgYnkgdGhlIGl0ZW0ncyBjb29yZGluYXRlc1xuXHRcdFx0XHR2YXIgb3ZlcmxhcHBpbmdJdGVtcyA9IHRoaXMuZ2V0SXRlbXMoXG5cdFx0XHRcdFx0aXRlbS5yb3csXG5cdFx0XHRcdFx0aXRlbS5jb2wsXG5cdFx0XHRcdFx0aXRlbS5zaXplWCxcblx0XHRcdFx0XHRpdGVtLnNpemVZLFxuXHRcdFx0XHRcdGlnbm9yZUl0ZW1zXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHRoaXMubW92ZUl0ZW1zRG93bihvdmVybGFwcGluZ0l0ZW1zLCBpdGVtLnJvdyArIGl0ZW0uc2l6ZVksIGlnbm9yZUl0ZW1zKTtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogTW92ZXMgYW4gYXJyYXkgb2YgaXRlbXMgdG8gYSBzcGVjaWZpZWQgcm93XG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtBcnJheX0gaXRlbXMgVGhlIGl0ZW1zIHRvIG1vdmVcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBuZXdSb3cgVGhlIHRhcmdldCByb3dcblx0XHRcdCAqIEBwYXJhbSB7QXJyYXl9IGlnbm9yZUl0ZW1zXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMubW92ZUl0ZW1zRG93biA9IGZ1bmN0aW9uKGl0ZW1zLCBuZXdSb3csIGlnbm9yZUl0ZW1zKSB7XG5cdFx0XHRcdGlmICghaXRlbXMgfHwgaXRlbXMubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGl0ZW1zLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0XHRcdHJldHVybiBhLnJvdyAtIGIucm93O1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRpZ25vcmVJdGVtcyA9IGlnbm9yZUl0ZW1zID8gaWdub3JlSXRlbXMuc2xpY2UoMCkgOiBbXTtcblx0XHRcdFx0dmFyIHRvcFJvd3MgPSB7fSxcblx0XHRcdFx0XHRpdGVtLCBpLCBsO1xuXG5cdFx0XHRcdC8vIGNhbGN1bGF0ZSB0aGUgdG9wIHJvd3MgaW4gZWFjaCBjb2x1bW5cblx0XHRcdFx0Zm9yIChpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuXHRcdFx0XHRcdGl0ZW0gPSBpdGVtc1tpXTtcblx0XHRcdFx0XHR2YXIgdG9wUm93ID0gdG9wUm93c1tpdGVtLmNvbF07XG5cdFx0XHRcdFx0aWYgKHR5cGVvZiB0b3BSb3cgPT09ICd1bmRlZmluZWQnIHx8IGl0ZW0ucm93IDwgdG9wUm93KSB7XG5cdFx0XHRcdFx0XHR0b3BSb3dzW2l0ZW0uY29sXSA9IGl0ZW0ucm93O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG1vdmUgZWFjaCBpdGVtIGRvd24gZnJvbSB0aGUgdG9wIHJvdyBpbiBpdHMgY29sdW1uIHRvIHRoZSByb3dcblx0XHRcdFx0Zm9yIChpID0gMCwgbCA9IGl0ZW1zLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuXHRcdFx0XHRcdGl0ZW0gPSBpdGVtc1tpXTtcblx0XHRcdFx0XHR2YXIgcm93c1RvTW92ZSA9IG5ld1JvdyAtIHRvcFJvd3NbaXRlbS5jb2xdO1xuXHRcdFx0XHRcdHRoaXMubW92ZUl0ZW1Eb3duKGl0ZW0sIGl0ZW0ucm93ICsgcm93c1RvTW92ZSwgaWdub3JlSXRlbXMpO1xuXHRcdFx0XHRcdGlnbm9yZUl0ZW1zLnB1c2goaXRlbSk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogTW92ZXMgYW4gaXRlbSBkb3duIHRvIGEgc3BlY2lmaWVkIHJvd1xuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7T2JqZWN0fSBpdGVtIFRoZSBpdGVtIHRvIG1vdmVcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBuZXdSb3cgVGhlIHRhcmdldCByb3dcblx0XHRcdCAqIEBwYXJhbSB7QXJyYXl9IGlnbm9yZUl0ZW1zXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMubW92ZUl0ZW1Eb3duID0gZnVuY3Rpb24oaXRlbSwgbmV3Um93LCBpZ25vcmVJdGVtcykge1xuXHRcdFx0XHRpZiAoaXRlbS5yb3cgPj0gbmV3Um93KSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHdoaWxlIChpdGVtLnJvdyA8IG5ld1Jvdykge1xuXHRcdFx0XHRcdCsraXRlbS5yb3c7XG5cdFx0XHRcdFx0dGhpcy5tb3ZlT3ZlcmxhcHBpbmdJdGVtcyhpdGVtLCBpZ25vcmVJdGVtcyk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5wdXRJdGVtKGl0ZW0sIGl0ZW0ucm93LCBpdGVtLmNvbCwgaWdub3JlSXRlbXMpO1xuXHRcdFx0fTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBNb3ZlcyBhbGwgaXRlbXMgdXAgYXMgbXVjaCBhcyBwb3NzaWJsZVxuXHRcdFx0ICovXG5cdFx0XHR0aGlzLmZsb2F0SXRlbXNVcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAodGhpcy5mbG9hdGluZyA9PT0gZmFsc2UpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yICh2YXIgcm93SW5kZXggPSAwLCBsID0gdGhpcy5ncmlkLmxlbmd0aDsgcm93SW5kZXggPCBsOyArK3Jvd0luZGV4KSB7XG5cdFx0XHRcdFx0dmFyIGNvbHVtbnMgPSB0aGlzLmdyaWRbcm93SW5kZXhdO1xuXHRcdFx0XHRcdGlmICghY29sdW1ucykge1xuXHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGZvciAodmFyIGNvbEluZGV4ID0gMCwgbGVuID0gY29sdW1ucy5sZW5ndGg7IGNvbEluZGV4IDwgbGVuOyArK2NvbEluZGV4KSB7XG5cdFx0XHRcdFx0XHR2YXIgaXRlbSA9IGNvbHVtbnNbY29sSW5kZXhdO1xuXHRcdFx0XHRcdFx0aWYgKGl0ZW0pIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5mbG9hdEl0ZW1VcChpdGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogRmxvYXQgYW4gaXRlbSB1cCB0byB0aGUgbW9zdCBzdWl0YWJsZSByb3dcblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge09iamVjdH0gaXRlbSBUaGUgaXRlbSB0byBtb3ZlXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMuZmxvYXRJdGVtVXAgPSBmdW5jdGlvbihpdGVtKSB7XG5cdFx0XHRcdGlmICh0aGlzLmZsb2F0aW5nID09PSBmYWxzZSkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgY29sSW5kZXggPSBpdGVtLmNvbCxcblx0XHRcdFx0XHRzaXplWSA9IGl0ZW0uc2l6ZVksXG5cdFx0XHRcdFx0c2l6ZVggPSBpdGVtLnNpemVYLFxuXHRcdFx0XHRcdGJlc3RSb3cgPSBudWxsLFxuXHRcdFx0XHRcdGJlc3RDb2x1bW4gPSBudWxsLFxuXHRcdFx0XHRcdHJvd0luZGV4ID0gaXRlbS5yb3cgLSAxO1xuXG5cdFx0XHRcdHdoaWxlIChyb3dJbmRleCA+IC0xKSB7XG5cdFx0XHRcdFx0dmFyIGl0ZW1zID0gdGhpcy5nZXRJdGVtcyhyb3dJbmRleCwgY29sSW5kZXgsIHNpemVYLCBzaXplWSwgaXRlbSk7XG5cdFx0XHRcdFx0aWYgKGl0ZW1zLmxlbmd0aCAhPT0gMCkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJlc3RSb3cgPSByb3dJbmRleDtcblx0XHRcdFx0XHRiZXN0Q29sdW1uID0gY29sSW5kZXg7XG5cdFx0XHRcdFx0LS1yb3dJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoYmVzdFJvdyAhPT0gbnVsbCkge1xuXHRcdFx0XHRcdHRoaXMucHV0SXRlbShpdGVtLCBiZXN0Um93LCBiZXN0Q29sdW1uKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBVcGRhdGUgZ3JpZHN0ZXJzIGhlaWdodFxuXHRcdFx0ICpcblx0XHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBwbHVzIChPcHRpb25hbCkgQWRkaXRpb25hbCBoZWlnaHQgdG8gYWRkXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMudXBkYXRlSGVpZ2h0ID0gZnVuY3Rpb24ocGx1cykge1xuXHRcdFx0XHR2YXIgbWF4SGVpZ2h0ID0gdGhpcy5taW5Sb3dzO1xuXHRcdFx0XHRwbHVzID0gcGx1cyB8fCAwO1xuXHRcdFx0XHRmb3IgKHZhciByb3dJbmRleCA9IHRoaXMuZ3JpZC5sZW5ndGg7IHJvd0luZGV4ID49IDA7IC0tcm93SW5kZXgpIHtcblx0XHRcdFx0XHR2YXIgY29sdW1ucyA9IHRoaXMuZ3JpZFtyb3dJbmRleF07XG5cdFx0XHRcdFx0aWYgKCFjb2x1bW5zKSB7XG5cdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Zm9yICh2YXIgY29sSW5kZXggPSAwLCBsZW4gPSBjb2x1bW5zLmxlbmd0aDsgY29sSW5kZXggPCBsZW47ICsrY29sSW5kZXgpIHtcblx0XHRcdFx0XHRcdGlmIChjb2x1bW5zW2NvbEluZGV4XSkge1xuXHRcdFx0XHRcdFx0XHRtYXhIZWlnaHQgPSBNYXRoLm1heChtYXhIZWlnaHQsIHJvd0luZGV4ICsgcGx1cyArIGNvbHVtbnNbY29sSW5kZXhdLnNpemVZKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5ncmlkSGVpZ2h0ID0gdGhpcy5tYXhSb3dzIC0gbWF4SGVpZ2h0ID4gMCA/IE1hdGgubWluKHRoaXMubWF4Um93cywgbWF4SGVpZ2h0KSA6IE1hdGgubWF4KHRoaXMubWF4Um93cywgbWF4SGVpZ2h0KTtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHJvd3MgdGhhdCB3aWxsIGZpdCBpbiBnaXZlbiBhbW91bnQgb2YgcGl4ZWxzXG5cdFx0XHQgKlxuXHRcdFx0ICogQHBhcmFtIHtOdW1iZXJ9IHBpeGVsc1xuXHRcdFx0ICogQHBhcmFtIHtCb29sZWFufSBjZWlsT3JGbG9vciAoT3B0aW9uYWwpIERldGVybWluZXMgcm91bmRpbmcgbWV0aG9kXG5cdFx0XHQgKi9cblx0XHRcdHRoaXMucGl4ZWxzVG9Sb3dzID0gZnVuY3Rpb24ocGl4ZWxzLCBjZWlsT3JGbG9vcikge1xuXHRcdFx0XHRpZiAoIXRoaXMub3V0ZXJNYXJnaW4pIHtcblx0XHRcdFx0XHRwaXhlbHMgKz0gdGhpcy5tYXJnaW5zWzBdIC8gMjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjZWlsT3JGbG9vciA9PT0gdHJ1ZSkge1xuXHRcdFx0XHRcdHJldHVybiBNYXRoLmNlaWwocGl4ZWxzIC8gdGhpcy5jdXJSb3dIZWlnaHQpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGNlaWxPckZsb29yID09PSBmYWxzZSkge1xuXHRcdFx0XHRcdHJldHVybiBNYXRoLmZsb29yKHBpeGVscyAvIHRoaXMuY3VyUm93SGVpZ2h0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBNYXRoLnJvdW5kKHBpeGVscyAvIHRoaXMuY3VyUm93SGVpZ2h0KTtcblx0XHRcdH07XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgdGhhdCB3aWxsIGZpdCBpbiBhIGdpdmVuIGFtb3VudCBvZiBwaXhlbHNcblx0XHRcdCAqXG5cdFx0XHQgKiBAcGFyYW0ge051bWJlcn0gcGl4ZWxzXG5cdFx0XHQgKiBAcGFyYW0ge0Jvb2xlYW59IGNlaWxPckZsb29yIChPcHRpb25hbCkgRGV0ZXJtaW5lcyByb3VuZGluZyBtZXRob2Rcblx0XHRcdCAqIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBudW1iZXIgb2YgY29sdW1uc1xuXHRcdFx0ICovXG5cdFx0XHR0aGlzLnBpeGVsc1RvQ29sdW1ucyA9IGZ1bmN0aW9uKHBpeGVscywgY2VpbE9yRmxvb3IpIHtcblx0XHRcdFx0aWYgKCF0aGlzLm91dGVyTWFyZ2luKSB7XG5cdFx0XHRcdFx0cGl4ZWxzICs9IHRoaXMubWFyZ2luc1sxXSAvIDI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoY2VpbE9yRmxvb3IgPT09IHRydWUpIHtcblx0XHRcdFx0XHRyZXR1cm4gTWF0aC5jZWlsKHBpeGVscyAvIHRoaXMuY3VyQ29sV2lkdGgpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGNlaWxPckZsb29yID09PSBmYWxzZSkge1xuXHRcdFx0XHRcdHJldHVybiBNYXRoLmZsb29yKHBpeGVscyAvIHRoaXMuY3VyQ29sV2lkdGgpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIE1hdGgucm91bmQocGl4ZWxzIC8gdGhpcy5jdXJDb2xXaWR0aCk7XG5cdFx0XHR9O1xuXHRcdH1cblx0XSlcblxuXHQuZGlyZWN0aXZlKCdncmlkc3RlclByZXZpZXcnLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0cmVwbGFjZTogdHJ1ZSxcblx0XHRcdHNjb3BlOiB0cnVlLFxuXHRcdFx0cmVxdWlyZTogJ15ncmlkc3RlcicsXG5cdFx0XHR0ZW1wbGF0ZTogJzxkaXYgbmctc3R5bGU9XCJwcmV2aWV3U3R5bGUoKVwiIGNsYXNzPVwiZ3JpZHN0ZXItaXRlbSBncmlkc3Rlci1wcmV2aWV3LWhvbGRlclwiPjwvZGl2PicsXG5cdFx0XHRsaW5rOiBmdW5jdGlvbihzY29wZSwgJGVsLCBhdHRycywgZ3JpZHN0ZXIpIHtcblxuXHRcdFx0XHQvKipcblx0XHRcdFx0ICogQHJldHVybnMge09iamVjdH0gc3R5bGUgb2JqZWN0IGZvciBwcmV2aWV3IGVsZW1lbnRcblx0XHRcdFx0ICovXG5cdFx0XHRcdHNjb3BlLnByZXZpZXdTdHlsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICghZ3JpZHN0ZXIubW92aW5nSXRlbSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdFx0ZGlzcGxheTogJ25vbmUnXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdFx0XHRcdFx0aGVpZ2h0OiAoZ3JpZHN0ZXIubW92aW5nSXRlbS5zaXplWSAqIGdyaWRzdGVyLmN1clJvd0hlaWdodCAtIGdyaWRzdGVyLm1hcmdpbnNbMF0pICsgJ3B4Jyxcblx0XHRcdFx0XHRcdHdpZHRoOiAoZ3JpZHN0ZXIubW92aW5nSXRlbS5zaXplWCAqIGdyaWRzdGVyLmN1ckNvbFdpZHRoIC0gZ3JpZHN0ZXIubWFyZ2luc1sxXSkgKyAncHgnLFxuXHRcdFx0XHRcdFx0dG9wOiAoZ3JpZHN0ZXIubW92aW5nSXRlbS5yb3cgKiBncmlkc3Rlci5jdXJSb3dIZWlnaHQgKyAoZ3JpZHN0ZXIub3V0ZXJNYXJnaW4gPyBncmlkc3Rlci5tYXJnaW5zWzBdIDogMCkpICsgJ3B4Jyxcblx0XHRcdFx0XHRcdGxlZnQ6IChncmlkc3Rlci5tb3ZpbmdJdGVtLmNvbCAqIGdyaWRzdGVyLmN1ckNvbFdpZHRoICsgKGdyaWRzdGVyLm91dGVyTWFyZ2luID8gZ3JpZHN0ZXIubWFyZ2luc1sxXSA6IDApKSArICdweCdcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH07XG5cdH0pXG5cblx0LyoqXG5cdCAqIFRoZSBncmlkc3RlciBkaXJlY3RpdmVcblx0ICpcblx0ICogQHBhcmFtIHtGdW5jdGlvbn0gJHRpbWVvdXRcblx0ICogQHBhcmFtIHtPYmplY3R9ICR3aW5kb3dcblx0ICogQHBhcmFtIHtPYmplY3R9ICRyb290U2NvcGVcblx0ICogQHBhcmFtIHtGdW5jdGlvbn0gZ3JpZHN0ZXJEZWJvdW5jZVxuXHQgKi9cblx0LmRpcmVjdGl2ZSgnZ3JpZHN0ZXInLCBbJyR0aW1lb3V0JywgJyR3aW5kb3cnLCAnJHJvb3RTY29wZScsICdncmlkc3RlckRlYm91bmNlJyxcblx0XHRmdW5jdGlvbigkdGltZW91dCwgJHdpbmRvdywgJHJvb3RTY29wZSwgZ3JpZHN0ZXJEZWJvdW5jZSkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0c2NvcGU6IHRydWUsXG5cdFx0XHRcdHJlc3RyaWN0OiAnRUFDJyxcblx0XHRcdFx0Y29udHJvbGxlcjogJ0dyaWRzdGVyQ3RybCcsXG5cdFx0XHRcdGNvbnRyb2xsZXJBczogJ2dyaWRzdGVyJyxcblx0XHRcdFx0Y29tcGlsZTogZnVuY3Rpb24oJHRwbEVsZW0pIHtcblxuXHRcdFx0XHRcdCR0cGxFbGVtLnByZXBlbmQoJzxkaXYgbmctaWY9XCJncmlkc3Rlci5tb3ZpbmdJdGVtXCIgZ3JpZHN0ZXItcHJldmlldz48L2Rpdj4nKTtcblxuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbihzY29wZSwgJGVsZW0sIGF0dHJzLCBncmlkc3Rlcikge1xuXHRcdFx0XHRcdFx0Z3JpZHN0ZXIubG9hZGVkID0gZmFsc2U7XG5cblx0XHRcdFx0XHRcdGdyaWRzdGVyLiRlbGVtZW50ID0gJGVsZW07XG5cblx0XHRcdFx0XHRcdHNjb3BlLmdyaWRzdGVyID0gZ3JpZHN0ZXI7XG5cblx0XHRcdFx0XHRcdCRlbGVtLmFkZENsYXNzKCdncmlkc3RlcicpO1xuXG5cdFx0XHRcdFx0XHR2YXIgaXNWaXNpYmxlID0gZnVuY3Rpb24oZWxlKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBlbGUuc3R5bGUudmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicgJiYgZWxlLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdGZ1bmN0aW9uIHVwZGF0ZUhlaWdodCgpIHtcblx0XHRcdFx0XHRcdFx0JGVsZW0uY3NzKCdoZWlnaHQnLCAoZ3JpZHN0ZXIuZ3JpZEhlaWdodCAqIGdyaWRzdGVyLmN1clJvd0hlaWdodCkgKyAoZ3JpZHN0ZXIub3V0ZXJNYXJnaW4gPyBncmlkc3Rlci5tYXJnaW5zWzBdIDogLWdyaWRzdGVyLm1hcmdpbnNbMF0pICsgJ3B4Jyk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdyaWRzdGVyLmdyaWRIZWlnaHQ7XG5cdFx0XHRcdFx0XHR9LCB1cGRhdGVIZWlnaHQpO1xuXG5cdFx0XHRcdFx0XHRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBncmlkc3Rlci5tb3ZpbmdJdGVtO1xuXHRcdFx0XHRcdFx0fSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLnVwZGF0ZUhlaWdodChncmlkc3Rlci5tb3ZpbmdJdGVtID8gZ3JpZHN0ZXIubW92aW5nSXRlbS5zaXplWSA6IDApO1xuXHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdGZ1bmN0aW9uIHJlZnJlc2goY29uZmlnKSB7XG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLnNldE9wdGlvbnMoY29uZmlnKTtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIWlzVmlzaWJsZSgkZWxlbVswXSkpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyByZXNvbHZlIFwiYXV0b1wiICYgXCJtYXRjaFwiIHZhbHVlc1xuXHRcdFx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIud2lkdGggPT09ICdhdXRvJykge1xuXHRcdFx0XHRcdFx0XHRcdGdyaWRzdGVyLmN1cldpZHRoID0gJGVsZW1bMF0ub2Zmc2V0V2lkdGggfHwgcGFyc2VJbnQoJGVsZW0uY3NzKCd3aWR0aCcpLCAxMCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuY3VyV2lkdGggPSBncmlkc3Rlci53aWR0aDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdGlmIChncmlkc3Rlci5jb2xXaWR0aCA9PT0gJ2F1dG8nKSB7XG5cdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuY3VyQ29sV2lkdGggPSAoZ3JpZHN0ZXIuY3VyV2lkdGggKyAoZ3JpZHN0ZXIub3V0ZXJNYXJnaW4gPyAtZ3JpZHN0ZXIubWFyZ2luc1sxXSA6IGdyaWRzdGVyLm1hcmdpbnNbMV0pKSAvIGdyaWRzdGVyLmNvbHVtbnM7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuY3VyQ29sV2lkdGggPSBncmlkc3Rlci5jb2xXaWR0aDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLmN1clJvd0hlaWdodCA9IGdyaWRzdGVyLnJvd0hlaWdodDtcblx0XHRcdFx0XHRcdFx0aWYgKHR5cGVvZiBncmlkc3Rlci5yb3dIZWlnaHQgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGdyaWRzdGVyLnJvd0hlaWdodCA9PT0gJ21hdGNoJykge1xuXHRcdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuY3VyUm93SGVpZ2h0ID0gTWF0aC5yb3VuZChncmlkc3Rlci5jdXJDb2xXaWR0aCk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChncmlkc3Rlci5yb3dIZWlnaHQuaW5kZXhPZignKicpICE9PSAtMSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuY3VyUm93SGVpZ2h0ID0gTWF0aC5yb3VuZChncmlkc3Rlci5jdXJDb2xXaWR0aCAqIGdyaWRzdGVyLnJvd0hlaWdodC5yZXBsYWNlKCcqJywgJycpLnJlcGxhY2UoJyAnLCAnJykpO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoZ3JpZHN0ZXIucm93SGVpZ2h0LmluZGV4T2YoJy8nKSAhPT0gLTEpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGdyaWRzdGVyLmN1clJvd0hlaWdodCA9IE1hdGgucm91bmQoZ3JpZHN0ZXIuY3VyQ29sV2lkdGggLyBncmlkc3Rlci5yb3dIZWlnaHQucmVwbGFjZSgnLycsICcnKS5yZXBsYWNlKCcgJywgJycpKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRncmlkc3Rlci5pc01vYmlsZSA9IGdyaWRzdGVyLm1vYmlsZU1vZGVFbmFibGVkICYmIGdyaWRzdGVyLmN1cldpZHRoIDw9IGdyaWRzdGVyLm1vYmlsZUJyZWFrUG9pbnQ7XG5cblx0XHRcdFx0XHRcdFx0Ly8gbG9vcCB0aHJvdWdoIGFsbCBpdGVtcyBhbmQgcmVzZXQgdGhlaXIgQ1NTXG5cdFx0XHRcdFx0XHRcdGZvciAodmFyIHJvd0luZGV4ID0gMCwgbCA9IGdyaWRzdGVyLmdyaWQubGVuZ3RoOyByb3dJbmRleCA8IGw7ICsrcm93SW5kZXgpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgY29sdW1ucyA9IGdyaWRzdGVyLmdyaWRbcm93SW5kZXhdO1xuXHRcdFx0XHRcdFx0XHRcdGlmICghY29sdW1ucykge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0Zm9yICh2YXIgY29sSW5kZXggPSAwLCBsZW4gPSBjb2x1bW5zLmxlbmd0aDsgY29sSW5kZXggPCBsZW47ICsrY29sSW5kZXgpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChjb2x1bW5zW2NvbEluZGV4XSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgaXRlbSA9IGNvbHVtbnNbY29sSW5kZXhdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpdGVtLnNldEVsZW1lbnRQb3NpdGlvbigpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpdGVtLnNldEVsZW1lbnRTaXplWSgpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpdGVtLnNldEVsZW1lbnRTaXplWCgpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZUhlaWdodCgpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR2YXIgb3B0aW9uc0tleSA9IGF0dHJzLmdyaWRzdGVyO1xuXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnNLZXkpIHtcblx0XHRcdFx0XHRcdFx0c2NvcGUuJHBhcmVudC4kd2F0Y2gob3B0aW9uc0tleSwgZnVuY3Rpb24obmV3Q29uZmlnKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVmcmVzaChuZXdDb25maWcpO1xuXHRcdFx0XHRcdFx0XHR9LCB0cnVlKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJlZnJlc2goe30pO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBncmlkc3Rlci5sb2FkZWQ7XG5cdFx0XHRcdFx0XHR9LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGdyaWRzdGVyLmxvYWRlZCkge1xuXHRcdFx0XHRcdFx0XHRcdCRlbGVtLmFkZENsYXNzKCdncmlkc3Rlci1sb2FkZWQnKTtcblx0XHRcdFx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLWxvYWRlZCcsIGdyaWRzdGVyKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHQkZWxlbS5yZW1vdmVDbGFzcygnZ3JpZHN0ZXItbG9hZGVkJyk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBncmlkc3Rlci5pc01vYmlsZTtcblx0XHRcdFx0XHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIuaXNNb2JpbGUpIHtcblx0XHRcdFx0XHRcdFx0XHQkZWxlbS5hZGRDbGFzcygnZ3JpZHN0ZXItbW9iaWxlJykucmVtb3ZlQ2xhc3MoJ2dyaWRzdGVyLWRlc2t0b3AnKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHQkZWxlbS5yZW1vdmVDbGFzcygnZ3JpZHN0ZXItbW9iaWxlJykuYWRkQ2xhc3MoJ2dyaWRzdGVyLWRlc2t0b3AnKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLW1vYmlsZS1jaGFuZ2VkJywgZ3JpZHN0ZXIpO1xuXHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdyaWRzdGVyLmRyYWdnYWJsZTtcblx0XHRcdFx0XHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLWRyYWdnYWJsZS1jaGFuZ2VkJywgZ3JpZHN0ZXIpO1xuXHRcdFx0XHRcdFx0fSwgdHJ1ZSk7XG5cblx0XHRcdFx0XHRcdHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdyaWRzdGVyLnJlc2l6YWJsZTtcblx0XHRcdFx0XHRcdH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLXJlc2l6YWJsZS1jaGFuZ2VkJywgZ3JpZHN0ZXIpO1xuXHRcdFx0XHRcdFx0fSwgdHJ1ZSk7XG5cblx0XHRcdFx0XHRcdHZhciBwcmV2V2lkdGggPSAkZWxlbVswXS5vZmZzZXRXaWR0aCB8fCBwYXJzZUludCgkZWxlbS5jc3MoJ3dpZHRoJyksIDEwKTtcblxuXHRcdFx0XHRcdFx0dmFyIHJlc2l6ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgd2lkdGggPSAkZWxlbVswXS5vZmZzZXRXaWR0aCB8fCBwYXJzZUludCgkZWxlbS5jc3MoJ3dpZHRoJyksIDEwKTtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIXdpZHRoIHx8IHdpZHRoID09PSBwcmV2V2lkdGggfHwgZ3JpZHN0ZXIubW92aW5nSXRlbSkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRwcmV2V2lkdGggPSB3aWR0aDtcblxuXHRcdFx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIubG9hZGVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0JGVsZW0ucmVtb3ZlQ2xhc3MoJ2dyaWRzdGVyLWxvYWRlZCcpO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0cmVmcmVzaCgpO1xuXG5cdFx0XHRcdFx0XHRcdGlmIChncmlkc3Rlci5sb2FkZWQpIHtcblx0XHRcdFx0XHRcdFx0XHQkZWxlbS5hZGRDbGFzcygnZ3JpZHN0ZXItbG9hZGVkJyk7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLXJlc2l6ZWQnLCBbd2lkdGgsICRlbGVtWzBdLm9mZnNldEhlaWdodF0sIGdyaWRzdGVyKTtcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdC8vIHRyYWNrIGVsZW1lbnQgd2lkdGggY2hhbmdlcyBhbnkgd2F5IHdlIGNhblxuXHRcdFx0XHRcdFx0dmFyIG9uUmVzaXplID0gZ3JpZHN0ZXJEZWJvdW5jZShmdW5jdGlvbiBvblJlc2l6ZSgpIHtcblx0XHRcdFx0XHRcdFx0cmVzaXplKCk7XG5cdFx0XHRcdFx0XHRcdCR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHNjb3BlLiRhcHBseSgpO1xuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH0sIDEwMCk7XG5cblx0XHRcdFx0XHRcdHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGlzVmlzaWJsZSgkZWxlbVswXSk7XG5cdFx0XHRcdFx0XHR9LCBvblJlc2l6ZSk7XG5cblx0XHRcdFx0XHRcdC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vc2RlY2ltYS9qYXZhc2NyaXB0LWRldGVjdC1lbGVtZW50LXJlc2l6ZVxuXHRcdFx0XHRcdFx0aWYgKHR5cGVvZiB3aW5kb3cuYWRkUmVzaXplTGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0XHRcdFx0d2luZG93LmFkZFJlc2l6ZUxpc3RlbmVyKCRlbGVtWzBdLCBvblJlc2l6ZSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRzY29wZS4kd2F0Y2goZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuICRlbGVtWzBdLm9mZnNldFdpZHRoIHx8IHBhcnNlSW50KCRlbGVtLmNzcygnd2lkdGgnKSwgMTApO1xuXHRcdFx0XHRcdFx0XHR9LCByZXNpemUpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0dmFyICR3aW4gPSBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdyk7XG5cdFx0XHRcdFx0XHQkd2luLm9uKCdyZXNpemUnLCBvblJlc2l6ZSk7XG5cblx0XHRcdFx0XHRcdC8vIGJlIHN1cmUgdG8gY2xlYW51cFxuXHRcdFx0XHRcdFx0c2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRncmlkc3Rlci5kZXN0cm95KCk7XG5cdFx0XHRcdFx0XHRcdCR3aW4ub2ZmKCdyZXNpemUnLCBvblJlc2l6ZSk7XG5cdFx0XHRcdFx0XHRcdGlmICh0eXBlb2Ygd2luZG93LnJlbW92ZVJlc2l6ZUxpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LnJlbW92ZVJlc2l6ZUxpc3RlbmVyKCRlbGVtWzBdLCBvblJlc2l6ZSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHQvLyBhbGxvdyBhIGxpdHRsZSB0aW1lIHRvIHBsYWNlIGl0ZW1zIGJlZm9yZSBmbG9hdGluZyB1cFxuXHRcdFx0XHRcdFx0JHRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHNjb3BlLiR3YXRjaCgnZ3JpZHN0ZXIuZmxvYXRpbmcnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRncmlkc3Rlci5mbG9hdEl0ZW1zVXAoKTtcblx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLmxvYWRlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHR9LCAxMDApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRdKVxuXG5cdC5jb250cm9sbGVyKCdHcmlkc3Rlckl0ZW1DdHJsJywgZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy4kZWxlbWVudCA9IG51bGw7XG5cdFx0dGhpcy5ncmlkc3RlciA9IG51bGw7XG5cdFx0dGhpcy5yb3cgPSBudWxsO1xuXHRcdHRoaXMuY29sID0gbnVsbDtcblx0XHR0aGlzLnNpemVYID0gbnVsbDtcblx0XHR0aGlzLnNpemVZID0gbnVsbDtcblx0XHR0aGlzLm1pblNpemVYID0gMDtcblx0XHR0aGlzLm1pblNpemVZID0gMDtcblx0XHR0aGlzLm1heFNpemVYID0gbnVsbDtcblx0XHR0aGlzLm1heFNpemVZID0gbnVsbDtcblxuXHRcdHRoaXMuaW5pdCA9IGZ1bmN0aW9uKCRlbGVtZW50LCBncmlkc3Rlcikge1xuXHRcdFx0dGhpcy4kZWxlbWVudCA9ICRlbGVtZW50O1xuXHRcdFx0dGhpcy5ncmlkc3RlciA9IGdyaWRzdGVyO1xuXHRcdFx0dGhpcy5zaXplWCA9IGdyaWRzdGVyLmRlZmF1bHRTaXplWDtcblx0XHRcdHRoaXMuc2l6ZVkgPSBncmlkc3Rlci5kZWZhdWx0U2l6ZVk7XG5cdFx0fTtcblxuXHRcdHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gc2V0IHRoZXNlIHRvIG51bGwgdG8gYXZvaWQgdGhlIHBvc3NpYmlsaXR5IG9mIGNpcmN1bGFyIHJlZmVyZW5jZXNcblx0XHRcdHRoaXMuZ3JpZHN0ZXIgPSBudWxsO1xuXHRcdFx0dGhpcy4kZWxlbWVudCA9IG51bGw7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFJldHVybnMgdGhlIGl0ZW1zIG1vc3QgaW1wb3J0YW50IGF0dHJpYnV0ZXNcblx0XHQgKi9cblx0XHR0aGlzLnRvSlNPTiA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0cm93OiB0aGlzLnJvdyxcblx0XHRcdFx0Y29sOiB0aGlzLmNvbCxcblx0XHRcdFx0c2l6ZVk6IHRoaXMuc2l6ZVksXG5cdFx0XHRcdHNpemVYOiB0aGlzLnNpemVYXG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHR0aGlzLmlzTW92aW5nID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5ncmlkc3Rlci5tb3ZpbmdJdGVtID09PSB0aGlzO1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBTZXQgdGhlIGl0ZW1zIHBvc2l0aW9uXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0ge051bWJlcn0gcm93XG5cdFx0ICogQHBhcmFtIHtOdW1iZXJ9IGNvbHVtblxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0UG9zaXRpb24gPSBmdW5jdGlvbihyb3csIGNvbHVtbikge1xuXHRcdFx0dGhpcy5ncmlkc3Rlci5wdXRJdGVtKHRoaXMsIHJvdywgY29sdW1uKTtcblxuXHRcdFx0aWYgKCF0aGlzLmlzTW92aW5nKCkpIHtcblx0XHRcdFx0dGhpcy5zZXRFbGVtZW50UG9zaXRpb24oKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyBhIHNwZWNpZmllZCBzaXplIHByb3BlcnR5XG5cdFx0ICpcblx0XHQgKiBAcGFyYW0ge1N0cmluZ30ga2V5IENhbiBiZSBlaXRoZXIgXCJ4XCIgb3IgXCJ5XCJcblx0XHQgKiBAcGFyYW0ge051bWJlcn0gdmFsdWUgVGhlIHNpemUgYW1vdW50XG5cdFx0ICogQHBhcmFtIHtCb29sZWFufSBwcmV2ZW50TW92ZVxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0U2l6ZSA9IGZ1bmN0aW9uKGtleSwgdmFsdWUsIHByZXZlbnRNb3ZlKSB7XG5cdFx0XHRrZXkgPSBrZXkudG9VcHBlckNhc2UoKTtcblx0XHRcdHZhciBjYW1lbENhc2UgPSAnc2l6ZScgKyBrZXksXG5cdFx0XHRcdHRpdGxlQ2FzZSA9ICdTaXplJyArIGtleTtcblx0XHRcdGlmICh2YWx1ZSA9PT0gJycpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0dmFsdWUgPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuXHRcdFx0aWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gMCkge1xuXHRcdFx0XHR2YWx1ZSA9IHRoaXMuZ3JpZHN0ZXJbJ2RlZmF1bHQnICsgdGl0bGVDYXNlXTtcblx0XHRcdH1cblx0XHRcdHZhciBtYXggPSBrZXkgPT09ICdYJyA/IHRoaXMuZ3JpZHN0ZXIuY29sdW1ucyA6IHRoaXMuZ3JpZHN0ZXIubWF4Um93cztcblx0XHRcdGlmICh0aGlzWydtYXgnICsgdGl0bGVDYXNlXSkge1xuXHRcdFx0XHRtYXggPSBNYXRoLm1pbih0aGlzWydtYXgnICsgdGl0bGVDYXNlXSwgbWF4KTtcblx0XHRcdH1cblx0XHRcdGlmICh0aGlzLmdyaWRzdGVyWydtYXgnICsgdGl0bGVDYXNlXSkge1xuXHRcdFx0XHRtYXggPSBNYXRoLm1pbih0aGlzLmdyaWRzdGVyWydtYXgnICsgdGl0bGVDYXNlXSwgbWF4KTtcblx0XHRcdH1cblx0XHRcdGlmIChrZXkgPT09ICdYJyAmJiB0aGlzLmNvbHMpIHtcblx0XHRcdFx0bWF4IC09IHRoaXMuY29scztcblx0XHRcdH0gZWxzZSBpZiAoa2V5ID09PSAnWScgJiYgdGhpcy5yb3dzKSB7XG5cdFx0XHRcdG1heCAtPSB0aGlzLnJvd3M7XG5cdFx0XHR9XG5cblx0XHRcdHZhciBtaW4gPSAwO1xuXHRcdFx0aWYgKHRoaXNbJ21pbicgKyB0aXRsZUNhc2VdKSB7XG5cdFx0XHRcdG1pbiA9IE1hdGgubWF4KHRoaXNbJ21pbicgKyB0aXRsZUNhc2VdLCBtaW4pO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRoaXMuZ3JpZHN0ZXJbJ21pbicgKyB0aXRsZUNhc2VdKSB7XG5cdFx0XHRcdG1pbiA9IE1hdGgubWF4KHRoaXMuZ3JpZHN0ZXJbJ21pbicgKyB0aXRsZUNhc2VdLCBtaW4pO1xuXHRcdFx0fVxuXG5cdFx0XHR2YWx1ZSA9IE1hdGgubWF4KE1hdGgubWluKHZhbHVlLCBtYXgpLCBtaW4pO1xuXG5cdFx0XHR2YXIgY2hhbmdlZCA9ICh0aGlzW2NhbWVsQ2FzZV0gIT09IHZhbHVlIHx8ICh0aGlzWydvbGQnICsgdGl0bGVDYXNlXSAmJiB0aGlzWydvbGQnICsgdGl0bGVDYXNlXSAhPT0gdmFsdWUpKTtcblx0XHRcdHRoaXNbJ29sZCcgKyB0aXRsZUNhc2VdID0gdGhpc1tjYW1lbENhc2VdID0gdmFsdWU7XG5cblx0XHRcdGlmICghdGhpcy5pc01vdmluZygpKSB7XG5cdFx0XHRcdHRoaXNbJ3NldEVsZW1lbnQnICsgdGl0bGVDYXNlXSgpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFwcmV2ZW50TW92ZSAmJiBjaGFuZ2VkKSB7XG5cdFx0XHRcdHRoaXMuZ3JpZHN0ZXIubW92ZU92ZXJsYXBwaW5nSXRlbXModGhpcyk7XG5cdFx0XHRcdHRoaXMuZ3JpZHN0ZXIubGF5b3V0Q2hhbmdlZCgpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gY2hhbmdlZDtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyB0aGUgaXRlbXMgc2l6ZVkgcHJvcGVydHlcblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7TnVtYmVyfSByb3dzXG5cdFx0ICogQHBhcmFtIHtCb29sZWFufSBwcmV2ZW50TW92ZVxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0U2l6ZVkgPSBmdW5jdGlvbihyb3dzLCBwcmV2ZW50TW92ZSkge1xuXHRcdFx0cmV0dXJuIHRoaXMuc2V0U2l6ZSgnWScsIHJvd3MsIHByZXZlbnRNb3ZlKTtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyB0aGUgaXRlbXMgc2l6ZVggcHJvcGVydHlcblx0XHQgKlxuXHRcdCAqIEBwYXJhbSB7TnVtYmVyfSBjb2x1bW5zXG5cdFx0ICogQHBhcmFtIHtCb29sZWFufSBwcmV2ZW50TW92ZVxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0U2l6ZVggPSBmdW5jdGlvbihjb2x1bW5zLCBwcmV2ZW50TW92ZSkge1xuXHRcdFx0cmV0dXJuIHRoaXMuc2V0U2l6ZSgnWCcsIGNvbHVtbnMsIHByZXZlbnRNb3ZlKTtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyBhbiBlbGVtZW50cyBwb3NpdGlvbiBvbiB0aGUgcGFnZVxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0RWxlbWVudFBvc2l0aW9uID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAodGhpcy5ncmlkc3Rlci5pc01vYmlsZSkge1xuXHRcdFx0XHR0aGlzLiRlbGVtZW50LmNzcyh7XG5cdFx0XHRcdFx0bWFyZ2luTGVmdDogdGhpcy5ncmlkc3Rlci5tYXJnaW5zWzBdICsgJ3B4Jyxcblx0XHRcdFx0XHRtYXJnaW5SaWdodDogdGhpcy5ncmlkc3Rlci5tYXJnaW5zWzBdICsgJ3B4Jyxcblx0XHRcdFx0XHRtYXJnaW5Ub3A6IHRoaXMuZ3JpZHN0ZXIubWFyZ2luc1sxXSArICdweCcsXG5cdFx0XHRcdFx0bWFyZ2luQm90dG9tOiB0aGlzLmdyaWRzdGVyLm1hcmdpbnNbMV0gKyAncHgnLFxuXHRcdFx0XHRcdHRvcDogJycsXG5cdFx0XHRcdFx0bGVmdDogJydcblx0XHRcdFx0fSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLiRlbGVtZW50LmNzcyh7XG5cdFx0XHRcdFx0bWFyZ2luOiAwLFxuXHRcdFx0XHRcdHRvcDogKHRoaXMucm93ICogdGhpcy5ncmlkc3Rlci5jdXJSb3dIZWlnaHQgKyAodGhpcy5ncmlkc3Rlci5vdXRlck1hcmdpbiA/IHRoaXMuZ3JpZHN0ZXIubWFyZ2luc1swXSA6IDApKSArICdweCcsXG5cdFx0XHRcdFx0bGVmdDogKHRoaXMuY29sICogdGhpcy5ncmlkc3Rlci5jdXJDb2xXaWR0aCArICh0aGlzLmdyaWRzdGVyLm91dGVyTWFyZ2luID8gdGhpcy5ncmlkc3Rlci5tYXJnaW5zWzFdIDogMCkpICsgJ3B4J1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyBhbiBlbGVtZW50cyBoZWlnaHRcblx0XHQgKi9cblx0XHR0aGlzLnNldEVsZW1lbnRTaXplWSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKHRoaXMuZ3JpZHN0ZXIuaXNNb2JpbGUgJiYgIXRoaXMuZ3JpZHN0ZXIuc2F2ZUdyaWRJdGVtQ2FsY3VsYXRlZEhlaWdodEluTW9iaWxlKSB7XG5cdFx0XHRcdHRoaXMuJGVsZW1lbnQuY3NzKCdoZWlnaHQnLCAnJyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLiRlbGVtZW50LmNzcygnaGVpZ2h0JywgKHRoaXMuc2l6ZVkgKiB0aGlzLmdyaWRzdGVyLmN1clJvd0hlaWdodCAtIHRoaXMuZ3JpZHN0ZXIubWFyZ2luc1swXSkgKyAncHgnKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2V0cyBhbiBlbGVtZW50cyB3aWR0aFxuXHRcdCAqL1xuXHRcdHRoaXMuc2V0RWxlbWVudFNpemVYID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAodGhpcy5ncmlkc3Rlci5pc01vYmlsZSkge1xuXHRcdFx0XHR0aGlzLiRlbGVtZW50LmNzcygnd2lkdGgnLCAnJyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLiRlbGVtZW50LmNzcygnd2lkdGgnLCAodGhpcy5zaXplWCAqIHRoaXMuZ3JpZHN0ZXIuY3VyQ29sV2lkdGggLSB0aGlzLmdyaWRzdGVyLm1hcmdpbnNbMV0pICsgJ3B4Jyk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIEdldHMgYW4gZWxlbWVudCdzIHdpZHRoXG5cdFx0ICovXG5cdFx0dGhpcy5nZXRFbGVtZW50U2l6ZVggPSBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiAodGhpcy5zaXplWCAqIHRoaXMuZ3JpZHN0ZXIuY3VyQ29sV2lkdGggLSB0aGlzLmdyaWRzdGVyLm1hcmdpbnNbMV0pO1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBHZXRzIGFuIGVsZW1lbnQncyBoZWlnaHRcblx0XHQgKi9cblx0XHR0aGlzLmdldEVsZW1lbnRTaXplWSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuICh0aGlzLnNpemVZICogdGhpcy5ncmlkc3Rlci5jdXJSb3dIZWlnaHQgLSB0aGlzLmdyaWRzdGVyLm1hcmdpbnNbMF0pO1xuXHRcdH07XG5cblx0fSlcblxuXHQuZmFjdG9yeSgnR3JpZHN0ZXJUb3VjaCcsIFtmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZnVuY3Rpb24gR3JpZHN0ZXJUb3VjaCh0YXJnZXQsIHN0YXJ0RXZlbnQsIG1vdmVFdmVudCwgZW5kRXZlbnQpIHtcblx0XHRcdHZhciBsYXN0WFlCeUlkID0ge307XG5cblx0XHRcdC8vICBPcGVyYSBkb2Vzbid0IGhhdmUgT2JqZWN0LmtleXMgc28gd2UgdXNlIHRoaXMgd3JhcHBlclxuXHRcdFx0dmFyIG51bWJlck9mS2V5cyA9IGZ1bmN0aW9uKHRoZU9iamVjdCkge1xuXHRcdFx0XHRpZiAoT2JqZWN0LmtleXMpIHtcblx0XHRcdFx0XHRyZXR1cm4gT2JqZWN0LmtleXModGhlT2JqZWN0KS5sZW5ndGg7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR2YXIgbiA9IDAsXG5cdFx0XHRcdFx0a2V5O1xuXHRcdFx0XHRmb3IgKGtleSBpbiB0aGVPYmplY3QpIHtcblx0XHRcdFx0XHQrK247XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbjtcblx0XHRcdH07XG5cblx0XHRcdC8vICB0aGlzIGNhbGN1bGF0ZXMgdGhlIGRlbHRhIG5lZWRlZCB0byBjb252ZXJ0IHBhZ2VYL1kgdG8gb2Zmc2V0WC9ZIGJlY2F1c2Ugb2Zmc2V0WC9ZIGRvbid0IGV4aXN0IGluIHRoZSBUb3VjaEV2ZW50IG9iamVjdCBvciBpbiBGaXJlZm94J3MgTW91c2VFdmVudCBvYmplY3Rcblx0XHRcdHZhciBjb21wdXRlRG9jdW1lbnRUb0VsZW1lbnREZWx0YSA9IGZ1bmN0aW9uKHRoZUVsZW1lbnQpIHtcblx0XHRcdFx0dmFyIGVsZW1lbnRMZWZ0ID0gMDtcblx0XHRcdFx0dmFyIGVsZW1lbnRUb3AgPSAwO1xuXHRcdFx0XHR2YXIgb2xkSUVVc2VyQWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9cXGJNU0lFXFxiLyk7XG5cblx0XHRcdFx0Zm9yICh2YXIgb2Zmc2V0RWxlbWVudCA9IHRoZUVsZW1lbnQ7IG9mZnNldEVsZW1lbnQgIT0gbnVsbDsgb2Zmc2V0RWxlbWVudCA9IG9mZnNldEVsZW1lbnQub2Zmc2V0UGFyZW50KSB7XG5cdFx0XHRcdFx0Ly8gIHRoZSBmb2xsb3dpbmcgaXMgYSBtYWpvciBoYWNrIGZvciB2ZXJzaW9ucyBvZiBJRSBsZXNzIHRoYW4gOCB0byBhdm9pZCBhbiBhcHBhcmVudCBwcm9ibGVtIG9uIHRoZSBJRUJsb2cgd2l0aCBkb3VibGUtY291bnRpbmcgdGhlIG9mZnNldHNcblx0XHRcdFx0XHQvLyAgdGhpcyBtYXkgbm90IGJlIGEgZ2VuZXJhbCBzb2x1dGlvbiB0byBJRTcncyBwcm9ibGVtIHdpdGggb2Zmc2V0TGVmdC9vZmZzZXRQYXJlbnRcblx0XHRcdFx0XHRpZiAob2xkSUVVc2VyQWdlbnQgJiZcblx0XHRcdFx0XHRcdCghZG9jdW1lbnQuZG9jdW1lbnRNb2RlIHx8IGRvY3VtZW50LmRvY3VtZW50TW9kZSA8IDgpICYmXG5cdFx0XHRcdFx0XHRvZmZzZXRFbGVtZW50LmN1cnJlbnRTdHlsZS5wb3NpdGlvbiA9PT0gJ3JlbGF0aXZlJyAmJiBvZmZzZXRFbGVtZW50Lm9mZnNldFBhcmVudCAmJiBvZmZzZXRFbGVtZW50Lm9mZnNldFBhcmVudC5jdXJyZW50U3R5bGUucG9zaXRpb24gPT09ICdyZWxhdGl2ZScgJiYgb2Zmc2V0RWxlbWVudC5vZmZzZXRMZWZ0ID09PSBvZmZzZXRFbGVtZW50Lm9mZnNldFBhcmVudC5vZmZzZXRMZWZ0KSB7XG5cdFx0XHRcdFx0XHQvLyBhZGQgb25seSB0aGUgdG9wXG5cdFx0XHRcdFx0XHRlbGVtZW50VG9wICs9IG9mZnNldEVsZW1lbnQub2Zmc2V0VG9wO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRlbGVtZW50TGVmdCArPSBvZmZzZXRFbGVtZW50Lm9mZnNldExlZnQ7XG5cdFx0XHRcdFx0XHRlbGVtZW50VG9wICs9IG9mZnNldEVsZW1lbnQub2Zmc2V0VG9wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0eDogZWxlbWVudExlZnQsXG5cdFx0XHRcdFx0eTogZWxlbWVudFRvcFxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gIGNhY2hlIHRoZSBkZWx0YSBmcm9tIHRoZSBkb2N1bWVudCB0byBvdXIgZXZlbnQgdGFyZ2V0IChyZWluaXRpYWxpemVkIGVhY2ggbW91c2Vkb3duL01TUG9pbnRlckRvd24vdG91Y2hzdGFydClcblx0XHRcdHZhciBkb2N1bWVudFRvVGFyZ2V0RGVsdGEgPSBjb21wdXRlRG9jdW1lbnRUb0VsZW1lbnREZWx0YSh0YXJnZXQpO1xuXHRcdFx0dmFyIHVzZVNldFJlbGVhc2VDYXB0dXJlID0gZmFsc2U7XG5cblx0XHRcdC8vICBjb21tb24gZXZlbnQgaGFuZGxlciBmb3IgdGhlIG1vdXNlL3BvaW50ZXIvdG91Y2ggbW9kZWxzIGFuZCB0aGVpciBkb3duL3N0YXJ0LCBtb3ZlLCB1cC9lbmQsIGFuZCBjYW5jZWwgZXZlbnRzXG5cdFx0XHR2YXIgZG9FdmVudCA9IGZ1bmN0aW9uKHRoZUV2dE9iaikge1xuXG5cdFx0XHRcdGlmICh0aGVFdnRPYmoudHlwZSA9PT0gJ21vdXNlbW92ZScgJiYgbnVtYmVyT2ZLZXlzKGxhc3RYWUJ5SWQpID09PSAwKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIHByZXZlbnQgPSB0cnVlO1xuXG5cdFx0XHRcdHZhciBwb2ludGVyTGlzdCA9IHRoZUV2dE9iai5jaGFuZ2VkVG91Y2hlcyA/IHRoZUV2dE9iai5jaGFuZ2VkVG91Y2hlcyA6IFt0aGVFdnRPYmpdO1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHBvaW50ZXJMaXN0Lmxlbmd0aDsgKytpKSB7XG5cdFx0XHRcdFx0dmFyIHBvaW50ZXJPYmogPSBwb2ludGVyTGlzdFtpXTtcblx0XHRcdFx0XHR2YXIgcG9pbnRlcklkID0gKHR5cGVvZiBwb2ludGVyT2JqLmlkZW50aWZpZXIgIT09ICd1bmRlZmluZWQnKSA/IHBvaW50ZXJPYmouaWRlbnRpZmllciA6ICh0eXBlb2YgcG9pbnRlck9iai5wb2ludGVySWQgIT09ICd1bmRlZmluZWQnKSA/IHBvaW50ZXJPYmoucG9pbnRlcklkIDogMTtcblxuXHRcdFx0XHRcdC8vICB1c2UgdGhlIHBhZ2VYL1kgY29vcmRpbmF0ZXMgdG8gY29tcHV0ZSB0YXJnZXQtcmVsYXRpdmUgY29vcmRpbmF0ZXMgd2hlbiB3ZSBoYXZlIHRoZW0gKGluIGllIDwgOSwgd2UgbmVlZCB0byBkbyBhIGxpdHRsZSB3b3JrIHRvIHB1dCB0aGVtIHRoZXJlKVxuXHRcdFx0XHRcdGlmICh0eXBlb2YgcG9pbnRlck9iai5wYWdlWCA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0XHRcdC8vICBpbml0aWFsaXplIGFzc3VtaW5nIG91ciBzb3VyY2UgZWxlbWVudCBpcyBvdXIgdGFyZ2V0XG5cdFx0XHRcdFx0XHRwb2ludGVyT2JqLnBhZ2VYID0gcG9pbnRlck9iai5vZmZzZXRYICsgZG9jdW1lbnRUb1RhcmdldERlbHRhLng7XG5cdFx0XHRcdFx0XHRwb2ludGVyT2JqLnBhZ2VZID0gcG9pbnRlck9iai5vZmZzZXRZICsgZG9jdW1lbnRUb1RhcmdldERlbHRhLnk7XG5cblx0XHRcdFx0XHRcdGlmIChwb2ludGVyT2JqLnNyY0VsZW1lbnQub2Zmc2V0UGFyZW50ID09PSB0YXJnZXQgJiYgZG9jdW1lbnQuZG9jdW1lbnRNb2RlICYmIGRvY3VtZW50LmRvY3VtZW50TW9kZSA9PT0gOCAmJiBwb2ludGVyT2JqLnR5cGUgPT09ICdtb3VzZWRvd24nKSB7XG5cdFx0XHRcdFx0XHRcdC8vICBzb3VyY2UgZWxlbWVudCBpcyBhIGNoaWxkIHBpZWNlIG9mIFZNTCwgd2UncmUgaW4gSUU4LCBhbmQgd2UndmUgbm90IGNhbGxlZCBzZXRDYXB0dXJlIHlldCAtIGFkZCB0aGUgb3JpZ2luIG9mIHRoZSBzb3VyY2UgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRwb2ludGVyT2JqLnBhZ2VYICs9IHBvaW50ZXJPYmouc3JjRWxlbWVudC5vZmZzZXRMZWZ0O1xuXHRcdFx0XHRcdFx0XHRwb2ludGVyT2JqLnBhZ2VZICs9IHBvaW50ZXJPYmouc3JjRWxlbWVudC5vZmZzZXRUb3A7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHBvaW50ZXJPYmouc3JjRWxlbWVudCAhPT0gdGFyZ2V0ICYmICFkb2N1bWVudC5kb2N1bWVudE1vZGUgfHwgZG9jdW1lbnQuZG9jdW1lbnRNb2RlIDwgOCkge1xuXHRcdFx0XHRcdFx0XHQvLyAgc291cmNlIGVsZW1lbnQgaXNuJ3QgdGhlIHRhcmdldCAobW9zdCBsaWtlbHkgaXQncyBhIGNoaWxkIHBpZWNlIG9mIFZNTCkgYW5kIHdlJ3JlIGluIGEgdmVyc2lvbiBvZiBJRSBiZWZvcmUgSUU4IC1cblx0XHRcdFx0XHRcdFx0Ly8gIHRoZSBvZmZzZXRYL1kgdmFsdWVzIGFyZSB1bnByZWRpY3RhYmxlIHNvIHVzZSB0aGUgY2xpZW50WC9ZIHZhbHVlcyBhbmQgYWRqdXN0IGJ5IHRoZSBzY3JvbGwgb2Zmc2V0cyBvZiBpdHMgcGFyZW50c1xuXHRcdFx0XHRcdFx0XHQvLyAgdG8gZ2V0IHRoZSBkb2N1bWVudC1yZWxhdGl2ZSBjb29yZGluYXRlcyAodGhlIHNhbWUgYXMgcGFnZVgvWSlcblx0XHRcdFx0XHRcdFx0dmFyIHN4ID0gLTIsXG5cdFx0XHRcdFx0XHRcdFx0c3kgPSAtMjsgLy8gYWRqdXN0IGZvciBvbGQgSUUncyAyLXBpeGVsIGJvcmRlclxuXHRcdFx0XHRcdFx0XHRmb3IgKHZhciBzY3JvbGxFbGVtZW50ID0gcG9pbnRlck9iai5zcmNFbGVtZW50OyBzY3JvbGxFbGVtZW50ICE9PSBudWxsOyBzY3JvbGxFbGVtZW50ID0gc2Nyb2xsRWxlbWVudC5wYXJlbnROb2RlKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3ggKz0gc2Nyb2xsRWxlbWVudC5zY3JvbGxMZWZ0ID8gc2Nyb2xsRWxlbWVudC5zY3JvbGxMZWZ0IDogMDtcblx0XHRcdFx0XHRcdFx0XHRzeSArPSBzY3JvbGxFbGVtZW50LnNjcm9sbFRvcCA/IHNjcm9sbEVsZW1lbnQuc2Nyb2xsVG9wIDogMDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdHBvaW50ZXJPYmoucGFnZVggPSBwb2ludGVyT2JqLmNsaWVudFggKyBzeDtcblx0XHRcdFx0XHRcdFx0cG9pbnRlck9iai5wYWdlWSA9IHBvaW50ZXJPYmouY2xpZW50WSArIHN5O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXG5cdFx0XHRcdFx0dmFyIHBhZ2VYID0gcG9pbnRlck9iai5wYWdlWDtcblx0XHRcdFx0XHR2YXIgcGFnZVkgPSBwb2ludGVyT2JqLnBhZ2VZO1xuXG5cdFx0XHRcdFx0aWYgKHRoZUV2dE9iai50eXBlLm1hdGNoKC8oc3RhcnR8ZG93bikkL2kpKSB7XG5cdFx0XHRcdFx0XHQvLyAgY2xhdXNlIGZvciBwcm9jZXNzaW5nIE1TUG9pbnRlckRvd24sIHRvdWNoc3RhcnQsIGFuZCBtb3VzZWRvd25cblxuXHRcdFx0XHRcdFx0Ly8gIHJlZnJlc2ggdGhlIGRvY3VtZW50LXRvLXRhcmdldCBkZWx0YSBvbiBzdGFydCBpbiBjYXNlIHRoZSB0YXJnZXQgaGFzIG1vdmVkIHJlbGF0aXZlIHRvIGRvY3VtZW50XG5cdFx0XHRcdFx0XHRkb2N1bWVudFRvVGFyZ2V0RGVsdGEgPSBjb21wdXRlRG9jdW1lbnRUb0VsZW1lbnREZWx0YSh0YXJnZXQpO1xuXG5cdFx0XHRcdFx0XHQvLyAgcHJvdGVjdCBhZ2FpbnN0IGZhaWxpbmcgdG8gZ2V0IGFuIHVwIG9yIGVuZCBvbiB0aGlzIHBvaW50ZXJJZFxuXHRcdFx0XHRcdFx0aWYgKGxhc3RYWUJ5SWRbcG9pbnRlcklkXSkge1xuXHRcdFx0XHRcdFx0XHRpZiAoZW5kRXZlbnQpIHtcblx0XHRcdFx0XHRcdFx0XHRlbmRFdmVudCh7XG5cdFx0XHRcdFx0XHRcdFx0XHR0YXJnZXQ6IHRoZUV2dE9iai50YXJnZXQsXG5cdFx0XHRcdFx0XHRcdFx0XHR3aGljaDogdGhlRXZ0T2JqLndoaWNoLFxuXHRcdFx0XHRcdFx0XHRcdFx0cG9pbnRlcklkOiBwb2ludGVySWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRwYWdlWDogcGFnZVgsXG5cdFx0XHRcdFx0XHRcdFx0XHRwYWdlWTogcGFnZVlcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdGRlbGV0ZSBsYXN0WFlCeUlkW3BvaW50ZXJJZF07XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChzdGFydEV2ZW50KSB7XG5cdFx0XHRcdFx0XHRcdGlmIChwcmV2ZW50KSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJldmVudCA9IHN0YXJ0RXZlbnQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0dGFyZ2V0OiB0aGVFdnRPYmoudGFyZ2V0LFxuXHRcdFx0XHRcdFx0XHRcdFx0d2hpY2g6IHRoZUV2dE9iai53aGljaCxcblx0XHRcdFx0XHRcdFx0XHRcdHBvaW50ZXJJZDogcG9pbnRlcklkLFxuXHRcdFx0XHRcdFx0XHRcdFx0cGFnZVg6IHBhZ2VYLFxuXHRcdFx0XHRcdFx0XHRcdFx0cGFnZVk6IHBhZ2VZXG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gIGluaXQgbGFzdCBwYWdlIHBvc2l0aW9ucyBmb3IgdGhpcyBwb2ludGVyXG5cdFx0XHRcdFx0XHRsYXN0WFlCeUlkW3BvaW50ZXJJZF0gPSB7XG5cdFx0XHRcdFx0XHRcdHg6IHBhZ2VYLFxuXHRcdFx0XHRcdFx0XHR5OiBwYWdlWVxuXHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0Ly8gSUUgcG9pbnRlciBtb2RlbFxuXHRcdFx0XHRcdFx0aWYgKHRhcmdldC5tc1NldFBvaW50ZXJDYXB0dXJlICYmIHByZXZlbnQpIHtcblx0XHRcdFx0XHRcdFx0dGFyZ2V0Lm1zU2V0UG9pbnRlckNhcHR1cmUocG9pbnRlcklkKTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAodGhlRXZ0T2JqLnR5cGUgPT09ICdtb3VzZWRvd24nICYmIG51bWJlck9mS2V5cyhsYXN0WFlCeUlkKSA9PT0gMSkge1xuXHRcdFx0XHRcdFx0XHRpZiAodXNlU2V0UmVsZWFzZUNhcHR1cmUpIHtcblx0XHRcdFx0XHRcdFx0XHR0YXJnZXQuc2V0Q2FwdHVyZSh0cnVlKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBkb0V2ZW50LCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gZWxzZSBpZiAodGhlRXZ0T2JqLnR5cGUubWF0Y2goL21vdmUkL2kpKSB7XG5cdFx0XHRcdFx0XHQvLyAgY2xhdXNlIGhhbmRsZXMgbW91c2Vtb3ZlLCBNU1BvaW50ZXJNb3ZlLCBhbmQgdG91Y2htb3ZlXG5cblx0XHRcdFx0XHRcdGlmIChsYXN0WFlCeUlkW3BvaW50ZXJJZF0gJiYgIShsYXN0WFlCeUlkW3BvaW50ZXJJZF0ueCA9PT0gcGFnZVggJiYgbGFzdFhZQnlJZFtwb2ludGVySWRdLnkgPT09IHBhZ2VZKSkge1xuXHRcdFx0XHRcdFx0XHQvLyAgb25seSBleHRlbmQgaWYgdGhlIHBvaW50ZXIgaXMgZG93biBhbmQgaXQncyBub3QgdGhlIHNhbWUgYXMgdGhlIGxhc3QgcG9pbnRcblxuXHRcdFx0XHRcdFx0XHRpZiAobW92ZUV2ZW50ICYmIHByZXZlbnQpIHtcblx0XHRcdFx0XHRcdFx0XHRwcmV2ZW50ID0gbW92ZUV2ZW50KHtcblx0XHRcdFx0XHRcdFx0XHRcdHRhcmdldDogdGhlRXZ0T2JqLnRhcmdldCxcblx0XHRcdFx0XHRcdFx0XHRcdHdoaWNoOiB0aGVFdnRPYmoud2hpY2gsXG5cdFx0XHRcdFx0XHRcdFx0XHRwb2ludGVySWQ6IHBvaW50ZXJJZCxcblx0XHRcdFx0XHRcdFx0XHRcdHBhZ2VYOiBwYWdlWCxcblx0XHRcdFx0XHRcdFx0XHRcdHBhZ2VZOiBwYWdlWVxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0Ly8gIHVwZGF0ZSBsYXN0IHBhZ2UgcG9zaXRpb25zIGZvciB0aGlzIHBvaW50ZXJcblx0XHRcdFx0XHRcdFx0bGFzdFhZQnlJZFtwb2ludGVySWRdLnggPSBwYWdlWDtcblx0XHRcdFx0XHRcdFx0bGFzdFhZQnlJZFtwb2ludGVySWRdLnkgPSBwYWdlWTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2UgaWYgKGxhc3RYWUJ5SWRbcG9pbnRlcklkXSAmJiB0aGVFdnRPYmoudHlwZS5tYXRjaCgvKHVwfGVuZHxjYW5jZWwpJC9pKSkge1xuXHRcdFx0XHRcdFx0Ly8gIGNsYXVzZSBoYW5kbGVzIHVwL2VuZC9jYW5jZWxcblxuXHRcdFx0XHRcdFx0aWYgKGVuZEV2ZW50ICYmIHByZXZlbnQpIHtcblx0XHRcdFx0XHRcdFx0cHJldmVudCA9IGVuZEV2ZW50KHtcblx0XHRcdFx0XHRcdFx0XHR0YXJnZXQ6IHRoZUV2dE9iai50YXJnZXQsXG5cdFx0XHRcdFx0XHRcdFx0d2hpY2g6IHRoZUV2dE9iai53aGljaCxcblx0XHRcdFx0XHRcdFx0XHRwb2ludGVySWQ6IHBvaW50ZXJJZCxcblx0XHRcdFx0XHRcdFx0XHRwYWdlWDogcGFnZVgsXG5cdFx0XHRcdFx0XHRcdFx0cGFnZVk6IHBhZ2VZXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyAgZGVsZXRlIGxhc3QgcGFnZSBwb3NpdGlvbnMgZm9yIHRoaXMgcG9pbnRlclxuXHRcdFx0XHRcdFx0ZGVsZXRlIGxhc3RYWUJ5SWRbcG9pbnRlcklkXTtcblxuXHRcdFx0XHRcdFx0Ly8gIGluIHRoZSBNaWNyb3NvZnQgcG9pbnRlciBtb2RlbCwgcmVsZWFzZSB0aGUgY2FwdHVyZSBmb3IgdGhpcyBwb2ludGVyXG5cdFx0XHRcdFx0XHQvLyAgaW4gdGhlIG1vdXNlIG1vZGVsLCByZWxlYXNlIHRoZSBjYXB0dXJlIG9yIHJlbW92ZSBkb2N1bWVudC1sZXZlbCBldmVudCBoYW5kbGVycyBpZiB0aGVyZSBhcmUgbm8gZG93biBwb2ludHNcblx0XHRcdFx0XHRcdC8vICBub3RoaW5nIGlzIHJlcXVpcmVkIGZvciB0aGUgaU9TIHRvdWNoIG1vZGVsIGJlY2F1c2UgY2FwdHVyZSBpcyBpbXBsaWVkIG9uIHRvdWNoc3RhcnRcblx0XHRcdFx0XHRcdGlmICh0YXJnZXQubXNSZWxlYXNlUG9pbnRlckNhcHR1cmUpIHtcblx0XHRcdFx0XHRcdFx0dGFyZ2V0Lm1zUmVsZWFzZVBvaW50ZXJDYXB0dXJlKHBvaW50ZXJJZCk7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKHRoZUV2dE9iai50eXBlID09PSAnbW91c2V1cCcgJiYgbnVtYmVyT2ZLZXlzKGxhc3RYWUJ5SWQpID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdGlmICh1c2VTZXRSZWxlYXNlQ2FwdHVyZSkge1xuXHRcdFx0XHRcdFx0XHRcdHRhcmdldC5yZWxlYXNlQ2FwdHVyZSgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHRcdFx0XHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHByZXZlbnQpIHtcblx0XHRcdFx0XHRpZiAodGhlRXZ0T2JqLnByZXZlbnREZWZhdWx0KSB7XG5cdFx0XHRcdFx0XHR0aGVFdnRPYmoucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAodGhlRXZ0T2JqLnByZXZlbnRNYW5pcHVsYXRpb24pIHtcblx0XHRcdFx0XHRcdHRoZUV2dE9iai5wcmV2ZW50TWFuaXB1bGF0aW9uKCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKHRoZUV2dE9iai5wcmV2ZW50TW91c2VFdmVudCkge1xuXHRcdFx0XHRcdFx0dGhlRXZ0T2JqLnByZXZlbnRNb3VzZUV2ZW50KCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBzYXZpbmcgdGhlIHNldHRpbmdzIGZvciBjb250ZW50Wm9vbWluZyBhbmQgdG91Y2hhY3Rpb24gYmVmb3JlIGFjdGl2YXRpb25cblx0XHRcdHZhciBjb250ZW50Wm9vbWluZywgbXNUb3VjaEFjdGlvbjtcblxuXHRcdFx0dGhpcy5lbmFibGUgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRpZiAod2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkKSB7XG5cdFx0XHRcdFx0Ly8gIE1pY3Jvc29mdCBwb2ludGVyIG1vZGVsXG5cdFx0XHRcdFx0dGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ01TUG9pbnRlckRvd24nLCBkb0V2ZW50LCBmYWxzZSk7XG5cdFx0XHRcdFx0dGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ01TUG9pbnRlck1vdmUnLCBkb0V2ZW50LCBmYWxzZSk7XG5cdFx0XHRcdFx0dGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ01TUG9pbnRlclVwJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdNU1BvaW50ZXJDYW5jZWwnLCBkb0V2ZW50LCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyAgY3NzIHdheSB0byBwcmV2ZW50IHBhbm5pbmcgaW4gb3VyIHRhcmdldCBhcmVhXG5cdFx0XHRcdFx0aWYgKHR5cGVvZiB0YXJnZXQuc3R5bGUubXNDb250ZW50Wm9vbWluZyAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0XHRcdGNvbnRlbnRab29taW5nID0gdGFyZ2V0LnN0eWxlLm1zQ29udGVudFpvb21pbmc7XG5cdFx0XHRcdFx0XHR0YXJnZXQuc3R5bGUubXNDb250ZW50Wm9vbWluZyA9ICdub25lJztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyAgbmV3IGluIFdpbmRvd3MgQ29uc3VtZXIgUHJldmlldzogY3NzIHdheSB0byBwcmV2ZW50IGFsbCBidWlsdC1pbiB0b3VjaCBhY3Rpb25zIG9uIG91ciB0YXJnZXRcblx0XHRcdFx0XHQvLyAgd2l0aG91dCB0aGlzLCB5b3UgY2Fubm90IHRvdWNoIGRyYXcgb24gdGhlIGVsZW1lbnQgYmVjYXVzZSBJRSB3aWxsIGludGVyY2VwdCB0aGUgdG91Y2ggZXZlbnRzXG5cdFx0XHRcdFx0aWYgKHR5cGVvZiB0YXJnZXQuc3R5bGUubXNUb3VjaEFjdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0XHRcdG1zVG91Y2hBY3Rpb24gPSB0YXJnZXQuc3R5bGUubXNUb3VjaEFjdGlvbjtcblx0XHRcdFx0XHRcdHRhcmdldC5zdHlsZS5tc1RvdWNoQWN0aW9uID0gJ25vbmUnO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICh0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcikge1xuXHRcdFx0XHRcdC8vICBpT1MgdG91Y2ggbW9kZWxcblx0XHRcdFx0XHR0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHR0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHR0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCBkb0V2ZW50LCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyAgbW91c2UgbW9kZWxcblx0XHRcdFx0XHR0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZG9FdmVudCwgZmFsc2UpO1xuXG5cdFx0XHRcdFx0Ly8gIG1vdXNlIG1vZGVsIHdpdGggY2FwdHVyZVxuXHRcdFx0XHRcdC8vICByZWplY3RpbmcgZ2Vja28gYmVjYXVzZSwgdW5saWtlIGllLCBmaXJlZm94IGRvZXMgbm90IHNlbmQgZXZlbnRzIHRvIHRhcmdldCB3aGVuIHRoZSBtb3VzZSBpcyBvdXRzaWRlIHRhcmdldFxuXHRcdFx0XHRcdGlmICh0YXJnZXQuc2V0Q2FwdHVyZSAmJiAhd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1xcYkdlY2tvXFxiLykpIHtcblx0XHRcdFx0XHRcdHVzZVNldFJlbGVhc2VDYXB0dXJlID0gdHJ1ZTtcblxuXHRcdFx0XHRcdFx0dGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHRcdHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICh0YXJnZXQuYXR0YWNoRXZlbnQgJiYgdGFyZ2V0LnNldENhcHR1cmUpIHtcblx0XHRcdFx0XHQvLyAgbGVnYWN5IElFIG1vZGUgLSBtb3VzZSB3aXRoIGNhcHR1cmVcblx0XHRcdFx0XHR1c2VTZXRSZWxlYXNlQ2FwdHVyZSA9IHRydWU7XG5cdFx0XHRcdFx0dGFyZ2V0LmF0dGFjaEV2ZW50KCdvbm1vdXNlZG93bicsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0ZG9FdmVudCh3aW5kb3cuZXZlbnQpO1xuXHRcdFx0XHRcdFx0d2luZG93LmV2ZW50LnJldHVyblZhbHVlID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0dGFyZ2V0LmF0dGFjaEV2ZW50KCdvbm1vdXNlbW92ZScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0ZG9FdmVudCh3aW5kb3cuZXZlbnQpO1xuXHRcdFx0XHRcdFx0d2luZG93LmV2ZW50LnJldHVyblZhbHVlID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0dGFyZ2V0LmF0dGFjaEV2ZW50KCdvbm1vdXNldXAnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGRvRXZlbnQod2luZG93LmV2ZW50KTtcblx0XHRcdFx0XHRcdHdpbmRvdy5ldmVudC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHR0aGlzLmRpc2FibGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKHdpbmRvdy5uYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZCkge1xuXHRcdFx0XHRcdC8vICBNaWNyb3NvZnQgcG9pbnRlciBtb2RlbFxuXHRcdFx0XHRcdHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCdNU1BvaW50ZXJEb3duJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCdNU1BvaW50ZXJNb3ZlJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCdNU1BvaW50ZXJVcCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHR0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignTVNQb2ludGVyQ2FuY2VsJywgZG9FdmVudCwgZmFsc2UpO1xuXG5cdFx0XHRcdFx0Ly8gIHJlc2V0IHpvb21pbmcgdG8gc2F2ZWQgdmFsdWVcblx0XHRcdFx0XHRpZiAoY29udGVudFpvb21pbmcpIHtcblx0XHRcdFx0XHRcdHRhcmdldC5zdHlsZS5tc0NvbnRlbnRab29taW5nID0gY29udGVudFpvb21pbmc7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gcmVzZXQgdG91Y2ggYWN0aW9uIHNldHRpbmdcblx0XHRcdFx0XHRpZiAobXNUb3VjaEFjdGlvbikge1xuXHRcdFx0XHRcdFx0dGFyZ2V0LnN0eWxlLm1zVG91Y2hBY3Rpb24gPSBtc1RvdWNoQWN0aW9uO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICh0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuXHRcdFx0XHRcdC8vICBpT1MgdG91Y2ggbW9kZWxcblx0XHRcdFx0XHR0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHR0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHR0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCBkb0V2ZW50LCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyAgbW91c2UgbW9kZWxcblx0XHRcdFx0XHR0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZG9FdmVudCwgZmFsc2UpO1xuXG5cdFx0XHRcdFx0Ly8gIG1vdXNlIG1vZGVsIHdpdGggY2FwdHVyZVxuXHRcdFx0XHRcdC8vICByZWplY3RpbmcgZ2Vja28gYmVjYXVzZSwgdW5saWtlIGllLCBmaXJlZm94IGRvZXMgbm90IHNlbmQgZXZlbnRzIHRvIHRhcmdldCB3aGVuIHRoZSBtb3VzZSBpcyBvdXRzaWRlIHRhcmdldFxuXHRcdFx0XHRcdGlmICh0YXJnZXQuc2V0Q2FwdHVyZSAmJiAhd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1xcYkdlY2tvXFxiLykpIHtcblx0XHRcdFx0XHRcdHVzZVNldFJlbGVhc2VDYXB0dXJlID0gdHJ1ZTtcblxuXHRcdFx0XHRcdFx0dGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGRvRXZlbnQsIGZhbHNlKTtcblx0XHRcdFx0XHRcdHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZG9FdmVudCwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIGlmICh0YXJnZXQuZGV0YWNoRXZlbnQgJiYgdGFyZ2V0LnNldENhcHR1cmUpIHtcblx0XHRcdFx0XHQvLyAgbGVnYWN5IElFIG1vZGUgLSBtb3VzZSB3aXRoIGNhcHR1cmVcblx0XHRcdFx0XHR1c2VTZXRSZWxlYXNlQ2FwdHVyZSA9IHRydWU7XG5cdFx0XHRcdFx0dGFyZ2V0LmRldGFjaEV2ZW50KCdvbm1vdXNlZG93bicpO1xuXHRcdFx0XHRcdHRhcmdldC5kZXRhY2hFdmVudCgnb25tb3VzZW1vdmUnKTtcblx0XHRcdFx0XHR0YXJnZXQuZGV0YWNoRXZlbnQoJ29ubW91c2V1cCcpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9O1xuXHR9XSlcblxuXHQuZmFjdG9yeSgnR3JpZHN0ZXJEcmFnZ2FibGUnLCBbJyRkb2N1bWVudCcsICckd2luZG93JywgJ0dyaWRzdGVyVG91Y2gnLFxuXHRcdGZ1bmN0aW9uKCRkb2N1bWVudCwgJHdpbmRvdywgR3JpZHN0ZXJUb3VjaCkge1xuXHRcdFx0ZnVuY3Rpb24gR3JpZHN0ZXJEcmFnZ2FibGUoJGVsLCBzY29wZSwgZ3JpZHN0ZXIsIGl0ZW0sIGl0ZW1PcHRpb25zKSB7XG5cblx0XHRcdFx0dmFyIGVsbVgsIGVsbVksIGVsbVcsIGVsbUgsXG5cblx0XHRcdFx0XHRtb3VzZVggPSAwLFxuXHRcdFx0XHRcdG1vdXNlWSA9IDAsXG5cdFx0XHRcdFx0bGFzdE1vdXNlWCA9IDAsXG5cdFx0XHRcdFx0bGFzdE1vdXNlWSA9IDAsXG5cdFx0XHRcdFx0bU9mZlggPSAwLFxuXHRcdFx0XHRcdG1PZmZZID0gMCxcblxuXHRcdFx0XHRcdG1pblRvcCA9IDAsXG5cdFx0XHRcdFx0bWluTGVmdCA9IDAsXG5cdFx0XHRcdFx0cmVhbGRvY3VtZW50ID0gJGRvY3VtZW50WzBdO1xuXG5cdFx0XHRcdHZhciBvcmlnaW5hbENvbCwgb3JpZ2luYWxSb3c7XG5cdFx0XHRcdHZhciBpbnB1dFRhZ3MgPSBbJ3NlbGVjdCcsICdvcHRpb24nLCAnaW5wdXQnLCAndGV4dGFyZWEnLCAnYnV0dG9uJ107XG5cblx0XHRcdFx0ZnVuY3Rpb24gZHJhZ1N0YXJ0KGV2ZW50KSB7XG5cdFx0XHRcdFx0JGVsLmFkZENsYXNzKCdncmlkc3Rlci1pdGVtLW1vdmluZycpO1xuXHRcdFx0XHRcdGdyaWRzdGVyLm1vdmluZ0l0ZW0gPSBpdGVtO1xuXG5cdFx0XHRcdFx0Z3JpZHN0ZXIudXBkYXRlSGVpZ2h0KGl0ZW0uc2l6ZVkpO1xuXHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmIChncmlkc3Rlci5kcmFnZ2FibGUgJiYgZ3JpZHN0ZXIuZHJhZ2dhYmxlLnN0YXJ0KSB7XG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLmRyYWdnYWJsZS5zdGFydChldmVudCwgJGVsLCBpdGVtT3B0aW9ucyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmdW5jdGlvbiBkcmFnKGV2ZW50KSB7XG5cdFx0XHRcdFx0dmFyIG9sZFJvdyA9IGl0ZW0ucm93LFxuXHRcdFx0XHRcdFx0b2xkQ29sID0gaXRlbS5jb2wsXG5cdFx0XHRcdFx0XHRoYXNDYWxsYmFjayA9IGdyaWRzdGVyLmRyYWdnYWJsZSAmJiBncmlkc3Rlci5kcmFnZ2FibGUuZHJhZyxcblx0XHRcdFx0XHRcdHNjcm9sbFNlbnNpdGl2aXR5ID0gZ3JpZHN0ZXIuZHJhZ2dhYmxlLnNjcm9sbFNlbnNpdGl2aXR5LFxuXHRcdFx0XHRcdFx0c2Nyb2xsU3BlZWQgPSBncmlkc3Rlci5kcmFnZ2FibGUuc2Nyb2xsU3BlZWQ7XG5cblx0XHRcdFx0XHR2YXIgcm93ID0gTWF0aC5taW4oZ3JpZHN0ZXIucGl4ZWxzVG9Sb3dzKGVsbVkpLCBncmlkc3Rlci5tYXhSb3dzIC0gMSk7XG5cdFx0XHRcdFx0dmFyIGNvbCA9IE1hdGgubWluKGdyaWRzdGVyLnBpeGVsc1RvQ29sdW1ucyhlbG1YKSwgZ3JpZHN0ZXIuY29sdW1ucyAtIDEpO1xuXG5cdFx0XHRcdFx0dmFyIGl0ZW1zSW5UaGVXYXkgPSBncmlkc3Rlci5nZXRJdGVtcyhyb3csIGNvbCwgaXRlbS5zaXplWCwgaXRlbS5zaXplWSwgaXRlbSk7XG5cdFx0XHRcdFx0dmFyIGhhc0l0ZW1zSW5UaGVXYXkgPSBpdGVtc0luVGhlV2F5Lmxlbmd0aCAhPT0gMDtcblxuXHRcdFx0XHRcdGlmIChncmlkc3Rlci5zd2FwcGluZyA9PT0gdHJ1ZSAmJiBoYXNJdGVtc0luVGhlV2F5KSB7XG5cdFx0XHRcdFx0XHR2YXIgYm91bmRpbmdCb3hJdGVtID0gZ3JpZHN0ZXIuZ2V0Qm91bmRpbmdCb3goaXRlbXNJblRoZVdheSksXG5cdFx0XHRcdFx0XHRcdHNhbWVTaXplID0gYm91bmRpbmdCb3hJdGVtLnNpemVYID09PSBpdGVtLnNpemVYICYmIGJvdW5kaW5nQm94SXRlbS5zaXplWSA9PT0gaXRlbS5zaXplWSxcblx0XHRcdFx0XHRcdFx0c2FtZVJvdyA9IGJvdW5kaW5nQm94SXRlbS5yb3cgPT09IG9sZFJvdyxcblx0XHRcdFx0XHRcdFx0c2FtZUNvbCA9IGJvdW5kaW5nQm94SXRlbS5jb2wgPT09IG9sZENvbCxcblx0XHRcdFx0XHRcdFx0c2FtZVBvc2l0aW9uID0gYm91bmRpbmdCb3hJdGVtLnJvdyA9PT0gcm93ICYmIGJvdW5kaW5nQm94SXRlbS5jb2wgPT09IGNvbCxcblx0XHRcdFx0XHRcdFx0aW5saW5lID0gc2FtZVJvdyB8fCBzYW1lQ29sO1xuXG5cdFx0XHRcdFx0XHRpZiAoc2FtZVNpemUgJiYgaXRlbXNJblRoZVdheS5sZW5ndGggPT09IDEpIHtcblx0XHRcdFx0XHRcdFx0aWYgKHNhbWVQb3NpdGlvbikge1xuXHRcdFx0XHRcdFx0XHRcdGdyaWRzdGVyLnN3YXBJdGVtcyhpdGVtLCBpdGVtc0luVGhlV2F5WzBdKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmIChpbmxpbmUpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoYm91bmRpbmdCb3hJdGVtLnNpemVYIDw9IGl0ZW0uc2l6ZVggJiYgYm91bmRpbmdCb3hJdGVtLnNpemVZIDw9IGl0ZW0uc2l6ZVkgJiYgaW5saW5lKSB7XG5cdFx0XHRcdFx0XHRcdHZhciBlbXB0eVJvdyA9IGl0ZW0ucm93IDw9IHJvdyA/IGl0ZW0ucm93IDogcm93ICsgaXRlbS5zaXplWSxcblx0XHRcdFx0XHRcdFx0XHRlbXB0eUNvbCA9IGl0ZW0uY29sIDw9IGNvbCA/IGl0ZW0uY29sIDogY29sICsgaXRlbS5zaXplWCxcblx0XHRcdFx0XHRcdFx0XHRyb3dPZmZzZXQgPSBlbXB0eVJvdyAtIGJvdW5kaW5nQm94SXRlbS5yb3csXG5cdFx0XHRcdFx0XHRcdFx0Y29sT2Zmc2V0ID0gZW1wdHlDb2wgLSBib3VuZGluZ0JveEl0ZW0uY29sO1xuXG5cdFx0XHRcdFx0XHRcdGZvciAodmFyIGkgPSAwLCBsID0gaXRlbXNJblRoZVdheS5sZW5ndGg7IGkgPCBsOyArK2kpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgaXRlbUluVGhlV2F5ID0gaXRlbXNJblRoZVdheVtpXTtcblxuXHRcdFx0XHRcdFx0XHRcdHZhciBpdGVtc0luRnJlZVNwYWNlID0gZ3JpZHN0ZXIuZ2V0SXRlbXMoXG5cdFx0XHRcdFx0XHRcdFx0XHRpdGVtSW5UaGVXYXkucm93ICsgcm93T2Zmc2V0LFxuXHRcdFx0XHRcdFx0XHRcdFx0aXRlbUluVGhlV2F5LmNvbCArIGNvbE9mZnNldCxcblx0XHRcdFx0XHRcdFx0XHRcdGl0ZW1JblRoZVdheS5zaXplWCxcblx0XHRcdFx0XHRcdFx0XHRcdGl0ZW1JblRoZVdheS5zaXplWSxcblx0XHRcdFx0XHRcdFx0XHRcdGl0ZW1cblx0XHRcdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGl0ZW1zSW5GcmVlU3BhY2UubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRncmlkc3Rlci5wdXRJdGVtKGl0ZW1JblRoZVdheSwgaXRlbUluVGhlV2F5LnJvdyArIHJvd09mZnNldCwgaXRlbUluVGhlV2F5LmNvbCArIGNvbE9mZnNldCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKGdyaWRzdGVyLnB1c2hpbmcgIT09IGZhbHNlIHx8ICFoYXNJdGVtc0luVGhlV2F5KSB7XG5cdFx0XHRcdFx0XHRpdGVtLnJvdyA9IHJvdztcblx0XHRcdFx0XHRcdGl0ZW0uY29sID0gY29sO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChldmVudC5wYWdlWSAtIHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA8IHNjcm9sbFNlbnNpdGl2aXR5KSB7XG5cdFx0XHRcdFx0XHRyZWFsZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgPSByZWFsZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgLSBzY3JvbGxTcGVlZDtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKCR3aW5kb3cuaW5uZXJIZWlnaHQgLSAoZXZlbnQucGFnZVkgLSByZWFsZG9jdW1lbnQuYm9keS5zY3JvbGxUb3ApIDwgc2Nyb2xsU2Vuc2l0aXZpdHkpIHtcblx0XHRcdFx0XHRcdHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA9IHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCArIHNjcm9sbFNwZWVkO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChldmVudC5wYWdlWCAtIHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgPCBzY3JvbGxTZW5zaXRpdml0eSkge1xuXHRcdFx0XHRcdFx0cmVhbGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCA9IHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgLSBzY3JvbGxTcGVlZDtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKCR3aW5kb3cuaW5uZXJXaWR0aCAtIChldmVudC5wYWdlWCAtIHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQpIDwgc2Nyb2xsU2Vuc2l0aXZpdHkpIHtcblx0XHRcdFx0XHRcdHJlYWxkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgPSByZWFsZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0ICsgc2Nyb2xsU3BlZWQ7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKGhhc0NhbGxiYWNrIHx8IG9sZFJvdyAhPT0gaXRlbS5yb3cgfHwgb2xkQ29sICE9PSBpdGVtLmNvbCkge1xuXHRcdFx0XHRcdFx0c2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRpZiAoaGFzQ2FsbGJhY2spIHtcblx0XHRcdFx0XHRcdFx0XHRncmlkc3Rlci5kcmFnZ2FibGUuZHJhZyhldmVudCwgJGVsLCBpdGVtT3B0aW9ucyk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZ1bmN0aW9uIGRyYWdTdG9wKGV2ZW50KSB7XG5cdFx0XHRcdFx0JGVsLnJlbW92ZUNsYXNzKCdncmlkc3Rlci1pdGVtLW1vdmluZycpO1xuXHRcdFx0XHRcdHZhciByb3cgPSBNYXRoLm1pbihncmlkc3Rlci5waXhlbHNUb1Jvd3MoZWxtWSksIGdyaWRzdGVyLm1heFJvd3MgLSAxKTtcblx0XHRcdFx0XHR2YXIgY29sID0gTWF0aC5taW4oZ3JpZHN0ZXIucGl4ZWxzVG9Db2x1bW5zKGVsbVgpLCBncmlkc3Rlci5jb2x1bW5zIC0gMSk7XG5cdFx0XHRcdFx0aWYgKGdyaWRzdGVyLnB1c2hpbmcgIT09IGZhbHNlIHx8IGdyaWRzdGVyLmdldEl0ZW1zKHJvdywgY29sLCBpdGVtLnNpemVYLCBpdGVtLnNpemVZLCBpdGVtKS5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0XHRcdGl0ZW0ucm93ID0gcm93O1xuXHRcdFx0XHRcdFx0aXRlbS5jb2wgPSBjb2w7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGdyaWRzdGVyLm1vdmluZ0l0ZW0gPSBudWxsO1xuXHRcdFx0XHRcdGl0ZW0uc2V0UG9zaXRpb24oaXRlbS5yb3csIGl0ZW0uY29sKTtcblxuXHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmIChncmlkc3Rlci5kcmFnZ2FibGUgJiYgZ3JpZHN0ZXIuZHJhZ2dhYmxlLnN0b3ApIHtcblx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIuZHJhZ2dhYmxlLnN0b3AoZXZlbnQsICRlbCwgaXRlbU9wdGlvbnMpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZnVuY3Rpb24gbW91c2VEb3duKGUpIHtcblx0XHRcdFx0XHRpZiAoaW5wdXRUYWdzLmluZGV4T2YoZS50YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dmFyICR0YXJnZXQgPSBhbmd1bGFyLmVsZW1lbnQoZS50YXJnZXQpO1xuXG5cdFx0XHRcdFx0Ly8gZXhpdCwgaWYgYSByZXNpemUgaGFuZGxlIHdhcyBoaXRcblx0XHRcdFx0XHRpZiAoJHRhcmdldC5oYXNDbGFzcygnZ3JpZHN0ZXItaXRlbS1yZXNpemFibGUtaGFuZGxlcicpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gZXhpdCwgaWYgdGhlIHRhcmdldCBoYXMgaXQncyBvd24gY2xpY2sgZXZlbnRcblx0XHRcdFx0XHRpZiAoJHRhcmdldC5hdHRyKCdvbmNsaWNrJykgfHwgJHRhcmdldC5hdHRyKCduZy1jbGljaycpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gb25seSB3b3JrcyBpZiB5b3UgaGF2ZSBqUXVlcnlcblx0XHRcdFx0XHRpZiAoJHRhcmdldC5jbG9zZXN0ICYmICR0YXJnZXQuY2xvc2VzdCgnLmdyaWRzdGVyLW5vLWRyYWcnKS5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBhcHBseSBkcmFnIGhhbmRsZSBmaWx0ZXJcblx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIuZHJhZ2dhYmxlICYmIGdyaWRzdGVyLmRyYWdnYWJsZS5oYW5kbGUpIHtcblx0XHRcdFx0XHRcdHZhciAkZHJhZ0hhbmRsZXMgPSBhbmd1bGFyLmVsZW1lbnQoJGVsWzBdLnF1ZXJ5U2VsZWN0b3JBbGwoZ3JpZHN0ZXIuZHJhZ2dhYmxlLmhhbmRsZSkpO1xuXHRcdFx0XHRcdFx0dmFyIG1hdGNoID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRvdXRlcmxvb3A6XG5cdFx0XHRcdFx0XHRcdGZvciAodmFyIGggPSAwLCBobCA9ICRkcmFnSGFuZGxlcy5sZW5ndGg7IGggPCBobDsgKytoKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIGhhbmRsZSA9ICRkcmFnSGFuZGxlc1toXTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoaGFuZGxlID09PSBlLnRhcmdldCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0bWF0Y2ggPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHZhciB0YXJnZXQgPSBlLnRhcmdldDtcblx0XHRcdFx0XHRcdFx0XHRmb3IgKHZhciBwID0gMDsgcCA8IDIwOyArK3ApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciBwYXJlbnQgPSB0YXJnZXQucGFyZW50Tm9kZTtcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChwYXJlbnQgPT09ICRlbFswXSB8fCAhcGFyZW50KSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHBhcmVudCA9PT0gaGFuZGxlKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG1hdGNoID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWsgb3V0ZXJsb29wO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0dGFyZ2V0ID0gcGFyZW50O1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCFtYXRjaCkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0c3dpdGNoIChlLndoaWNoKSB7XG5cdFx0XHRcdFx0XHRjYXNlIDE6XG5cdFx0XHRcdFx0XHRcdC8vIGxlZnQgbW91c2UgYnV0dG9uXG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAzOlxuXHRcdFx0XHRcdFx0XHQvLyByaWdodCBvciBtaWRkbGUgbW91c2UgYnV0dG9uXG5cdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRsYXN0TW91c2VYID0gZS5wYWdlWDtcblx0XHRcdFx0XHRsYXN0TW91c2VZID0gZS5wYWdlWTtcblxuXHRcdFx0XHRcdGVsbVggPSBwYXJzZUludCgkZWwuY3NzKCdsZWZ0JyksIDEwKTtcblx0XHRcdFx0XHRlbG1ZID0gcGFyc2VJbnQoJGVsLmNzcygndG9wJyksIDEwKTtcblx0XHRcdFx0XHRlbG1XID0gJGVsWzBdLm9mZnNldFdpZHRoO1xuXHRcdFx0XHRcdGVsbUggPSAkZWxbMF0ub2Zmc2V0SGVpZ2h0O1xuXG5cdFx0XHRcdFx0b3JpZ2luYWxDb2wgPSBpdGVtLmNvbDtcblx0XHRcdFx0XHRvcmlnaW5hbFJvdyA9IGl0ZW0ucm93O1xuXG5cdFx0XHRcdFx0ZHJhZ1N0YXJ0KGUpO1xuXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmdW5jdGlvbiBtb3VzZU1vdmUoZSkge1xuXHRcdFx0XHRcdGlmICghJGVsLmhhc0NsYXNzKCdncmlkc3Rlci1pdGVtLW1vdmluZycpIHx8ICRlbC5oYXNDbGFzcygnZ3JpZHN0ZXItaXRlbS1yZXNpemluZycpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dmFyIG1heExlZnQgPSBncmlkc3Rlci5jdXJXaWR0aCAtIDE7XG5cdFx0XHRcdFx0dmFyIG1heFRvcCA9IGdyaWRzdGVyLmN1clJvd0hlaWdodCAqIGdyaWRzdGVyLm1heFJvd3MgLSAxO1xuXG5cdFx0XHRcdFx0Ly8gR2V0IHRoZSBjdXJyZW50IG1vdXNlIHBvc2l0aW9uLlxuXHRcdFx0XHRcdG1vdXNlWCA9IGUucGFnZVg7XG5cdFx0XHRcdFx0bW91c2VZID0gZS5wYWdlWTtcblxuXHRcdFx0XHRcdC8vIEdldCB0aGUgZGVsdGFzXG5cdFx0XHRcdFx0dmFyIGRpZmZYID0gbW91c2VYIC0gbGFzdE1vdXNlWCArIG1PZmZYO1xuXHRcdFx0XHRcdHZhciBkaWZmWSA9IG1vdXNlWSAtIGxhc3RNb3VzZVkgKyBtT2ZmWTtcblx0XHRcdFx0XHRtT2ZmWCA9IG1PZmZZID0gMDtcblxuXHRcdFx0XHRcdC8vIFVwZGF0ZSBsYXN0IHByb2Nlc3NlZCBtb3VzZSBwb3NpdGlvbnMuXG5cdFx0XHRcdFx0bGFzdE1vdXNlWCA9IG1vdXNlWDtcblx0XHRcdFx0XHRsYXN0TW91c2VZID0gbW91c2VZO1xuXG5cdFx0XHRcdFx0dmFyIGRYID0gZGlmZlgsXG5cdFx0XHRcdFx0XHRkWSA9IGRpZmZZO1xuXHRcdFx0XHRcdGlmIChlbG1YICsgZFggPCBtaW5MZWZ0KSB7XG5cdFx0XHRcdFx0XHRkaWZmWCA9IG1pbkxlZnQgLSBlbG1YO1xuXHRcdFx0XHRcdFx0bU9mZlggPSBkWCAtIGRpZmZYO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoZWxtWCArIGVsbVcgKyBkWCA+IG1heExlZnQpIHtcblx0XHRcdFx0XHRcdGRpZmZYID0gbWF4TGVmdCAtIGVsbVggLSBlbG1XO1xuXHRcdFx0XHRcdFx0bU9mZlggPSBkWCAtIGRpZmZYO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmIChlbG1ZICsgZFkgPCBtaW5Ub3ApIHtcblx0XHRcdFx0XHRcdGRpZmZZID0gbWluVG9wIC0gZWxtWTtcblx0XHRcdFx0XHRcdG1PZmZZID0gZFkgLSBkaWZmWTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKGVsbVkgKyBlbG1IICsgZFkgPiBtYXhUb3ApIHtcblx0XHRcdFx0XHRcdGRpZmZZID0gbWF4VG9wIC0gZWxtWSAtIGVsbUg7XG5cdFx0XHRcdFx0XHRtT2ZmWSA9IGRZIC0gZGlmZlk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsbVggKz0gZGlmZlg7XG5cdFx0XHRcdFx0ZWxtWSArPSBkaWZmWTtcblxuXHRcdFx0XHRcdC8vIHNldCBuZXcgcG9zaXRpb25cblx0XHRcdFx0XHQkZWwuY3NzKHtcblx0XHRcdFx0XHRcdCd0b3AnOiBlbG1ZICsgJ3B4Jyxcblx0XHRcdFx0XHRcdCdsZWZ0JzogZWxtWCArICdweCdcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGRyYWcoZSk7XG5cblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZ1bmN0aW9uIG1vdXNlVXAoZSkge1xuXHRcdFx0XHRcdGlmICghJGVsLmhhc0NsYXNzKCdncmlkc3Rlci1pdGVtLW1vdmluZycpIHx8ICRlbC5oYXNDbGFzcygnZ3JpZHN0ZXItaXRlbS1yZXNpemluZycpKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0bU9mZlggPSBtT2ZmWSA9IDA7XG5cblx0XHRcdFx0XHRkcmFnU3RvcChlKTtcblxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIGVuYWJsZWQgPSBudWxsO1xuXHRcdFx0XHR2YXIgZ3JpZHN0ZXJUb3VjaCA9IG51bGw7XG5cblx0XHRcdFx0dGhpcy5lbmFibGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoZW5hYmxlZCA9PT0gdHJ1ZSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbmFibGVkID0gdHJ1ZTtcblxuXHRcdFx0XHRcdGlmIChncmlkc3RlclRvdWNoKSB7XG5cdFx0XHRcdFx0XHRncmlkc3RlclRvdWNoLmVuYWJsZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGdyaWRzdGVyVG91Y2ggPSBuZXcgR3JpZHN0ZXJUb3VjaCgkZWxbMF0sIG1vdXNlRG93biwgbW91c2VNb3ZlLCBtb3VzZVVwKTtcblx0XHRcdFx0XHRncmlkc3RlclRvdWNoLmVuYWJsZSgpO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHRoaXMuZGlzYWJsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmIChlbmFibGVkID09PSBmYWxzZSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVuYWJsZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXJUb3VjaCkge1xuXHRcdFx0XHRcdFx0Z3JpZHN0ZXJUb3VjaC5kaXNhYmxlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHRoaXMudG9nZ2xlID0gZnVuY3Rpb24oZW5hYmxlZCkge1xuXHRcdFx0XHRcdGlmIChlbmFibGVkKSB7XG5cdFx0XHRcdFx0XHR0aGlzLmVuYWJsZSgpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR0aGlzLmRpc2FibGUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0dGhpcy5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dGhpcy5kaXNhYmxlKCk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBHcmlkc3RlckRyYWdnYWJsZTtcblx0XHR9XG5cdF0pXG5cblx0LmZhY3RvcnkoJ0dyaWRzdGVyUmVzaXphYmxlJywgWydHcmlkc3RlclRvdWNoJywgZnVuY3Rpb24oR3JpZHN0ZXJUb3VjaCkge1xuXHRcdGZ1bmN0aW9uIEdyaWRzdGVyUmVzaXphYmxlKCRlbCwgc2NvcGUsIGdyaWRzdGVyLCBpdGVtLCBpdGVtT3B0aW9ucykge1xuXG5cdFx0XHRmdW5jdGlvbiBSZXNpemVIYW5kbGUoaGFuZGxlQ2xhc3MpIHtcblxuXHRcdFx0XHR2YXIgaENsYXNzID0gaGFuZGxlQ2xhc3M7XG5cblx0XHRcdFx0dmFyIGVsbVgsIGVsbVksIGVsbVcsIGVsbUgsXG5cblx0XHRcdFx0XHRtb3VzZVggPSAwLFxuXHRcdFx0XHRcdG1vdXNlWSA9IDAsXG5cdFx0XHRcdFx0bGFzdE1vdXNlWCA9IDAsXG5cdFx0XHRcdFx0bGFzdE1vdXNlWSA9IDAsXG5cdFx0XHRcdFx0bU9mZlggPSAwLFxuXHRcdFx0XHRcdG1PZmZZID0gMCxcblxuXHRcdFx0XHRcdG1pblRvcCA9IDAsXG5cdFx0XHRcdFx0bWF4VG9wID0gOTk5OSxcblx0XHRcdFx0XHRtaW5MZWZ0ID0gMDtcblxuXHRcdFx0XHR2YXIgZ2V0TWluSGVpZ2h0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIChpdGVtLm1pblNpemVZID8gaXRlbS5taW5TaXplWSA6IDEpICogZ3JpZHN0ZXIuY3VyUm93SGVpZ2h0IC0gZ3JpZHN0ZXIubWFyZ2luc1swXTtcblx0XHRcdFx0fTtcblx0XHRcdFx0dmFyIGdldE1pbldpZHRoID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIChpdGVtLm1pblNpemVYID8gaXRlbS5taW5TaXplWCA6IDEpICogZ3JpZHN0ZXIuY3VyQ29sV2lkdGggLSBncmlkc3Rlci5tYXJnaW5zWzFdO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHZhciBvcmlnaW5hbFdpZHRoLCBvcmlnaW5hbEhlaWdodDtcblx0XHRcdFx0dmFyIHNhdmVkRHJhZ2dhYmxlO1xuXG5cdFx0XHRcdGZ1bmN0aW9uIHJlc2l6ZVN0YXJ0KGUpIHtcblx0XHRcdFx0XHQkZWwuYWRkQ2xhc3MoJ2dyaWRzdGVyLWl0ZW0tbW92aW5nJyk7XG5cdFx0XHRcdFx0JGVsLmFkZENsYXNzKCdncmlkc3Rlci1pdGVtLXJlc2l6aW5nJyk7XG5cblx0XHRcdFx0XHRncmlkc3Rlci5tb3ZpbmdJdGVtID0gaXRlbTtcblxuXHRcdFx0XHRcdGl0ZW0uc2V0RWxlbWVudFNpemVYKCk7XG5cdFx0XHRcdFx0aXRlbS5zZXRFbGVtZW50U2l6ZVkoKTtcblx0XHRcdFx0XHRpdGVtLnNldEVsZW1lbnRQb3NpdGlvbigpO1xuXHRcdFx0XHRcdGdyaWRzdGVyLnVwZGF0ZUhlaWdodCgxKTtcblxuXHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdC8vIGNhbGxiYWNrXG5cdFx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIucmVzaXphYmxlICYmIGdyaWRzdGVyLnJlc2l6YWJsZS5zdGFydCkge1xuXHRcdFx0XHRcdFx0XHRncmlkc3Rlci5yZXNpemFibGUuc3RhcnQoZSwgJGVsLCBpdGVtT3B0aW9ucyk7IC8vIG9wdGlvbnMgaXMgdGhlIGl0ZW0gbW9kZWxcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZ1bmN0aW9uIHJlc2l6ZShlKSB7XG5cdFx0XHRcdFx0dmFyIG9sZFJvdyA9IGl0ZW0ucm93LFxuXHRcdFx0XHRcdFx0b2xkQ29sID0gaXRlbS5jb2wsXG5cdFx0XHRcdFx0XHRvbGRTaXplWCA9IGl0ZW0uc2l6ZVgsXG5cdFx0XHRcdFx0XHRvbGRTaXplWSA9IGl0ZW0uc2l6ZVksXG5cdFx0XHRcdFx0XHRoYXNDYWxsYmFjayA9IGdyaWRzdGVyLnJlc2l6YWJsZSAmJiBncmlkc3Rlci5yZXNpemFibGUucmVzaXplO1xuXG5cdFx0XHRcdFx0dmFyIGNvbCA9IGl0ZW0uY29sO1xuXHRcdFx0XHRcdC8vIG9ubHkgY2hhbmdlIGNvbHVtbiBpZiBncmFiYmluZyBsZWZ0IGVkZ2Vcblx0XHRcdFx0XHRpZiAoWyd3JywgJ253JywgJ3N3J10uaW5kZXhPZihoYW5kbGVDbGFzcykgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRjb2wgPSBncmlkc3Rlci5waXhlbHNUb0NvbHVtbnMoZWxtWCwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciByb3cgPSBpdGVtLnJvdztcblx0XHRcdFx0XHQvLyBvbmx5IGNoYW5nZSByb3cgaWYgZ3JhYmJpbmcgdG9wIGVkZ2Vcblx0XHRcdFx0XHRpZiAoWyduJywgJ25lJywgJ253J10uaW5kZXhPZihoYW5kbGVDbGFzcykgIT09IC0xKSB7XG5cdFx0XHRcdFx0XHRyb3cgPSBncmlkc3Rlci5waXhlbHNUb1Jvd3MoZWxtWSwgZmFsc2UpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciBzaXplWCA9IGl0ZW0uc2l6ZVg7XG5cdFx0XHRcdFx0Ly8gb25seSBjaGFuZ2Ugcm93IGlmIGdyYWJiaW5nIGxlZnQgb3IgcmlnaHQgZWRnZVxuXHRcdFx0XHRcdGlmIChbJ24nLCAncyddLmluZGV4T2YoaGFuZGxlQ2xhc3MpID09PSAtMSkge1xuXHRcdFx0XHRcdFx0c2l6ZVggPSBncmlkc3Rlci5waXhlbHNUb0NvbHVtbnMoZWxtVywgdHJ1ZSk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dmFyIHNpemVZID0gaXRlbS5zaXplWTtcblx0XHRcdFx0XHQvLyBvbmx5IGNoYW5nZSByb3cgaWYgZ3JhYmJpbmcgdG9wIG9yIGJvdHRvbSBlZGdlXG5cdFx0XHRcdFx0aWYgKFsnZScsICd3J10uaW5kZXhPZihoYW5kbGVDbGFzcykgPT09IC0xKSB7XG5cdFx0XHRcdFx0XHRzaXplWSA9IGdyaWRzdGVyLnBpeGVsc1RvUm93cyhlbG1ILCB0cnVlKTtcblx0XHRcdFx0XHR9XG5cblxuXHRcdFx0XHRcdHZhciBjYW5PY2N1cHkgPSByb3cgPiAtMSAmJiBjb2wgPiAtMSAmJiBzaXplWCArIGNvbCA8PSBncmlkc3Rlci5jb2x1bW5zICYmIHNpemVZICsgcm93IDw9IGdyaWRzdGVyLm1heFJvd3M7XG5cdFx0XHRcdFx0aWYgKGNhbk9jY3VweSAmJiAoZ3JpZHN0ZXIucHVzaGluZyAhPT0gZmFsc2UgfHwgZ3JpZHN0ZXIuZ2V0SXRlbXMocm93LCBjb2wsIHNpemVYLCBzaXplWSwgaXRlbSkubGVuZ3RoID09PSAwKSkge1xuXHRcdFx0XHRcdFx0aXRlbS5yb3cgPSByb3c7XG5cdFx0XHRcdFx0XHRpdGVtLmNvbCA9IGNvbDtcblx0XHRcdFx0XHRcdGl0ZW0uc2l6ZVggPSBzaXplWDtcblx0XHRcdFx0XHRcdGl0ZW0uc2l6ZVkgPSBzaXplWTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dmFyIGlzQ2hhbmdlZCA9IGl0ZW0ucm93ICE9PSBvbGRSb3cgfHwgaXRlbS5jb2wgIT09IG9sZENvbCB8fCBpdGVtLnNpemVYICE9PSBvbGRTaXplWCB8fCBpdGVtLnNpemVZICE9PSBvbGRTaXplWTtcblxuXHRcdFx0XHRcdGlmIChoYXNDYWxsYmFjayB8fCBpc0NoYW5nZWQpIHtcblx0XHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGhhc0NhbGxiYWNrKSB7XG5cdFx0XHRcdFx0XHRcdFx0Z3JpZHN0ZXIucmVzaXphYmxlLnJlc2l6ZShlLCAkZWwsIGl0ZW1PcHRpb25zKTsgLy8gb3B0aW9ucyBpcyB0aGUgaXRlbSBtb2RlbFxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmdW5jdGlvbiByZXNpemVTdG9wKGUpIHtcblx0XHRcdFx0XHQkZWwucmVtb3ZlQ2xhc3MoJ2dyaWRzdGVyLWl0ZW0tbW92aW5nJyk7XG5cdFx0XHRcdFx0JGVsLnJlbW92ZUNsYXNzKCdncmlkc3Rlci1pdGVtLXJlc2l6aW5nJyk7XG5cblx0XHRcdFx0XHRncmlkc3Rlci5tb3ZpbmdJdGVtID0gbnVsbDtcblxuXHRcdFx0XHRcdGl0ZW0uc2V0UG9zaXRpb24oaXRlbS5yb3csIGl0ZW0uY29sKTtcblx0XHRcdFx0XHRpdGVtLnNldFNpemVZKGl0ZW0uc2l6ZVkpO1xuXHRcdFx0XHRcdGl0ZW0uc2V0U2l6ZVgoaXRlbS5zaXplWCk7XG5cblx0XHRcdFx0XHRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoZ3JpZHN0ZXIucmVzaXphYmxlICYmIGdyaWRzdGVyLnJlc2l6YWJsZS5zdG9wKSB7XG5cdFx0XHRcdFx0XHRcdGdyaWRzdGVyLnJlc2l6YWJsZS5zdG9wKGUsICRlbCwgaXRlbU9wdGlvbnMpOyAvLyBvcHRpb25zIGlzIHRoZSBpdGVtIG1vZGVsXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmdW5jdGlvbiBtb3VzZURvd24oZSkge1xuXHRcdFx0XHRcdHN3aXRjaCAoZS53aGljaCkge1xuXHRcdFx0XHRcdFx0Y2FzZSAxOlxuXHRcdFx0XHRcdFx0XHQvLyBsZWZ0IG1vdXNlIGJ1dHRvblxuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgMjpcblx0XHRcdFx0XHRcdGNhc2UgMzpcblx0XHRcdFx0XHRcdFx0Ly8gcmlnaHQgb3IgbWlkZGxlIG1vdXNlIGJ1dHRvblxuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gc2F2ZSB0aGUgZHJhZ2dhYmxlIHNldHRpbmcgdG8gcmVzdG9yZSBhZnRlciByZXNpemVcblx0XHRcdFx0XHRzYXZlZERyYWdnYWJsZSA9IGdyaWRzdGVyLmRyYWdnYWJsZS5lbmFibGVkO1xuXHRcdFx0XHRcdGlmIChzYXZlZERyYWdnYWJsZSkge1xuXHRcdFx0XHRcdFx0Z3JpZHN0ZXIuZHJhZ2dhYmxlLmVuYWJsZWQgPSBmYWxzZTtcblx0XHRcdFx0XHRcdHNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLWRyYWdnYWJsZS1jaGFuZ2VkJywgZ3JpZHN0ZXIpO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIEdldCB0aGUgY3VycmVudCBtb3VzZSBwb3NpdGlvbi5cblx0XHRcdFx0XHRsYXN0TW91c2VYID0gZS5wYWdlWDtcblx0XHRcdFx0XHRsYXN0TW91c2VZID0gZS5wYWdlWTtcblxuXHRcdFx0XHRcdC8vIFJlY29yZCBjdXJyZW50IHdpZGdldCBkaW1lbnNpb25zXG5cdFx0XHRcdFx0ZWxtWCA9IHBhcnNlSW50KCRlbC5jc3MoJ2xlZnQnKSwgMTApO1xuXHRcdFx0XHRcdGVsbVkgPSBwYXJzZUludCgkZWwuY3NzKCd0b3AnKSwgMTApO1xuXHRcdFx0XHRcdGVsbVcgPSAkZWxbMF0ub2Zmc2V0V2lkdGg7XG5cdFx0XHRcdFx0ZWxtSCA9ICRlbFswXS5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdFx0XHRvcmlnaW5hbFdpZHRoID0gaXRlbS5zaXplWDtcblx0XHRcdFx0XHRvcmlnaW5hbEhlaWdodCA9IGl0ZW0uc2l6ZVk7XG5cblx0XHRcdFx0XHRyZXNpemVTdGFydChlKTtcblxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZnVuY3Rpb24gbW91c2VNb3ZlKGUpIHtcblx0XHRcdFx0XHR2YXIgbWF4TGVmdCA9IGdyaWRzdGVyLmN1cldpZHRoIC0gMTtcblxuXHRcdFx0XHRcdC8vIEdldCB0aGUgY3VycmVudCBtb3VzZSBwb3NpdGlvbi5cblx0XHRcdFx0XHRtb3VzZVggPSBlLnBhZ2VYO1xuXHRcdFx0XHRcdG1vdXNlWSA9IGUucGFnZVk7XG5cblx0XHRcdFx0XHQvLyBHZXQgdGhlIGRlbHRhc1xuXHRcdFx0XHRcdHZhciBkaWZmWCA9IG1vdXNlWCAtIGxhc3RNb3VzZVggKyBtT2ZmWDtcblx0XHRcdFx0XHR2YXIgZGlmZlkgPSBtb3VzZVkgLSBsYXN0TW91c2VZICsgbU9mZlk7XG5cdFx0XHRcdFx0bU9mZlggPSBtT2ZmWSA9IDA7XG5cblx0XHRcdFx0XHQvLyBVcGRhdGUgbGFzdCBwcm9jZXNzZWQgbW91c2UgcG9zaXRpb25zLlxuXHRcdFx0XHRcdGxhc3RNb3VzZVggPSBtb3VzZVg7XG5cdFx0XHRcdFx0bGFzdE1vdXNlWSA9IG1vdXNlWTtcblxuXHRcdFx0XHRcdHZhciBkWSA9IGRpZmZZLFxuXHRcdFx0XHRcdFx0ZFggPSBkaWZmWDtcblxuXHRcdFx0XHRcdGlmIChoQ2xhc3MuaW5kZXhPZignbicpID49IDApIHtcblx0XHRcdFx0XHRcdGlmIChlbG1IIC0gZFkgPCBnZXRNaW5IZWlnaHQoKSkge1xuXHRcdFx0XHRcdFx0XHRkaWZmWSA9IGVsbUggLSBnZXRNaW5IZWlnaHQoKTtcblx0XHRcdFx0XHRcdFx0bU9mZlkgPSBkWSAtIGRpZmZZO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChlbG1ZICsgZFkgPCBtaW5Ub3ApIHtcblx0XHRcdFx0XHRcdFx0ZGlmZlkgPSBtaW5Ub3AgLSBlbG1ZO1xuXHRcdFx0XHRcdFx0XHRtT2ZmWSA9IGRZIC0gZGlmZlk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbG1ZICs9IGRpZmZZO1xuXHRcdFx0XHRcdFx0ZWxtSCAtPSBkaWZmWTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGhDbGFzcy5pbmRleE9mKCdzJykgPj0gMCkge1xuXHRcdFx0XHRcdFx0aWYgKGVsbUggKyBkWSA8IGdldE1pbkhlaWdodCgpKSB7XG5cdFx0XHRcdFx0XHRcdGRpZmZZID0gZ2V0TWluSGVpZ2h0KCkgLSBlbG1IO1xuXHRcdFx0XHRcdFx0XHRtT2ZmWSA9IGRZIC0gZGlmZlk7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGVsbVkgKyBlbG1IICsgZFkgPiBtYXhUb3ApIHtcblx0XHRcdFx0XHRcdFx0ZGlmZlkgPSBtYXhUb3AgLSBlbG1ZIC0gZWxtSDtcblx0XHRcdFx0XHRcdFx0bU9mZlkgPSBkWSAtIGRpZmZZO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0ZWxtSCArPSBkaWZmWTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGhDbGFzcy5pbmRleE9mKCd3JykgPj0gMCkge1xuXHRcdFx0XHRcdFx0aWYgKGVsbVcgLSBkWCA8IGdldE1pbldpZHRoKCkpIHtcblx0XHRcdFx0XHRcdFx0ZGlmZlggPSBlbG1XIC0gZ2V0TWluV2lkdGgoKTtcblx0XHRcdFx0XHRcdFx0bU9mZlggPSBkWCAtIGRpZmZYO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChlbG1YICsgZFggPCBtaW5MZWZ0KSB7XG5cdFx0XHRcdFx0XHRcdGRpZmZYID0gbWluTGVmdCAtIGVsbVg7XG5cdFx0XHRcdFx0XHRcdG1PZmZYID0gZFggLSBkaWZmWDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGVsbVggKz0gZGlmZlg7XG5cdFx0XHRcdFx0XHRlbG1XIC09IGRpZmZYO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoaENsYXNzLmluZGV4T2YoJ2UnKSA+PSAwKSB7XG5cdFx0XHRcdFx0XHRpZiAoZWxtVyArIGRYIDwgZ2V0TWluV2lkdGgoKSkge1xuXHRcdFx0XHRcdFx0XHRkaWZmWCA9IGdldE1pbldpZHRoKCkgLSBlbG1XO1xuXHRcdFx0XHRcdFx0XHRtT2ZmWCA9IGRYIC0gZGlmZlg7XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGVsbVggKyBlbG1XICsgZFggPiBtYXhMZWZ0KSB7XG5cdFx0XHRcdFx0XHRcdGRpZmZYID0gbWF4TGVmdCAtIGVsbVggLSBlbG1XO1xuXHRcdFx0XHRcdFx0XHRtT2ZmWCA9IGRYIC0gZGlmZlg7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbG1XICs9IGRpZmZYO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIHNldCBuZXcgcG9zaXRpb25cblx0XHRcdFx0XHQkZWwuY3NzKHtcblx0XHRcdFx0XHRcdCd0b3AnOiBlbG1ZICsgJ3B4Jyxcblx0XHRcdFx0XHRcdCdsZWZ0JzogZWxtWCArICdweCcsXG5cdFx0XHRcdFx0XHQnd2lkdGgnOiBlbG1XICsgJ3B4Jyxcblx0XHRcdFx0XHRcdCdoZWlnaHQnOiBlbG1IICsgJ3B4J1xuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0cmVzaXplKGUpO1xuXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRmdW5jdGlvbiBtb3VzZVVwKGUpIHtcblx0XHRcdFx0XHQvLyByZXN0b3JlIGRyYWdnYWJsZSBzZXR0aW5nIHRvIGl0cyBvcmlnaW5hbCBzdGF0ZVxuXHRcdFx0XHRcdGlmIChncmlkc3Rlci5kcmFnZ2FibGUuZW5hYmxlZCAhPT0gc2F2ZWREcmFnZ2FibGUpIHtcblx0XHRcdFx0XHRcdGdyaWRzdGVyLmRyYWdnYWJsZS5lbmFibGVkID0gc2F2ZWREcmFnZ2FibGU7XG5cdFx0XHRcdFx0XHRzY29wZS4kYnJvYWRjYXN0KCdncmlkc3Rlci1kcmFnZ2FibGUtY2hhbmdlZCcsIGdyaWRzdGVyKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRtT2ZmWCA9IG1PZmZZID0gMDtcblxuXHRcdFx0XHRcdHJlc2l6ZVN0b3AoZSk7XG5cblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHZhciAkZHJhZ0hhbmRsZSA9IG51bGw7XG5cdFx0XHRcdHZhciB1bmlmaWVkSW5wdXQ7XG5cblx0XHRcdFx0dGhpcy5lbmFibGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoISRkcmFnSGFuZGxlKSB7XG5cdFx0XHRcdFx0XHQkZHJhZ0hhbmRsZSA9IGFuZ3VsYXIuZWxlbWVudCgnPGRpdiBjbGFzcz1cImdyaWRzdGVyLWl0ZW0tcmVzaXphYmxlLWhhbmRsZXIgaGFuZGxlLScgKyBoQ2xhc3MgKyAnXCI+PC9kaXY+Jyk7XG5cdFx0XHRcdFx0XHQkZWwuYXBwZW5kKCRkcmFnSGFuZGxlKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR1bmlmaWVkSW5wdXQgPSBuZXcgR3JpZHN0ZXJUb3VjaCgkZHJhZ0hhbmRsZVswXSwgbW91c2VEb3duLCBtb3VzZU1vdmUsIG1vdXNlVXApO1xuXHRcdFx0XHRcdHVuaWZpZWRJbnB1dC5lbmFibGUoKTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHR0aGlzLmRpc2FibGUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoJGRyYWdIYW5kbGUpIHtcblx0XHRcdFx0XHRcdCRkcmFnSGFuZGxlLnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0JGRyYWdIYW5kbGUgPSBudWxsO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHVuaWZpZWRJbnB1dC5kaXNhYmxlKCk7XG5cdFx0XHRcdFx0dW5pZmllZElucHV0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHRoaXMuZGlzYWJsZSgpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgaGFuZGxlcyA9IFtdO1xuXHRcdFx0dmFyIGhhbmRsZXNPcHRzID0gZ3JpZHN0ZXIucmVzaXphYmxlLmhhbmRsZXM7XG5cdFx0XHRpZiAodHlwZW9mIGhhbmRsZXNPcHRzID09PSAnc3RyaW5nJykge1xuXHRcdFx0XHRoYW5kbGVzT3B0cyA9IGdyaWRzdGVyLnJlc2l6YWJsZS5oYW5kbGVzLnNwbGl0KCcsJyk7XG5cdFx0XHR9XG5cdFx0XHR2YXIgZW5hYmxlZCA9IGZhbHNlO1xuXG5cdFx0XHRmb3IgKHZhciBjID0gMCwgbCA9IGhhbmRsZXNPcHRzLmxlbmd0aDsgYyA8IGw7IGMrKykge1xuXHRcdFx0XHRoYW5kbGVzLnB1c2gobmV3IFJlc2l6ZUhhbmRsZShoYW5kbGVzT3B0c1tjXSkpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmVuYWJsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoZW5hYmxlZCkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IgKHZhciBjID0gMCwgbCA9IGhhbmRsZXMubGVuZ3RoOyBjIDwgbDsgYysrKSB7XG5cdFx0XHRcdFx0aGFuZGxlc1tjXS5lbmFibGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbmFibGVkID0gdHJ1ZTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZGlzYWJsZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIWVuYWJsZWQpIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0Zm9yICh2YXIgYyA9IDAsIGwgPSBoYW5kbGVzLmxlbmd0aDsgYyA8IGw7IGMrKykge1xuXHRcdFx0XHRcdGhhbmRsZXNbY10uZGlzYWJsZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVuYWJsZWQgPSBmYWxzZTtcblx0XHRcdH07XG5cblx0XHRcdHRoaXMudG9nZ2xlID0gZnVuY3Rpb24oZW5hYmxlZCkge1xuXHRcdFx0XHRpZiAoZW5hYmxlZCkge1xuXHRcdFx0XHRcdHRoaXMuZW5hYmxlKCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5kaXNhYmxlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHRoaXMuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKHZhciBjID0gMCwgbCA9IGhhbmRsZXMubGVuZ3RoOyBjIDwgbDsgYysrKSB7XG5cdFx0XHRcdFx0aGFuZGxlc1tjXS5kZXN0cm95KCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRcdHJldHVybiBHcmlkc3RlclJlc2l6YWJsZTtcblx0fV0pXG5cblx0LmZhY3RvcnkoJ2dyaWRzdGVyRGVib3VuY2UnLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZnVuY3Rpb24gZ3JpZHN0ZXJEZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcblx0XHRcdHZhciB0aW1lb3V0O1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgY29udGV4dCA9IHRoaXMsXG5cdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cztcblx0XHRcdFx0dmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0dGltZW91dCA9IG51bGw7XG5cdFx0XHRcdFx0aWYgKCFpbW1lZGlhdGUpIHtcblx0XHRcdFx0XHRcdGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0XHR2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdFx0XHR0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG5cdFx0XHRcdGlmIChjYWxsTm93KSB7XG5cdFx0XHRcdFx0ZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9O1xuXHR9KVxuXG5cdC8qKlxuXHQgKiBHcmlkc3Rlckl0ZW0gZGlyZWN0aXZlXG5cdCAqIEBwYXJhbSAkcGFyc2Vcblx0ICogQHBhcmFtIEdyaWRzdGVyRHJhZ2dhYmxlXG5cdCAqIEBwYXJhbSBHcmlkc3RlclJlc2l6YWJsZVxuXHQgKiBAcGFyYW0gZ3JpZHN0ZXJEZWJvdW5jZVxuXHQgKi9cblx0LmRpcmVjdGl2ZSgnZ3JpZHN0ZXJJdGVtJywgWyckcGFyc2UnLCAnR3JpZHN0ZXJEcmFnZ2FibGUnLCAnR3JpZHN0ZXJSZXNpemFibGUnLCAnZ3JpZHN0ZXJEZWJvdW5jZScsXG5cdFx0ZnVuY3Rpb24oJHBhcnNlLCBHcmlkc3RlckRyYWdnYWJsZSwgR3JpZHN0ZXJSZXNpemFibGUsIGdyaWRzdGVyRGVib3VuY2UpIHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdHNjb3BlOiB0cnVlLFxuXHRcdFx0XHRyZXN0cmljdDogJ0VBJyxcblx0XHRcdFx0Y29udHJvbGxlcjogJ0dyaWRzdGVySXRlbUN0cmwnLFxuXHRcdFx0XHRjb250cm9sbGVyQXM6ICdncmlkc3Rlckl0ZW0nLFxuXHRcdFx0XHRyZXF1aXJlOiBbJ15ncmlkc3RlcicsICdncmlkc3Rlckl0ZW0nXSxcblx0XHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsICRlbCwgYXR0cnMsIGNvbnRyb2xsZXJzKSB7XG5cdFx0XHRcdFx0dmFyIG9wdGlvbnNLZXkgPSBhdHRycy5ncmlkc3Rlckl0ZW0sXG5cdFx0XHRcdFx0XHRvcHRpb25zO1xuXG5cdFx0XHRcdFx0dmFyIGdyaWRzdGVyID0gY29udHJvbGxlcnNbMF0sXG5cdFx0XHRcdFx0XHRpdGVtID0gY29udHJvbGxlcnNbMV07XG5cblx0XHRcdFx0XHRzY29wZS5ncmlkc3RlciA9IGdyaWRzdGVyO1xuXG5cdFx0XHRcdFx0Ly8gYmluZCB0aGUgaXRlbSdzIHBvc2l0aW9uIHByb3BlcnRpZXNcblx0XHRcdFx0XHQvLyBvcHRpb25zIGNhbiBiZSBhbiBvYmplY3Qgc3BlY2lmaWVkIGJ5IGdyaWRzdGVyLWl0ZW09XCJvYmplY3RcIlxuXHRcdFx0XHRcdC8vIG9yIHRoZSBvcHRpb25zIGNhbiBiZSB0aGUgZWxlbWVudCBodG1sIGF0dHJpYnV0ZXMgb2JqZWN0XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnNLZXkpIHtcblx0XHRcdFx0XHRcdHZhciAkb3B0aW9uc0dldHRlciA9ICRwYXJzZShvcHRpb25zS2V5KTtcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSAkb3B0aW9uc0dldHRlcihzY29wZSkgfHwge307XG5cdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMgJiYgJG9wdGlvbnNHZXR0ZXIuYXNzaWduKSB7XG5cdFx0XHRcdFx0XHRcdG9wdGlvbnMgPSB7XG5cdFx0XHRcdFx0XHRcdFx0cm93OiBpdGVtLnJvdyxcblx0XHRcdFx0XHRcdFx0XHRjb2w6IGl0ZW0uY29sLFxuXHRcdFx0XHRcdFx0XHRcdHNpemVYOiBpdGVtLnNpemVYLFxuXHRcdFx0XHRcdFx0XHRcdHNpemVZOiBpdGVtLnNpemVZLFxuXHRcdFx0XHRcdFx0XHRcdG1pblNpemVYOiAwLFxuXHRcdFx0XHRcdFx0XHRcdG1pblNpemVZOiAwLFxuXHRcdFx0XHRcdFx0XHRcdG1heFNpemVYOiBudWxsLFxuXHRcdFx0XHRcdFx0XHRcdG1heFNpemVZOiBudWxsXG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHRcdCRvcHRpb25zR2V0dGVyLmFzc2lnbihzY29wZSwgb3B0aW9ucyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSBhdHRycztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpdGVtLmluaXQoJGVsLCBncmlkc3Rlcik7XG5cblx0XHRcdFx0XHQkZWwuYWRkQ2xhc3MoJ2dyaWRzdGVyLWl0ZW0nKTtcblxuXHRcdFx0XHRcdHZhciBhc3BlY3RzID0gWydtaW5TaXplWCcsICdtYXhTaXplWCcsICdtaW5TaXplWScsICdtYXhTaXplWScsICdzaXplWCcsICdzaXplWScsICdyb3cnLCAnY29sJ10sXG5cdFx0XHRcdFx0XHQkZ2V0dGVycyA9IHt9O1xuXG5cdFx0XHRcdFx0dmFyIGV4cHJlc3Npb25zID0gW107XG5cdFx0XHRcdFx0dmFyIGFzcGVjdEZuID0gZnVuY3Rpb24oYXNwZWN0KSB7XG5cdFx0XHRcdFx0XHR2YXIgZXhwcmVzc2lvbjtcblx0XHRcdFx0XHRcdGlmICh0eXBlb2Ygb3B0aW9uc1thc3BlY3RdID09PSAnc3RyaW5nJykge1xuXHRcdFx0XHRcdFx0XHQvLyB3YXRjaCB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgc2NvcGVcblx0XHRcdFx0XHRcdFx0ZXhwcmVzc2lvbiA9IG9wdGlvbnNbYXNwZWN0XTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnNbYXNwZWN0LnRvTG93ZXJDYXNlKCldID09PSAnc3RyaW5nJykge1xuXHRcdFx0XHRcdFx0XHQvLyB3YXRjaCB0aGUgZXhwcmVzc2lvbiBpbiB0aGUgc2NvcGVcblx0XHRcdFx0XHRcdFx0ZXhwcmVzc2lvbiA9IG9wdGlvbnNbYXNwZWN0LnRvTG93ZXJDYXNlKCldO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChvcHRpb25zS2V5KSB7XG5cdFx0XHRcdFx0XHRcdC8vIHdhdGNoIHRoZSBleHByZXNzaW9uIG9uIHRoZSBvcHRpb25zIG9iamVjdCBpbiB0aGUgc2NvcGVcblx0XHRcdFx0XHRcdFx0ZXhwcmVzc2lvbiA9IG9wdGlvbnNLZXkgKyAnLicgKyBhc3BlY3Q7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRleHByZXNzaW9ucy5wdXNoKCdcIicgKyBhc3BlY3QgKyAnXCI6JyArIGV4cHJlc3Npb24pO1xuXHRcdFx0XHRcdFx0JGdldHRlcnNbYXNwZWN0XSA9ICRwYXJzZShleHByZXNzaW9uKTtcblxuXHRcdFx0XHRcdFx0Ly8gaW5pdGlhbCBzZXRcblx0XHRcdFx0XHRcdHZhciB2YWwgPSAkZ2V0dGVyc1thc3BlY3RdKHNjb3BlKTtcblx0XHRcdFx0XHRcdGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRcdFx0XHRpdGVtW2FzcGVjdF0gPSB2YWw7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdGZvciAodmFyIGkgPSAwLCBsID0gYXNwZWN0cy5sZW5ndGg7IGkgPCBsOyArK2kpIHtcblx0XHRcdFx0XHRcdGFzcGVjdEZuKGFzcGVjdHNbaV0pO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciB3YXRjaEV4cHJlc3Npb25zID0gJ3snICsgZXhwcmVzc2lvbnMuam9pbignLCcpICsgJ30nO1xuXHRcdFx0XHRcdC8vIHdoZW4gdGhlIHZhbHVlIGNoYW5nZXMgZXh0ZXJuYWxseSwgdXBkYXRlIHRoZSBpbnRlcm5hbCBpdGVtIG9iamVjdFxuXHRcdFx0XHRcdHNjb3BlLiR3YXRjaENvbGxlY3Rpb24od2F0Y2hFeHByZXNzaW9ucywgZnVuY3Rpb24obmV3VmFscywgb2xkVmFscykge1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgYXNwZWN0IGluIG5ld1ZhbHMpIHtcblx0XHRcdFx0XHRcdFx0dmFyIG5ld1ZhbCA9IG5ld1ZhbHNbYXNwZWN0XTtcblx0XHRcdFx0XHRcdFx0dmFyIG9sZFZhbCA9IG9sZFZhbHNbYXNwZWN0XTtcblx0XHRcdFx0XHRcdFx0aWYgKG9sZFZhbCA9PT0gbmV3VmFsKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0bmV3VmFsID0gcGFyc2VJbnQobmV3VmFsLCAxMCk7XG5cdFx0XHRcdFx0XHRcdGlmICghaXNOYU4obmV3VmFsKSkge1xuXHRcdFx0XHRcdFx0XHRcdGl0ZW1bYXNwZWN0XSA9IG5ld1ZhbDtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0ZnVuY3Rpb24gcG9zaXRpb25DaGFuZ2VkKCkge1xuXHRcdFx0XHRcdFx0Ly8gY2FsbCBzZXRQb3NpdGlvbiBzbyB0aGUgZWxlbWVudCBhbmQgZ3JpZHN0ZXIgY29udHJvbGxlciBhcmUgdXBkYXRlZFxuXHRcdFx0XHRcdFx0aXRlbS5zZXRQb3NpdGlvbihpdGVtLnJvdywgaXRlbS5jb2wpO1xuXG5cdFx0XHRcdFx0XHQvLyB3aGVuIGludGVybmFsIGl0ZW0gcG9zaXRpb24gY2hhbmdlcywgdXBkYXRlIGV4dGVybmFsbHkgYm91bmQgdmFsdWVzXG5cdFx0XHRcdFx0XHRpZiAoJGdldHRlcnMucm93ICYmICRnZXR0ZXJzLnJvdy5hc3NpZ24pIHtcblx0XHRcdFx0XHRcdFx0JGdldHRlcnMucm93LmFzc2lnbihzY29wZSwgaXRlbS5yb3cpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCRnZXR0ZXJzLmNvbCAmJiAkZ2V0dGVycy5jb2wuYXNzaWduKSB7XG5cdFx0XHRcdFx0XHRcdCRnZXR0ZXJzLmNvbC5hc3NpZ24oc2NvcGUsIGl0ZW0uY29sKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0c2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGl0ZW0ucm93ICsgJywnICsgaXRlbS5jb2w7XG5cdFx0XHRcdFx0fSwgcG9zaXRpb25DaGFuZ2VkKTtcblxuXHRcdFx0XHRcdGZ1bmN0aW9uIHNpemVDaGFuZ2VkKCkge1xuXHRcdFx0XHRcdFx0dmFyIGNoYW5nZWRYID0gaXRlbS5zZXRTaXplWChpdGVtLnNpemVYLCB0cnVlKTtcblx0XHRcdFx0XHRcdGlmIChjaGFuZ2VkWCAmJiAkZ2V0dGVycy5zaXplWCAmJiAkZ2V0dGVycy5zaXplWC5hc3NpZ24pIHtcblx0XHRcdFx0XHRcdFx0JGdldHRlcnMuc2l6ZVguYXNzaWduKHNjb3BlLCBpdGVtLnNpemVYKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdHZhciBjaGFuZ2VkWSA9IGl0ZW0uc2V0U2l6ZVkoaXRlbS5zaXplWSwgdHJ1ZSk7XG5cdFx0XHRcdFx0XHRpZiAoY2hhbmdlZFkgJiYgJGdldHRlcnMuc2l6ZVkgJiYgJGdldHRlcnMuc2l6ZVkuYXNzaWduKSB7XG5cdFx0XHRcdFx0XHRcdCRnZXR0ZXJzLnNpemVZLmFzc2lnbihzY29wZSwgaXRlbS5zaXplWSk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChjaGFuZ2VkWCB8fCBjaGFuZ2VkWSkge1xuXHRcdFx0XHRcdFx0XHRpdGVtLmdyaWRzdGVyLm1vdmVPdmVybGFwcGluZ0l0ZW1zKGl0ZW0pO1xuXHRcdFx0XHRcdFx0XHRncmlkc3Rlci5sYXlvdXRDaGFuZ2VkKCk7XG5cdFx0XHRcdFx0XHRcdHNjb3BlLiRicm9hZGNhc3QoJ2dyaWRzdGVyLWl0ZW0tcmVzaXplZCcsIGl0ZW0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHJldHVybiBpdGVtLnNpemVZICsgJywnICsgaXRlbS5zaXplWCArICcsJyArIGl0ZW0ubWluU2l6ZVggKyAnLCcgKyBpdGVtLm1heFNpemVYICsgJywnICsgaXRlbS5taW5TaXplWSArICcsJyArIGl0ZW0ubWF4U2l6ZVk7XG5cdFx0XHRcdFx0fSwgc2l6ZUNoYW5nZWQpO1xuXG5cdFx0XHRcdFx0dmFyIGRyYWdnYWJsZSA9IG5ldyBHcmlkc3RlckRyYWdnYWJsZSgkZWwsIHNjb3BlLCBncmlkc3RlciwgaXRlbSwgb3B0aW9ucyk7XG5cdFx0XHRcdFx0dmFyIHJlc2l6YWJsZSA9IG5ldyBHcmlkc3RlclJlc2l6YWJsZSgkZWwsIHNjb3BlLCBncmlkc3RlciwgaXRlbSwgb3B0aW9ucyk7XG5cblx0XHRcdFx0XHR2YXIgdXBkYXRlUmVzaXphYmxlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXNpemFibGUudG9nZ2xlKCFncmlkc3Rlci5pc01vYmlsZSAmJiBncmlkc3Rlci5yZXNpemFibGUgJiYgZ3JpZHN0ZXIucmVzaXphYmxlLmVuYWJsZWQpO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0dXBkYXRlUmVzaXphYmxlKCk7XG5cblx0XHRcdFx0XHR2YXIgdXBkYXRlRHJhZ2dhYmxlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRkcmFnZ2FibGUudG9nZ2xlKCFncmlkc3Rlci5pc01vYmlsZSAmJiBncmlkc3Rlci5kcmFnZ2FibGUgJiYgZ3JpZHN0ZXIuZHJhZ2dhYmxlLmVuYWJsZWQpO1xuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0dXBkYXRlRHJhZ2dhYmxlKCk7XG5cblx0XHRcdFx0XHRzY29wZS4kb24oJ2dyaWRzdGVyLWRyYWdnYWJsZS1jaGFuZ2VkJywgdXBkYXRlRHJhZ2dhYmxlKTtcblx0XHRcdFx0XHRzY29wZS4kb24oJ2dyaWRzdGVyLXJlc2l6YWJsZS1jaGFuZ2VkJywgdXBkYXRlUmVzaXphYmxlKTtcblx0XHRcdFx0XHRzY29wZS4kb24oJ2dyaWRzdGVyLXJlc2l6ZWQnLCB1cGRhdGVSZXNpemFibGUpO1xuXHRcdFx0XHRcdHNjb3BlLiRvbignZ3JpZHN0ZXItbW9iaWxlLWNoYW5nZWQnLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHVwZGF0ZVJlc2l6YWJsZSgpO1xuXHRcdFx0XHRcdFx0dXBkYXRlRHJhZ2dhYmxlKCk7XG5cdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRmdW5jdGlvbiB3aGljaFRyYW5zaXRpb25FdmVudCgpIHtcblx0XHRcdFx0XHRcdHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0XHRcdFx0dmFyIHRyYW5zaXRpb25zID0ge1xuXHRcdFx0XHRcdFx0XHQndHJhbnNpdGlvbic6ICd0cmFuc2l0aW9uZW5kJyxcblx0XHRcdFx0XHRcdFx0J09UcmFuc2l0aW9uJzogJ29UcmFuc2l0aW9uRW5kJyxcblx0XHRcdFx0XHRcdFx0J01velRyYW5zaXRpb24nOiAndHJhbnNpdGlvbmVuZCcsXG5cdFx0XHRcdFx0XHRcdCdXZWJraXRUcmFuc2l0aW9uJzogJ3dlYmtpdFRyYW5zaXRpb25FbmQnXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgdCBpbiB0cmFuc2l0aW9ucykge1xuXHRcdFx0XHRcdFx0XHRpZiAoZWwuc3R5bGVbdF0gIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cmFuc2l0aW9uc1t0XTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHZhciBkZWJvdW5jZWRUcmFuc2l0aW9uRW5kUHVibGlzaGVyID0gZ3JpZHN0ZXJEZWJvdW5jZShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0c2NvcGUuJGJyb2FkY2FzdCgnZ3JpZHN0ZXItaXRlbS10cmFuc2l0aW9uLWVuZCcsIGl0ZW0pO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fSwgNTApO1xuXG5cdFx0XHRcdFx0JGVsLm9uKHdoaWNoVHJhbnNpdGlvbkV2ZW50KCksIGRlYm91bmNlZFRyYW5zaXRpb25FbmRQdWJsaXNoZXIpO1xuXG5cdFx0XHRcdFx0c2NvcGUuJGJyb2FkY2FzdCgnZ3JpZHN0ZXItaXRlbS1pbml0aWFsaXplZCcsIGl0ZW0pO1xuXG5cdFx0XHRcdFx0cmV0dXJuIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc2l6YWJsZS5kZXN0cm95KCk7XG5cdFx0XHRcdFx0XHRcdGRyYWdnYWJsZS5kZXN0cm95KCk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRncmlkc3Rlci5yZW1vdmVJdGVtKGl0ZW0pO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZSkge31cblxuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0aXRlbS5kZXN0cm95KCk7XG5cdFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH1cblx0XSlcblxuXHQuZGlyZWN0aXZlKCdncmlkc3Rlck5vRHJhZycsIGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRyZXN0cmljdDogJ0EnLFxuXHRcdFx0bGluazogZnVuY3Rpb24oc2NvcGUsICRlbGVtZW50KSB7XG5cdFx0XHRcdCRlbGVtZW50LmFkZENsYXNzKCdncmlkc3Rlci1uby1kcmFnJyk7XG5cdFx0XHR9XG5cdFx0fTtcblx0fSlcblxuXHQ7XG5cbn0pKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
